type Account {
  address1: String
  address2: String
  chargeUser: User
  city: City!
  company: Company!
  createdAt: ISO8601DateTime!
  email: String
  emailNew: String
  fullName: String
  fullNameKana: String
  gmoPgMemberId: String
  gmoPgRegisted: Boolean!
  id: ID!
  kindId: Int!
  klass: String!
  loginId: String
  nameFamily: String
  nameFamilyKana: String
  nameFirst: String
  nameFirstKana: String
  nameJoined: String
  nameJoinedKana: String
  prefecture: Prefecture!
  stop: Boolean!
  telFixed: String
  telMobile: String
  telMobileNew: String
  updatedAt: ISO8601DateTime!
  zipCode: String
}

input AccountAppLaunchedPercentageConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
}

input AccountAppLaunchedStatisticConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
}

type AccountCards {
  cards: [GmoPgCard!]
  errors: [GmoPgError!]
}

"""
アカウントホームテンプレート
"""
type AccountHomeTemplate {
  account: Account!
  accountKlass: String!
  createdAt: ISO8601DateTime!
  homeTemplate: HomeTemplate!
  id: ID!
  updatedAt: ISO8601DateTime!
}

type AccountInvoice {
  accessId: String
  accessPass: String
  account: Account!
  accountKlass: String!
  amount: LongInteger!
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  building: Building
  chargeUser: User!
  chatComment: String
  company: Company!
  createdAt: ISO8601DateTime!
  detail: String!
  errorCode: String
  id: ID!
  orderId: String!
  overview: String!
  paidDate: ISO8601DateTime
  paymentMethod: GmoPaymentMethod
  paymentSettings: PaymentSettings!
  property: Property
  receipt: Attachment
  state: AccountInvoiceState!
  tax: LongInteger
  totalAmount: LongInteger!
  transactionId: String
  updateFileCommnent: String
  updatedAt: ISO8601DateTime!
  validDate: ISO8601DateTime!
}

input AccountInvoiceConditions {
  orderId: String
  accountId: ID
  accountKlass: String
  buildingId: ID
  propertyId: ID
  overview: String
  detail: String
  amount: Range
  totalAmount: Range
  state: AccountInvoiceState = null
  paidDate: RangeDate
  chargeUserName: String
  chargeUserId: ID
}

"""
The connection type for AccountInvoice.
"""
type AccountInvoiceConnection {
  """
  A list of edges.
  """
  edges: [AccountInvoiceEdge]

  """
  A list of nodes.
  """
  nodes: [AccountInvoice]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AccountInvoiceEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AccountInvoice
}

enum AccountInvoiceState {
  not_paid_yet
  timeout
  cancel
  paid
  paid_fail
  returned
}

"""
個人／法人区分
"""
type AccountKind {
  id: ID!
  name: String!
}

"""
オーナー／入居者区分
"""
enum AccountKlass {
  """
  オーナー
  """
  Owner

  """
  入居者
  """
  Resident
}

type AccountMailTemplate {
  account: Account!
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  mailTemplate: MailTemplate!
  sender: User!
  state: AccountMailTemplateState!
  updatedAt: ISO8601DateTime!
}

input AccountMailTemplateConditions {
  nameFamily: String
  nameFirst: String
  companyName: String
  title: String
  state: AccountMailTemplateState
}

"""
The connection type for AccountMailTemplate.
"""
type AccountMailTemplateConnection {
  """
  A list of edges.
  """
  edges: [AccountMailTemplateEdge]

  """
  A list of nodes.
  """
  nodes: [AccountMailTemplate]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AccountMailTemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AccountMailTemplate
}

enum AccountMailTemplateState {
  sending
  sent
  failed
  not_send
}

type AccountNotice {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  content: String!
  createdAt: ISO8601DateTime!

  """
  公開中はopen_status = true AND now between (open_start_at, open_end_at)
  """
  enabled: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  noticePriority: NoticePriority!
  owners: [Owner!]!
  pushReservedAt: ISO8601DateTime
  pushSchedulingMethod: PushSchedulingMethod
  pushedAt: ISO8601DateTime

  """
  既読
  """
  readStatus: Boolean!
  receiverType: NoticeTarget!

  """
  自動送信：True、手動送信：False
  """
  reserved: Boolean!
  residents: [Resident!]!
  shop: Shop
  state: NoticeState!
  title: String!
  updatedAt: ISO8601DateTime!

  """
  公開開始日
  """
  visibleFrom: ISO8601DateTime!

  """
  公開終了日
  """
  visibleUntil: ISO8601DateTime
}

"""
The connection type for AccountNotice.
"""
type AccountNoticeConnection {
  """
  A list of edges.
  """
  edges: [AccountNoticeEdge]

  """
  A list of nodes.
  """
  nodes: [AccountNotice]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AccountNoticeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AccountNotice
}

type AccountQuestionnaire {
  account: Account!
  accountQuestionnaires(
    states: [AccountQuestionnaireState!]
  ): [AccountQuestionnaire!]!
  answer: JSON
  answerCount: Int!
  answeredAt: ISO8601DateTime
  answers: [AccountQuestionnaire!]!
  contract: Contract
  createdAt: ISO8601DateTime!
  footer: String
  header: String
  id: ID!
  open: Boolean!
  openFrom: ISO8601DateTime!
  openUntil: ISO8601DateTime!
  pushEnabled: Boolean!
  pushScheduledTo: ISO8601DateTime
  pushSchedulingMethod: PushSchedulingMethod
  pushedAt: ISO8601DateTime
  question: JSON!
  resident: Resident
  residents: [Resident!]!
  responseRate: Float
  shop: Shop
  state: String!
  targetCount: Int!
  targetType: QuestionnaireTarget!
  title: String!
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
The connection type for AccountQuestionnaire.
"""
type AccountQuestionnaireConnection {
  """
  A list of edges.
  """
  edges: [AccountQuestionnaireEdge]

  """
  A list of nodes.
  """
  nodes: [AccountQuestionnaire]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AccountQuestionnaireEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AccountQuestionnaire
}

enum AccountQuestionnaireState {
  UNREAD
  READ
  ANSWERED
}

type AccountQuickQuestionnaire {
  account: Account!
  answeredAt: ISO8601DateTime
  id: ID!
  option: QuickQuestionnaireOption
  property: Property
  quickQuestionnaire: QuickQuestionnaire!
  resident: Resident!
}

union AccountUnion = Owner | Resident

"""
The connection type for AccountUnion.
"""
type AccountUnionConnection {
  """
  A list of edges.
  """
  edges: [AccountUnionEdge]

  """
  A list of nodes.
  """
  nodes: [AccountUnion]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AccountUnionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AccountUnion
}

type AccountUnreadMessagesAndNotices {
  account: Account!
  unreadMessagesNoticesTotal: Int!
}

"""
Objects which may be used for logging in
"""
union AccountUser = Account | PartnerUser | User

"""
Autogenerated input type of AddImage
"""
input AddImageInput {
  subjectId: ID!
  name: String!
  url: String!
  size: LongInteger!
  mimeType: String!
  topicCategoryId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AddImage
"""
type AddImagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  image: Attachment
  subject: AttachmentSubject
}

type AdminManager {
  companyId: Int!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  klass: String
  name: String
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
}

type AdminStaff {
  companyId: Int!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  klass: String
  name: String
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for AdminStaff.
"""
type AdminStaffConnection {
  """
  A list of edges.
  """
  edges: [AdminStaffEdge]

  """
  A list of nodes.
  """
  nodes: [AdminStaff]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AdminStaffEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AdminStaff
}

input AdminStaffsConditions {
  id: ID
  name: String
  email: String
  klass: String
  state: String
}

"""
管理方式
"""
type AdministrativeType {
  id: ID!
  name: String!
}

"""
Autogenerated input type of AgreeToTosFreedial
"""
input AgreeToTosFreedialInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AgreeToTosFreedial
"""
type AgreeToTosFreedialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of AgreeToTos
"""
input AgreeToTosInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AgreeToTos
"""
type AgreeToTosPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
電子契約
"""
type Agreement {
  agreedDate: ISO8601Date
  agreementSteps(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "number", direction: "asc" }
  ): AgreementStepConnection!
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  building: Building
  chargeUser: BranchStaff
  company: Company!
  companySealedInAdvance: Boolean
  companySealedInAdvanceTranslation: String
  createdAt: ISO8601DateTime!
  currentApprovable: Approvable!
  documentName: String!
  expirationDate: ISO8601Date
  id: ID!
  latestDocument: Attachment
  owner: Owner
  property: Property
  state: FlowState
  terminatable: Approvable
  topicCategory: TopicCategory!
  updatedAt: ISO8601DateTime!
}

input AgreementConditions {
  chargeUserId: ID
  ownerId: ID
  residentId: ID
  buildingId: ID
  propertyId: ID
  topicCategories: [ID!] = []
  documentName: String
  companySealedInAdvance: Boolean
  agreedDate: RangeDate
  expirationDate: RangeDate
  states: [FlowState!] = []
  propertyKindId: ID
  buildingOrOwnerName: String
}

"""
The connection type for Agreement.
"""
type AgreementConnection {
  """
  A list of edges.
  """
  edges: [AgreementEdge]

  """
  A list of nodes.
  """
  nodes: [Agreement]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AgreementEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Agreement
}

"""
電子契約の役割
"""
type AgreementPosition {
  id: ID!
  name: String!
}

"""
電子契約ステップ
"""
type AgreementStep {
  agreement: Agreement!
  agreementStepPositions: [AgreementStepPosition!]!
  approvable: Approvable
  comment: String
  createdAt: ISO8601DateTime!
  email: String
  final: Boolean
  id: ID!
  latestDocument: Attachment
  number: Int
  organizationName: String!
  position: AgreementPosition
  positionDescription: String
  requestBody: String
  sealRequired: Boolean
  sealRequiredTranslation: String
  sealedAt: ISO8601DateTime
  smsNumber: String
  state: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for AgreementStep.
"""
type AgreementStepConnection {
  """
  A list of edges.
  """
  edges: [AgreementStepEdge]

  """
  A list of nodes.
  """
  nodes: [AgreementStep]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AgreementStepEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AgreementStep
}

input AgreementStepInput {
  approvableId: ID
  organizationName: String!
  email: String
  smsNumber: String
  positionId: ID!
  positionDescription: String
  sealRequired: Boolean!
  agreementStepPositions: [AgreementStepPositionInput!] = []
  comment: String
  requestBody: String
}

"""
電子契約ステップポジション
"""
type AgreementStepPosition {
  agreement: Agreement!
  agreementStep: AgreementStep!
  createdAt: ISO8601DateTime!
  id: ID!
  isRequired: Boolean!
  label: String
  page: Int!
  positionType: String!
  updatedAt: ISO8601DateTime!
  x: Int!
  y: Int!
}

input AgreementStepPositionInput {
  label: String!
  x: Int!
  y: Int!
  page: Int!
  isRequired: Boolean = true
  positionType: String = "sign"
}

input AgreementStepPositionTextValueInput {
  agreementStepPositionId: ID!
  textValue: String
}

input AgreementStepUpdateInput {
  number: Int
  comment: String
}

"""
Autogenerated input type of AnswerQuestionnaire
"""
input AnswerQuestionnaireInput {
  questionnaireId: ID!
  answer: JSON!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AnswerQuestionnaire
"""
type AnswerQuestionnairePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  questionnaire: AccountQuestionnaire
}

"""
Autogenerated input type of AnswerQuickQuestionnaire
"""
input AnswerQuickQuestionnaireInput {
  quickQuestionnaireId: ID!
  optionId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of AnswerQuickQuestionnaire
"""
type AnswerQuickQuestionnairePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  quickQuestionnaire: QuickQuestionnaire
}

type Approvable {
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AttachmentConnection
  klass: String
  loginId: String
  name: String
}

"""
Attachment
"""
type Attachment {
  attachable: AttachmentSubject
  building: Building
  company: Company
  createdAt: ISO8601DateTime!
  id: ID!
  mimeType: String!
  name: String!
  objectKey: String!
  owner: Owner
  property: Property
  resident: Resident
  size: LongInteger!
  topicCategory: TopicCategory!
  updatedAt: ISO8601DateTime!
  url: String
}

"""
The connection type for Attachment.
"""
type AttachmentConnection {
  """
  A list of edges.
  """
  edges: [AttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [Attachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Attachment
}

input AttachmentInput {
  name: String!
  objectKey: String!
  mimeType: String!
  size: LongInteger!
  topicCategoryId: ID
}

enum AttachmentKind {
  BEFORE
  AFTER
}

"""
Type of attachment
"""
enum AttachmentResource {
  workflow
  csv
  agreement
  agreement_step
  topic
  avatar
  logo_company
  building
  property
  company
  shop
  revenue_expense_monthly_close
  revenue_expense_yearly_close
  owner_calculation
  bulletin
  facility_manual
  questionnaire
  account_invoice
  bulk_topic
  bulk_file_topic
  image_home_template
  inspection_report
  account
  partner_shop
  partner_user
  estimate_evidence
  quotation
  order
  invoice
  receipt
  logo_owner_web
  bulletin_image
  notice
  notice_image
  faq_media
  faq_file
  icon_owner_app
  icon_resident_app
  report
  banner
}

"""
Objects which may have attachments
"""
union AttachmentSubject =
    Agreement
  | Building
  | Company
  | InspectionClaim
  | InspectionImage
  | InspectionReport
  | Owner
  | Property
  | Topic
  | Workflow

input AttachmentsConditions {
  q: String
}

"""
A user-readable error
"""
type AttributeError {
  """
  A description of the error
  """
  message: String!

  """
  Which input value this error came from
  """
  path: [String!]

  """
  Localized name of the input causing the error
  """
  subject: String
}

"""
利用可能なプロパティ
"""
type AvailableProperty {
  address1: String
  address2: String
  administrativeType: AdministrativeType
  balconyArea: String
  building: Building!
  buildingMergedEquipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  city: City
  company: Company!
  contract: Contract
  createdAt: ISO8601DateTime!
  debited: Boolean

  """
  最後契約日
  """
  endUntil: ISO8601DateTime
  equipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  estimateRent: Int
  floor: Int
  handOver: HandOver
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "name", direction: "asc" }
  ): AttachmentConnection
  kind: PropertyKind!
  landPrivilege: LandPrivilege
  lastFollowedUpAt: ISO8601DateTime
  legacyId: String
  name: String
  note: String
  owner: Owner
  prefecture: Prefecture
  revenueExpenseItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    yearMonthAccrual: Int = null
  ): RevenueExpenseItemConnection
  roomArea: String
  roomLayout: RoomLayout
  structure: Structure
  updatedAt: ISO8601DateTime!
  virtualBank: VirtualBank
  zipCode: String
}

"""
The connection type for AvailableProperty.
"""
type AvailablePropertyConnection {
  """
  A list of edges.
  """
  edges: [AvailablePropertyEdge]

  """
  A list of nodes.
  """
  nodes: [AvailableProperty]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type AvailablePropertyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AvailableProperty
}

type Banner {
  attachment: Attachment
  createdAt: ISO8601DateTime!
  displayMethod: DisplayMethod!
  enabled: Boolean!
  id: ID!
  image: Attachment
  imageKind: ImageKind!
  limitedTime: ISO8601DateTime
  positionAt: Int
  updatedAt: ISO8601DateTime!
  url: String
}

"""
The connection type for Banner.
"""
type BannerConnection {
  """
  A list of edges.
  """
  edges: [BannerEdge]

  """
  A list of nodes.
  """
  nodes: [Banner]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BannerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Banner
}

input BannerInput {
  bannerId: ID
  attachmentId: ID
  imageKindId: ID!
  enabled: Boolean!
  displayMethodId: ID!
  limitedTime: ISO8601DateTime
  url: String
  positionAt: Int!
  _destroy: Boolean = false
  removeDefaultImage: Boolean = false
}

enum BigQueryOrderDirection {
  DESC
  ASC
}

type BranchInspector {
  avatarUrl: String!
  company: Company!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  enableOwnerPlan: Boolean!
  enableResidentPlan: Boolean!
  id: ID!
  klass: ClientUserKlassEnum
  legacyId: String
  managerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchShopConnection!
  name: String
  shops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchShopConnection!
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
  userFirebaseId: String!
}

"""
店舗責任者
"""
type BranchManager {
  avatarUrl: String!
  company: Company!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  enableAppLogin: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enableResidentPlan: Boolean!
  id: ID!
  klass: ClientUserKlassEnum
  legacyId: String
  name: String
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
}

"""
店舗
"""
type BranchShop {
  additionalBusinessHours: [ShopAdditionalBusinessHour!]
  address1: String
  address2: String
  allParents: [ShopUnion!]
  allStaff: [BranchStaff!]
  businessStatus: ShopBusinessStatusEnum
  city: City
  company: Company
  createdAt: ISO8601DateTime!
  headquarters: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AttachmentConnection
  legacyId: String
  level: Int!
  levelName: String!
  managerUser: BranchManager
  name: String
  noticeWhenClosed: String
  onFriday: ShopBusinessStatusEnum
  onMonday: ShopBusinessStatusEnum
  onSaturday: ShopBusinessStatusEnum
  onSunday: ShopBusinessStatusEnum
  onThursday: ShopBusinessStatusEnum
  onTuesday: ShopBusinessStatusEnum
  onWednesday: ShopBusinessStatusEnum
  openFromHhmmOnFriday: String
  openFromHhmmOnMonday: String
  openFromHhmmOnSaturday: String
  openFromHhmmOnSunday: String
  openFromHhmmOnThursday: String
  openFromHhmmOnTuesday: String
  openFromHhmmOnWednesday: String
  openUntilHhmmOnFriday: String
  openUntilHhmmOnMonday: String
  openUntilHhmmOnSaturday: String
  openUntilHhmmOnSunday: String
  openUntilHhmmOnThursday: String
  openUntilHhmmOnTuesday: String
  openUntilHhmmOnWednesday: String
  parent: ShopUnion!
  pgShopId: String
  prefecture: Prefecture
  staffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchStaffConnection
  tel: String
  updatedAt: ISO8601DateTime!
  zipCode: String
}

input BranchShopConditions {
  id: ID
  name: String
  tel: String
  managerName: String
  managerEmail: String
  userId: ID
  headquarters: Boolean
  branch: Boolean
  level: Int
  parentLevel: Int
}

"""
The connection type for BranchShop.
"""
type BranchShopConnection {
  """
  A list of edges.
  """
  edges: [BranchShopEdge]

  """
  A list of nodes.
  """
  nodes: [BranchShop]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BranchShopEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BranchShop
}

"""
店舗スタッフ
"""
type BranchStaff {
  avatarUrl: String!
  company: Company!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  enableAppLogin: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enableResidentPlan: Boolean!
  id: ID!
  klass: ClientUserKlassEnum
  legacyId: String
  managerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchShopConnection!
  name: String
  shops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchShopConnection!
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
  userFirebaseId: String!
}

"""
The connection type for BranchStaff.
"""
type BranchStaffConnection {
  """
  A list of edges.
  """
  edges: [BranchStaffEdge]

  """
  A list of nodes.
  """
  nodes: [BranchStaff]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BranchStaffEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BranchStaff
}

"""
建物
"""
type Building {
  address: String
  buildingArea: String
  buildingRate: Float
  builtMonth: Int
  builtYear: Int
  chargeBranchShop: ShopUnion!
  city: City
  company: Company!
  createdAt: ISO8601DateTime!
  equipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  estimateRent: Int
  floor: Int
  floorAreaRate: Float
  fullProfit: Int
  handOver: HandOver
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  landArea: String
  landPrivilege: LandPrivilege
  landUseZone: LandUseZone
  legacyId: String
  name: String
  note: String
  prefecture: Prefecture
  profit: Int
  properties(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PropertyConnection
  purchasePrice: LongInteger
  revenueExpenseItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    yearMonthAccrual: Int = null
  ): RevenueExpenseItemConnection
  revenueExpenseMonthlyCloseTask(
    ownerId: ID
    yearMonth: Int = null
  ): RevenueExpenseMonthlyCloseTask
  roadDirection1: String
  roadDirection2: String
  roadType1: RoadType
  roadType2: RoadType
  roadWidth1: String
  roadWidth2: String
  roomCount: Int!
  slider(sessionClass: SessionSliderClass = ResidentSlider): Slider
  stationName: String
  structure: Structure
  updatedAt: ISO8601DateTime!
  walkMinute: Int
  wishSellPrice: LongInteger
  zipCode: String
}

type BuildingAttachment {
  id: ID!
  lastUpdatedAt: ISO8601DateTime!
  name: String
  size: LongInteger!
}

"""
The connection type for BuildingAttachment.
"""
type BuildingAttachmentConnection {
  """
  A list of edges.
  """
  edges: [BuildingAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [BuildingAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BuildingAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BuildingAttachment
}

"""
The connection type for Building.
"""
type BuildingConnection {
  """
  A list of edges.
  """
  edges: [BuildingEdge]

  """
  A list of nodes.
  """
  nodes: [Building]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BuildingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Building
}

type BuildingExpense {
  amount: Int!
  id: ID!
  name: String!
}

type BuildingOwnerAttachment {
  id: ID!
  lastUpdatedAt: ISO8601DateTime!
  name: String
  ownerLoginId: String
  ownerName: String
  size: LongInteger!
}

"""
The connection type for BuildingOwnerAttachment.
"""
type BuildingOwnerAttachmentConnection {
  """
  A list of edges.
  """
  edges: [BuildingOwnerAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [BuildingOwnerAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BuildingOwnerAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BuildingOwnerAttachment
}

type BuildingSummary {
  address: String
  availableRooms: Int!
  city: City
  contracts: [Contract!]
  id: ID!
  image: String
  incomeRent: Int!
  latePaymentCount: Int!
  name: String
  prefecture: Prefecture
  totalIncome: Int!
  totalRooms: Int!
}

input BuildingsConditions {
  id: ID
  name: String
  wishSellPrice: String
  zipCode: String
  prefectureCode: String
  cityCode: String
  address: String
  stationName: String
  walkMinute: String
  landArea: String
  landPrivilegeId: ID
  buildingArea: String
  builtYear: String
  builtMonth: String
  structureId: ID
  floor: String
  buildingRate: String
  floorAreaRate: String
  landUseZoneId: ID
  roadDirection1: String
  roadWidth1: String
  roadType1Id: ID
  roadDirection2: String
  roadWidth2: String
  roadType2Id: ID
  handOverId: ID
  purchasePrice: String
  estimateRent: String
  note: String
  ownerId: ID
  legacyId: String
}

type BulkFileTopic {
  buildings: [Building!]
  company: Company!
  createdAt: ISO8601DateTime!
  file: JSON!
  id: ID!
  messageContent: String
  messageTitle: String!
  owners: [Owner!]
  topicCategory: TopicCategory!
  updatedAt: ISO8601DateTime!
}

input BulkFileTopicConditions {
  messageTitle: String
  messageContent: String
  topicCategoryId: ID
  ownerId: ID = null
  buildingId: ID = null
}

"""
The connection type for BulkFileTopic.
"""
type BulkFileTopicConnection {
  """
  A list of edges.
  """
  edges: [BulkFileTopicEdge]

  """
  A list of nodes.
  """
  nodes: [BulkFileTopic]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BulkFileTopicEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BulkFileTopic
}

input BulkPreviewAccountConditions {
  queryFunction: QueryAccountFunctionEnum!
  companyId: ID
  queryAccountKindId: ID
  bulkTopicTarget: BulkTopicTarget
  initialShopId: ID = null
  initialProperties: [ID!] = []
  initialResidents: [ID!] = []
  initialOwners: [ID!] = []
  endContractFrom: ISO8601Date
  endContractTo: ISO8601Date
  propertyKindId: ID = null
}

type BulkTopic {
  bulkTopicState: BulkTopicState!
  bulkTopicTarget: BulkTopicTarget!
  company: Company!
  createdAt: ISO8601DateTime!
  distributionScheduled: Boolean!
  distributionScheduledAt: ISO8601DateTime
  enabled: Boolean!
  id: ID!
  infoTitle: String!
  messageContent: String!
  messageTitle: String!
  properties: [Property!]
  residents: [Resident!]
  shop: Shop
  topicCategory: TopicCategory!
  updatedAt: ISO8601DateTime!
}

input BulkTopicConditions {
  infoTitle: String
  messageTitle: String
  messageContent: String
  topicCategoryId: ID
  enabled: Boolean = null
  distributionScheduledAt: RangeDate
  bulkTopicState: BulkTopicState = null
  bulkTopicTarget: BulkTopicTarget = null
  shopId: ID = null
  residentId: ID = null
  ownerId: ID = null
}

"""
The connection type for BulkTopic.
"""
type BulkTopicConnection {
  """
  A list of edges.
  """
  edges: [BulkTopicEdge]

  """
  A list of nodes.
  """
  nodes: [BulkTopic]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BulkTopicEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: BulkTopic
}

enum BulkTopicState {
  created
  processing
  stoped
  completed
}

enum BulkTopicTarget {
  """
  全配信
  """
  All

  """
  店舗指定
  """
  Shop

  """
  入居者指定
  """
  Resident

  """
  全配信
  """
  AllOwner

  """
  店舗指定
  """
  ShopOwner

  """
  建物指定
  """
  BuildingOwner

  """
  CSVインポート
  """
  CsvImport
}

"""
掲示板
"""
type Bulletin {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  bulletinKind: BulletinKind!
  content: String
  createdAt: ISO8601DateTime!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  open: Boolean!
  pushEnabled: Boolean!
  pushScheduledTo: ISO8601DateTime
  pushSchedulingMethod: PushSchedulingMethod
  pushedAt: ISO8601DateTime
  residents: [Resident!]!
  seen: Boolean
  shop: Shop
  state: BulletinState!
  title: String!
  updatedAt: ISO8601DateTime!
  user: User!
  visibleFrom: ISO8601DateTime!
}

input BulletinConditions {
  title: String
  bulletinKindId: ID
  visibleFrom: RangeDate
  createdAt: RangeDate
  userId: ID
  bulletinStickableIds: [ID!]
  attachment: Boolean
  year: Int = null
  open: Boolean
  pushEnabled: Boolean
  pushSchedulingMethodId: ID
  state: BulletinState
}

"""
The connection type for Bulletin.
"""
type BulletinConnection {
  """
  A list of edges.
  """
  edges: [BulletinEdge]

  """
  A list of nodes.
  """
  nodes: [Bulletin]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type BulletinEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Bulletin
}

type BulletinKind {
  id: ID!
  name: String!
}

enum BulletinState {
  UNDELIVERED
  SCHEDULED
  DELIVERED
}

"""
Autogenerated input type of CancelPayment
"""
input CancelPaymentInput {
  invoiceId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CancelPayment
"""
type CancelPaymentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  invoice: AccountInvoice
}

enum Category {
  FILE
  IMAGE
}

type CategoryAttachment {
  categoryGroupForApp: TopicCategoryGroup
  id: ID!
  lastUpdatedAt: ISO8601DateTime!
  name: String!
  size: LongInteger!
}

"""
The connection type for CategoryAttachment.
"""
type CategoryAttachmentConnection {
  """
  A list of edges.
  """
  edges: [CategoryAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [CategoryAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CategoryAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CategoryAttachment
}

type ChargeMethod {
  id: ID!
  name: String!
}

type ChatChargeUser {
  account: Account!
  accountKlass: String!
  chatBranchShop: ShopUnion!
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
  user: User!
}

input ChatChargeUserInput {
  userId: ID!
  shopId: ID!
}

type ChatPageOpen {
  country: String!
  eventDate: String!
  eventName: String!
  platform: String!
  stringValue: String!
  userId: String!
}

input ChatPageOpenConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  orderDirection: BigQueryOrderDirection = DESC
  orderBy: [ChatPageOpenEnum!] = [EVENTDATE]
}

enum ChatPageOpenEnum {
  EVENTDATE
  EVENTNAME
  USERID
  COUNTRY
  STRINGVALUE
  PLATFORM
}

input ChatPageOpenPercentageConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  type: ChatPageOpenEnum!
}

input ChatPageOpenStatisticConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  type: ChatPageOpenEnum!
}

type ChatTemplate {
  accountKlass: AccountKlass!
  createdAt: ISO8601DateTime!
  id: ID!
  template: String!
  title: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for ChatTemplate.
"""
type ChatTemplateConnection {
  """
  A list of edges.
  """
  edges: [ChatTemplateEdge]

  """
  A list of nodes.
  """
  nodes: [ChatTemplate]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type ChatTemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ChatTemplate
}

input ChatTemplatesConditions {
  title: String
  accountKlass: AccountKlass
}

"""
市区町村
"""
type City {
  code: String!
  id: ID!
  name: String!
  nameKana: String!
  prefecture: Prefecture
}

"""
The connection type for City.
"""
type CityConnection {
  """
  A list of edges.
  """
  edges: [CityEdge]

  """
  A list of nodes.
  """
  nodes: [City]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CityEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: City
}

"""
A klass can be specified when creating/updating a client user
"""
enum ClientUserKlassEnum {
  BranchManager
  BranchStaff
  BranchInspector
  HeadquartersManager
  HeadquartersStaff
}

"""
Autogenerated input type of CloneInspectionReport
"""
input CloneInspectionReportInput {
  sampleId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CloneInspectionReport
"""
type CloneInspectionReportPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  inspectionReport: InspectionReport
}

input CompaniesConditions {
  id: ID
  licenseAdministrators: [ID!]
  licenseExpression: String
  name: String
  plans: [ID!]
  representativeName: String
  state: String
  chargeMethodId: ID
  headquartersShopName: String
  headquartersShopTel: String
  headquartersManagerName: String
  headquartersManagerEmail: String
  enableCarousel: Boolean
  ownerAppBundleId: String
  ownerAppPackageName: String
  residentAppBundleId: String
  residentAppPackageName: String
  invitationCode: String
}

"""
管理会社
"""
type Company {
  address1: String
  address2: String
  branchShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchShopConnection
  buildings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BuildingConnection
  chargeAgreement: Int
  chargeAppCustomize: Int
  chargeBasic: Int!
  chargeChintaiPay: Int
  chargeFreeDial: Int
  chargeHouseMovingConsultation: Int
  chargeMethod: ChargeMethod!
  chargeOwnerPlan: Int
  chargePartnerPlan: Int
  chargePerAgreement: Int
  chargePerSms: Int!
  chargePropertyValuation: Int
  chargeResidentPlan: Int
  chargeVirtualAccount: Int
  city: City
  createdAt: ISO8601DateTime!
  enableAgreement: Boolean!
  enableAppCustomize: Boolean!
  enableCarousel: Boolean!
  enableChintaiPay: Boolean!
  enableFreeDial: Boolean!
  enableHouseMovingConsultation: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enablePropertyValuation: Boolean!
  enableResidentPlan: Boolean!
  enableSpecialize: Boolean!
  enableVirtualAccount: Boolean!
  headquartersShop: HeadquartersShop
  id: ID!
  invitationCode: String
  invitationCodeExpiredAt: ISO8601DateTime
  isLimitedFunction: Boolean!
  licenseAdministrator: LicenseAdministrator
  licenseExpression: String
  logoCompany: Attachment
  logoOwnerWeb: Attachment
  name: String
  nameKana: String
  note: String
  ownerAppBundleId: String
  ownerAppIconName: String!
  ownerAppPackageName: String
  ownerAppPolicyUrl: String!
  ownerAppTermUrl: String!
  ownerAppTextColor: String
  ownerAppThemeColor: String!
  ownerWebOperatingCompanyUrl: String!
  ownerWebPolicyUrl: String!
  ownerWebTermUrl: String!
  ownerWebTextColor: String
  ownerWebThemeColor: String!
  owners(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OwnerConnection
  plan: Plan
  prefecture: Prefecture
  properties(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PropertyConnection
  representativeName: String
  residentAppBundleId: String
  residentAppIconName: String!
  residentAppPackageName: String
  residentAppPolicyUrl: String!
  residentAppTermUrl: String!
  residentAppTextColor: String
  residentAppThemeColor: String!
  specializeName: String
  state: String
  updatedAt: ISO8601DateTime!
  yearlyNote: String
  zipCode: String
}

type CompanyAttachment {
  id: ID!
  lastUpdatedAt: ISO8601DateTime!
  name: String
  size: LongInteger!
}

"""
The connection type for CompanyAttachment.
"""
type CompanyAttachmentConnection {
  """
  A list of edges.
  """
  edges: [CompanyAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [CompanyAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CompanyAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CompanyAttachment
}

"""
The connection type for Company.
"""
type CompanyConnection {
  """
  A list of edges.
  """
  edges: [CompanyEdge]

  """
  A list of nodes.
  """
  nodes: [Company]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CompanyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Company
}

type CompanyFunctions {
  enableAgreement: Boolean!
  enableAppCustomize: Boolean!
  enableCarousel: Boolean!
  enableChintaiPay: Boolean!
  enableHouseMovingConsultation: Boolean!
  enableManagementPayment: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enablePropertyValuation: Boolean!
  enableResidentPlan: Boolean!
  enableSpecialize: Boolean!
  enableVirtualAccount: Boolean!
}

type CompanyInvoice {
  chargeAgreement: Int
  chargeAppCustomize: Int
  chargeBasic: Int!
  chargeChintaiPay: Int
  chargeCsvWork: Int
  chargeFreeDial: Int
  chargeHouseMovingConsultation: Int
  chargeInitial: Int
  chargeInitialAppCustomize: Int
  chargeMethod: ChargeMethod!
  chargeOwnerPlan: Int
  chargePartnerPlan: Int
  chargePerAgreement: Int
  chargePerSms: Int!
  chargePropertyValuation: Int
  chargeResidentPlan: Int
  chargeVirtualAccount: Int
  company: Company!
  countAgreement: Int
  countSms: Int!
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
  yearMonth: Int!
}

input CompanyInvoiceConditions {
  yearMonth: Int
  chargeMethodId: ID
  companyId: ID
}

"""
The connection type for CompanyInvoice.
"""
type CompanyInvoiceConnection {
  """
  A list of edges.
  """
  edges: [CompanyInvoiceEdge]

  """
  A list of nodes.
  """
  nodes: [CompanyInvoice]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CompanyInvoiceEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CompanyInvoice
}

type CompanyIp {
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  ipKind: IpKind!
  ips: [String!]
  updatedAt: ISO8601DateTime!
}

"""
The connection type for CompanyIp.
"""
type CompanyIpConnection {
  """
  A list of edges.
  """
  edges: [CompanyIpEdge]

  """
  A list of nodes.
  """
  nodes: [CompanyIp]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CompanyIpEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CompanyIp
}

"""
管理会社のレイヤの名称
"""
type CompanyLevelName {
  level: Int!
  name: String!
}

type CompanyPartnerShop {
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  partnerShop: PartnerShop!
  state: String!
  updatedAt: ISO8601DateTime!
}

input CompanyPartnerShopConditions {
  name: String
  telMobile: String
  address1: String
  managerName: String
  managerEmail: String
  state: CompanyPartnerShopState
  partnerCompanyName: String
}

"""
The connection type for CompanyPartnerShop.
"""
type CompanyPartnerShopConnection {
  """
  A list of edges.
  """
  edges: [CompanyPartnerShopEdge]

  """
  A list of nodes.
  """
  nodes: [CompanyPartnerShop]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CompanyPartnerShopEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CompanyPartnerShop
}

enum CompanyPartnerShopState {
  REQUESTED
  CONNECTED
  REJECTED
  DISCONNECTED
}

type CompanyPaymentInfo {
  applicationExpirationDate: String
  company: Company
  companyName: String
  createdAt: ISO8601DateTime
  email: String
  id: ID
  keyHash: String
  location: String
  notes: String
  operationManager: String
  paymentMethod: String
  pgPaymentApi: String
  pgShopId: String
  pgSiteId: String
  phoneNumber: String
  productDeliveryMethod: String
  productDeliveryTime: String
  requiredAmount: String
  returnPolicy: String
  saleQuantity: String
  updatedAt: ISO8601DateTime
  url: String
}

type CompanyShopLevel {
  level: Int
  name: String
  shops: [Shop!]!
}

"""
Autogenerated input type of ConfirmContactChange
"""
input ConfirmContactChangeInput {
  code: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ConfirmContactChange
"""
type ConfirmContactChangePayload {
  account: Account

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

enum ConstructionState {
  not_started
  inprogress
  completed
}

type ContactKind {
  id: ID!
  name: String!
}

"""
優先連絡先
"""
type ContactPriority {
  id: ID!
  name: String!
}

"""
契約
"""
type Contract {
  building: Building
  chargeAccumulation: Int!
  chargeAdditional: Int!
  chargeBond: Int!
  chargeDeposit: Int!
  chargeGratuity: Int!
  chargeManagement: Int!
  chargeParking: Int!
  chargeRent: Int!
  cohabitantNames: String
  company: Company!
  contractCancellation: ContractCancellation
  copyableFlag: Boolean
  corporateGuarantorName: String
  createdAt: ISO8601DateTime!
  endDate: ISO8601DateTime
  endUntil: ISO8601DateTime!
  id: ID!
  individualGuarantorName: String
  legacyId: String
  monthsOfRentForRenewal: Int!
  note: String
  noticePeriod: Int
  owner: Owner!
  property: Property!
  provisions: [ContractProvision!]!
  resident: Resident!
  startFrom: ISO8601DateTime!
  sublease: Boolean!
  updatedAt: ISO8601DateTime!
}

type ContractAttachment {
  buildingName: String
  lastUpdatedAt: ISO8601DateTime!
  propertyId: ID!
  propertyName: String
  size: LongInteger!
}

"""
The connection type for ContractAttachment.
"""
type ContractAttachmentConnection {
  """
  A list of edges.
  """
  edges: [ContractAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [ContractAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type ContractAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ContractAttachment
}

"""
契約解除
"""
type ContractCancellation {
  """
  解約申込日
  """
  cancelRegistrationDate: ISO8601Date
  cancellationDate: ISO8601Date
  cancellationNotice: Int
  chargeUser: User
  company: Company!
  confirmedDate: ISO8601Date
  contract: ContractUnion
  contractCancellationCalculation: ContractCancellationCalculation
  contractCancellationReason: ContractCancellationReason
  countEstimate: Int
  createdAt: ISO8601DateTime!
  decisionDate: ISO8601DateTime
  decisionType: String
  estimates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    estimateGroupKind: EstimateGroupKindValue
  ): EstimateConnection
  homeStatus: HomeStatus
  id: ID!
  isManualInput: Boolean
  issueCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "work_category_id", direction: "asc" }
  ): IssueCategoryConnection
  keyForRent: String
  keyStoredPlace: String

  """
  退去日
  """
  movingDate: ISO8601Date
  note: String
  partnerShop: PartnerShop
  partnerState: String!
  partnerUser: PartnerUser
  pic: User
  reasonDetail: String
  reminder: Boolean
  requestedDate: ISO8601Date
  residentApp: Boolean
  state: String!
  updatedAt: ISO8601DateTime!
  witnessComment: String
  witnessConfirmedAt: ISO8601DateTime
  witnessDate1: ISO8601DateTime
  witnessDate2: ISO8601DateTime
  witnessDate3: ISO8601DateTime
  witnessState: ContractCancellationWitnessState!
}

type ContractCancellationCalculation {
  building: Building
  buildingName: String

  """
  解約受付
  """
  cancellationReceptionDisplayType: Int

  """
  解約受付
  """
  cancellationReceptionIsActive: Boolean

  """
  解約受付
  """
  cancellationReceptionPartnerActive: Boolean

  """
  解約受付
  """
  cancellationReceptionPartnerState: String

  """
  解約受付
  """
  cancellationReceptionState: String

  """
  解約報告
  """
  cancellationReportDisplayType: Int

  """
  解約報告
  """
  cancellationReportIsActive: Boolean

  """
  解約報告
  """
  cancellationReportPartnerActive: Boolean

  """
  解約報告
  """
  cancellationReportPartnerState: String

  """
  解約報告
  """
  cancellationReportState: String
  chargeOwnerName: String
  company: Company

  """
  税込み額
  """
  companyTotal: Float
  contractCancellation: ContractCancellation!
  createdAt: ISO8601DateTime!
  id: ID!

  """
  請求書
  """
  invoiceDisplayType: Int

  """
  請求書
  """
  invoiceIsActive: Boolean

  """
  請求書
  """
  invoicePartnerActive: Boolean

  """
  請求書
  """
  invoicePartnerState: String

  """
  請求書
  """
  invoiceState: String

  """
  注文書
  """
  orderDisplayType: Int

  """
  注文書
  """
  orderIsActive: Boolean

  """
  注文書
  """
  orderPartnerActive: Boolean

  """
  注文書
  """
  orderPartnerState: String

  """
  注文書
  """
  orderState: String
  owner: Owner
  ownerActualWitnessDate: ISO8601DateTime
  ownerCompanyExpectCompleteConstructionDate: ISO8601DateTime

  """
  工事完了日
  """
  ownerCompletionDate: ISO8601Date

  """
  見積作成日
  """
  ownerEstimatedCreationDate: ISO8601Date

  """
  見積受領日
  """
  ownerEstimatedReceiptDate: ISO8601Date

  """
  見積依頼日
  """
  ownerEstimatedRequestDate: ISO8601Date
  ownerExpectCompleteConstructionDate: ISO8601DateTime
  ownerExpectedCompletionDate: ISO8601Date
  ownerName: String

  """
  発注日
  """
  ownerOrderDate: ISO8601Date

  """
  オ－ナ－受注
  """
  ownerOrderDisplayType: Int

  """
  オ－ナ－受注
  """
  ownerOrderIsActive: Boolean

  """
  オ－ナ－受注
  """
  ownerOrderPartnerActive: Boolean

  """
  オ－ナ－受注
  """
  ownerOrderPartnerState: String
  ownerOrderReceiptDate: ISO8601Date

  """
  オ－ナ－受注
  """
  ownerOrderState: String

  """
  オ－ナ－見積
  """
  ownerQuoteDisplayType: Int

  """
  オ－ナ－見積
  """
  ownerQuoteIsActive: Boolean

  """
  オ－ナ－見積
  """
  ownerQuotePartnerActive: Boolean

  """
  オ－ナ－見積
  """
  ownerQuotePartnerState: String

  """
  オ－ナ－見積
  """
  ownerQuoteState: String

  """
  工事完了報告日
  """
  ownerReportCompletionDate: ISO8601Date

  """
  報告書作成日
  """
  ownerReportCreationDate: ISO8601Date

  """
  オ－ナ－報告
  """
  ownerReportDisplayType: Int

  """
  オ－ナ－報告
  """
  ownerReportIsActive: Boolean

  """
  オ－ナ－報告
  """
  ownerReportPartnerActive: Boolean

  """
  オ－ナ－報告
  """
  ownerReportPartnerState: String

  """
  オ－ナ－報告
  """
  ownerReportState: String

  """
  オ－ナ－請求
  """
  ownerRequestDisplayType: Int

  """
  オ－ナ－請求
  """
  ownerRequestIsActive: Boolean

  """
  オ－ナ－請求
  """
  ownerRequestPartnerActive: Boolean

  """
  オ－ナ－請求
  """
  ownerRequestPartnerState: String

  """
  オ－ナ－請求
  """
  ownerRequestState: String

  """
  見積提出日
  """
  ownerSendAt: ISO8601DateTime

  """
  税込み額
  """
  ownerTotal: Float
  partnerActualWitnessDate: ISO8601DateTime
  partnerCompanyExpectCompleteConstructionDate: ISO8601DateTime

  """
  工事完了日
  """
  partnerCompletionDate: ISO8601Date

  """
  見積作成日
  """
  partnerEstimatedCreationDate: ISO8601Date

  """
  見積受領日
  """
  partnerEstimatedReceiptDate: ISO8601Date

  """
  見積依頼日
  """
  partnerEstimatedRequestDate: ISO8601Date
  partnerExpectCompleteConstructionDate: ISO8601DateTime
  partnerExpectedCompletionDate: ISO8601Date

  """
  請求
  """
  partnerInvoiceDisplayType: Int

  """
  業者請求
  """
  partnerInvoiceIsActive: Boolean

  """
  請求
  """
  partnerInvoicePartnerActive: Boolean

  """
  請求
  """
  partnerInvoicePartnerState: String

  """
  業者請求
  """
  partnerInvoiceState: String

  """
  発注日
  """
  partnerOrderDate: ISO8601Date

  """
  受注
  """
  partnerOrderDisplayType: Int

  """
  業者発注
  """
  partnerOrderIsActive: Boolean

  """
  受注
  """
  partnerOrderPartnerActive: Boolean

  """
  受注
  """
  partnerOrderPartnerState: String
  partnerOrderReceiptDate: ISO8601Date

  """
  業者発注
  """
  partnerOrderState: String

  """
  見積作成
  """
  partnerQuoteDisplayType: Int

  """
  業者見積
  """
  partnerQuoteIsActive: Boolean

  """
  見積作成
  """
  partnerQuotePartnerActive: Boolean

  """
  見積作成
  """
  partnerQuotePartnerState: String

  """
  業者見積
  """
  partnerQuoteState: String

  """
  工事完了報告日
  """
  partnerReportCompletionDate: ISO8601Date

  """
  報告書作成日
  """
  partnerReportCreationDate: ISO8601Date

  """
  完了報告
  """
  partnerReportDisplayType: Int

  """
  業者報告
  """
  partnerReportIsActive: Boolean

  """
  完了報告
  """
  partnerReportPartnerActive: Boolean

  """
  完了報告
  """
  partnerReportPartnerState: String

  """
  業者報告
  """
  partnerReportState: String

  """
  見積提出日
  """
  partnerSendAt: ISO8601DateTime
  partnerShop: PartnerShop

  """
  税込み額
  """
  partnerTotal: Float
  property: Property
  propertyName: String

  """
  見積書
  """
  quotationDisplayType: Int

  """
  見積書
  """
  quotationIsActive: Boolean

  """
  見積書
  """
  quotationPartnerActive: Boolean

  """
  見積書
  """
  quotationPartnerState: String

  """
  見積書
  """
  quotationState: String

  """
  報告書
  """
  reportDisplayType: Int

  """
  報告書
  """
  reportIsActive: Boolean

  """
  報告書
  """
  reportPartnerActive: Boolean

  """
  報告書
  """
  reportPartnerState: String

  """
  報告書
  """
  reportState: String

  """
  見積依頼
  """
  requestQuotationDisplayType: Int

  """
  見積依頼
  """
  requestQuotationIsActive: Boolean

  """
  見積依頼
  """
  requestQuotationPartnerActive: Boolean

  """
  見積依頼
  """
  requestQuotationPartnerState: String

  """
  見積依頼
  """
  requestQuotationState: String
  resident: Resident
  residentActualWitnessDate: ISO8601DateTime
  residentCompanyExpectCompleteConstructionDate: ISO8601DateTime

  """
  工事完了日
  """
  residentCompletionDate: ISO8601Date

  """
  見積作成日
  """
  residentEstimatedCreationDate: ISO8601Date

  """
  見積受領日
  """
  residentEstimatedReceiptDate: ISO8601Date

  """
  見積依頼日
  """
  residentEstimatedRequestDate: ISO8601Date
  residentExpectCompleteConstructionDate: ISO8601DateTime
  residentExpectedCompletionDate: ISO8601Date
  residentName: String

  """
  発注日
  """
  residentOrderDate: ISO8601Date

  """
  入居者受注
  """
  residentOrderDisplayType: Int

  """
  入居者受注
  """
  residentOrderIsActive: Boolean

  """
  入居者受注
  """
  residentOrderPartnerActive: Boolean

  """
  入居者受注
  """
  residentOrderPartnerState: String
  residentOrderReceiptDate: ISO8601Date

  """
  入居者受注
  """
  residentOrderState: String

  """
  入居者見積
  """
  residentQuoteDisplayType: Int

  """
  入居者見積
  """
  residentQuoteIsActive: Boolean

  """
  入居者見積
  """
  residentQuotePartnerActive: Boolean

  """
  入居者見積
  """
  residentQuotePartnerState: String

  """
  入居者見積
  """
  residentQuoteState: String

  """
  工事完了報告日
  """
  residentReportCompletionDate: ISO8601Date

  """
  報告書作成日
  """
  residentReportCreationDate: ISO8601Date

  """
  見積提出日
  """
  residentSendAt: ISO8601DateTime

  """
  税込み額
  """
  residentTotal: Float
  updatedAt: ISO8601DateTime!

  """
  立会い
  """
  witnessDisplayType: Int

  """
  立会い
  """
  witnessIsActive: Boolean

  """
  立会い
  """
  witnessPartnerActive: Boolean

  """
  立会い
  """
  witnessPartnerState: String

  """
  立会い依頼
  """
  witnessRequestDisplayType: Int

  """
  立会い依頼
  """
  witnessRequestIsActive: Boolean

  """
  立会い依頼
  """
  witnessRequestPartnerActive: Boolean

  """
  立会い依頼
  """
  witnessRequestPartnerState: String

  """
  立会い依頼
  """
  witnessRequestState: String

  """
  立会い
  """
  witnessState: String
}

input ContractCancellationConditions {
  states: [ContractCancellationState!]
  partnerStates: [ContractCancellationPartnerState!]
  partnerShopName: String
  buildingName: String
  propertyName: String
  ownerName: String
  chargeOwnerName: String
  residentName: String
  createdAt: RangeDate
  decisionDate: RangeDate
  witnessConfirmedAt: RangeDate
  cancellationDate: RangeDate
  partnerEstimatedReceiptDate: RangeDate
  ownerEstimatedReceiptDate: RangeDate
  partnerOrderDate: RangeDate
  ownerOrderDate: RangeDate
  partnerExpectedCompletionDate: RangeDate
  ownerExpectedCompletionDate: RangeDate
  residentExpectedCompletionDate: RangeDate
  partnerCompletionDate: RangeDate
  ownerCompletionDate: RangeDate
  residentCompletionDate: RangeDate
  companyName: String
  requestedDate: RangeDate
  chargeUserName: String
  confirmedDate: RangeDate
  cancellationReceptionState: String
  witnessRequestState: String
  requestQuotationState: String
  cancellationReportState: String
  witnessState: String
  quotationState: String
  partnerQuoteState: String
  residentQuoteState: String
  ownerQuoteState: String
  orderState: String
  residentOrderState: String
  ownerOrderState: String
  partnerOrderState: String
  reportState: String
  partnerReportState: String
  ownerReportState: String
  invoiceState: String
  partnerInvoiceState: String
  ownerRequestState: String
  cancellationReceptionPartnerState: String
  witnessRequestPartnerState: String
  requestQuotationPartnerState: String
  cancellationReportPartnerState: String
  witnessPartnerState: String
  quotationPartnerState: String
  partnerQuotePartnerState: String
  residentQuotePartnerState: String
  ownerQuotePartnerState: String
  orderPartnerState: String
  residentOrderPartnerState: String
  ownerOrderPartnerState: String
  partnerOrderPartnerState: String
  reportPartnerState: String
  partnerReportPartnerState: String
  ownerReportPartnerState: String
  invoicePartnerState: String
  partnerInvoicePartnerState: String
  ownerRequestPartnerState: String
  cancellationReceptionIsActive: Boolean
  cancellationReceptionPartnerActive: Boolean
  witnessRequestIsActive: Boolean
  witnessRequestPartnerActive: Boolean
  requestQuotationIsActive: Boolean
  requestQuotationPartnerActive: Boolean
  cancellationReportIsActive: Boolean
  cancellationReportPartnerActive: Boolean
  witnessIsActive: Boolean
  witnessPartnerActive: Boolean
  quotationIsActive: Boolean
  quotationPartnerActive: Boolean
  partnerQuoteIsActive: Boolean
  partnerQuotePartnerActive: Boolean
  residentQuoteIsActive: Boolean
  residentQuotePartnerActive: Boolean
  ownerQuoteIsActive: Boolean
  ownerQuotePartnerActive: Boolean
  orderIsActive: Boolean
  orderPartnerActive: Boolean
  residentOrderIsActive: Boolean
  residentOrderPartnerActive: Boolean
  ownerOrderIsActive: Boolean
  ownerOrderPartnerActive: Boolean
  partnerOrderIsActive: Boolean
  partnerOrderPartnerActive: Boolean
  reportIsActive: Boolean
  reportPartnerActive: Boolean
  partnerReportIsActive: Boolean
  partnerReportPartnerActive: Boolean
  ownerReportIsActive: Boolean
  ownerReportPartnerActive: Boolean
  invoiceIsActive: Boolean
  invoicePartnerActive: Boolean
  partnerInvoiceIsActive: Boolean
  partnerInvoicePartnerActive: Boolean
  ownerRequestIsActive: Boolean
  ownerRequestPartnerActive: Boolean
}

type ContractCancellationPage {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  nodes: [ContractCancellation!]!
  nodesCount: Int!
  pagesCount: Int!
}

enum ContractCancellationPartnerState {
  partner_processing
  partner_completed
  partner_cancelled
}

"""
解約理由
"""
type ContractCancellationReason {
  id: ID!
  name: String!
}

enum ContractCancellationState {
  processing
  completed
  cancelled
}

enum ContractCancellationWitnessState {
  witness_received
  witness_arranged
  witness_completed
}

input ContractConditions {
  ownerId: ID
  buildingId: ID
  propertyKindId: ID
  propertyId: ID
  residentId: ID
  yearMonthAccrual: ISO8601Date
  startFrom: ISO8601Date
  endUntil: ISO8601Date
  endDate: ISO8601Date
  includeExpired: Boolean = false
  legacyId: String
  sublease: Boolean
  buildingOrOwnerName: String
  address: String
  residentName: String
  excludeHasContractCancellation: Boolean = false
}

"""
The connection type for Contract.
"""
type ContractConnection {
  """
  A list of edges.
  """
  edges: [ContractEdge]

  """
  A list of nodes.
  """
  nodes: [Contract]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type ContractEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Contract
}

type ContractProvision {
  displayOrder: Int
  id: ID!
  provision: String!
}

union ContractUnion = Contract | RawContract

type ContributionByDateData {
  contribution: Int!
  eventDate: String!
}

"""
Autogenerated input type of ConvertColumnData
"""
input ConvertColumnDataInput {
  values: [String!]!
  rules: [CsvTemplateMappingRuleInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ConvertColumnData
"""
type ConvertColumnDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  convertColumnData: [String!]
  errors: [AttributeError!]!
}

"""
Autogenerated input type of ConvertData
"""
input ConvertDataInput {
  contentCsvData: [CsvDataInput!]!
  csvTemplateId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ConvertData
"""
type ConvertDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contentCsvData: [CsvData!]
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CountFaqStatistic
"""
input CountFaqStatisticInput {
  faqId: ID!
  faqKindCounter: FaqKindCounter!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CountFaqStatistic
"""
type CountFaqStatisticPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faq: Faq
}

"""
Autogenerated input type of CreateAccountHomeTemplate
"""
input CreateAccountHomeTemplateInput {
  homeTemplateId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAccountHomeTemplate
"""
type CreateAccountHomeTemplatePayload {
  accountHomeTemplate: AccountHomeTemplate

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateAccountInvoice
"""
input CreateAccountInvoiceInput {
  accountId: ID!
  buildingId: ID
  propertyId: ID
  detail: String!
  overview: String!
  amount: LongInteger!
  tax: LongInteger = 0
  validDate: ISO8601DateTime
  chatComment: String
  updateFileCommnent: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAccountInvoice
"""
type CreateAccountInvoicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  invoice: AccountInvoice
}

"""
Autogenerated input type of CreateAdminStaff
"""
input CreateAdminStaffInput {
  email: String!
  name: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAdminStaff
"""
type CreateAdminStaffPayload {
  adminStaff: AdminStaff

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateAgreement
"""
input CreateAgreementInput {
  topicCategoryId: ID!
  propertyId: ID
  ownerId: ID
  accountKlass: AccountKlass = Owner
  companySealedInAdvance: Boolean!
  agreementSteps: [AgreementStepInput!]!
  agreedDate: ISO8601Date
  expirationDate: ISO8601Date
  documentName: String!
  residentId: ID
  attachment: AttachmentInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAgreement
"""
type CreateAgreementPayload {
  agreement: Agreement

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateAttachment
"""
input CreateAttachmentInput {
  name: String!
  objectKey: String!
  mimeType: String!
  size: LongInteger!
  attachableId: ID!
  topicCategoryId: ID
  agreementId: ID
  categoryType: Category

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAttachment
"""
type CreateAttachmentPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateBasicResident
"""
input CreateBasicResidentInput {
  companyId: ID
  nameFamily: String!
  nameFirst: String!
  nameFamilyKana: String
  nameFirstKana: String
  email: String
  telFixed: String
  telMobile: String!
  zipCode: String
  cityCode: String
  address1: String
  address2: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBasicResident
"""
type CreateBasicResidentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  resident: Resident
}

"""
Autogenerated input type of CreateBranchInspector
"""
input CreateBranchInspectorInput {
  companyId: ID = null
  email: String!
  name: String!
  enableAppLogin: Boolean = false
  legacyId: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBranchInspector
"""
type CreateBranchInspectorPayload {
  branchInspector: BranchInspector

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateBranchManager
"""
input CreateBranchManagerInput {
  email: String!
  name: String!
  companyId: ID = null
  enableOwnerPlan: Boolean = false
  enableResidentPlan: Boolean = false
  enablePartnerPlan: Boolean = false
  legacyId: String
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBranchManager
"""
type CreateBranchManagerPayload {
  branchManager: BranchManager

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateBranchShop
"""
input CreateBranchShopInput {
  companyId: ID = null
  branchManagerId: ID!
  name: String!
  tel: String
  level: Int!
  parentId: ID!
  zipCode: String
  cityCode: String = null
  address1: String
  address2: String
  pgShopId: String
  pgShopPass: String
  onSunday: ShopBusinessStatusEnum
  onMonday: ShopBusinessStatusEnum
  onTuesday: ShopBusinessStatusEnum
  onWednesday: ShopBusinessStatusEnum
  onThursday: ShopBusinessStatusEnum
  onFriday: ShopBusinessStatusEnum
  onSaturday: ShopBusinessStatusEnum

  """
  if `on_sunday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnSunday: String

  """
  if `on_sunday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnSunday: String

  """
  if `on_monday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnMonday: String

  """
  if `on_monday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnMonday: String

  """
  if `on_tuesday: open`  , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnTuesday: String

  """
  if `on_tuesday: open`  , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnTuesday: String

  """
  if `on_wednesday: open`, required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnWednesday: String

  """
  if `on_wednesday: open`, required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnWednesday: String

  """
  if `on_thursday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnThursday: String

  """
  if `on_thursday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnThursday: String

  """
  if `on_friday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnFriday: String

  """
  if `on_friday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnFriday: String

  """
  if `on_saturday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnSaturday: String

  """
  if `on_saturday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnSaturday: String
  noticeWhenClosed: String
  additionalBusinessHours: [ShopAdditionalBusinessHourInput!] = []
  legacyId: String
  attachment: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBranchShop
"""
type CreateBranchShopPayload {
  branchShop: BranchShop

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateBranchStaff
"""
input CreateBranchStaffInput {
  companyId: ID = null
  email: String!
  name: String!
  enableOwnerPlan: Boolean = false
  enableResidentPlan: Boolean = false
  enablePartnerPlan: Boolean = false
  legacyId: String
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBranchStaff
"""
type CreateBranchStaffPayload {
  branchStaff: BranchStaff

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateBuilding
"""
input CreateBuildingInput {
  companyId: ID
  chargeBranchShopId: ID
  name: String!
  wishSellPrice: LongInteger
  zipCode: String
  cityCode: String!
  address: String!
  stationName: String
  walkMinute: Int
  landArea: String
  landPrivilegeId: ID
  buildingArea: String
  builtYear: Int
  builtMonth: Int
  structureId: ID
  floor: Int
  buildingRate: Float
  floorAreaRate: Float
  landUseZoneId: ID
  roadDirection1: String
  roadWidth1: String
  roadType1Id: ID
  roadDirection2: String
  roadWidth2: String
  roadType2Id: ID
  handOverId: ID
  purchasePrice: LongInteger
  estimateRent: Int
  note: String
  equipmentsAndConditionItems: [EquipmentsAndConditionInput!] = []
  legacyId: String
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBuilding
"""
type CreateBuildingPayload {
  building: Building

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateBulkFileTopic
"""
input CreateBulkFileTopicInput {
  messageTitle: String!
  messageContent: String
  file: JSON!
  topicCategoryId: ID = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBulkFileTopic
"""
type CreateBulkFileTopicPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  topic: BulkFileTopic
}

"""
Autogenerated input type of CreateBulkTopic
"""
input CreateBulkTopicInput {
  infoTitle: String!
  messageTitle: String!
  messageContent: String!
  bulkTopicTarget: BulkTopicTarget!
  topicCategoryId: ID = null
  enabled: Boolean!
  distributionScheduled: Boolean!
  distributionScheduledAt: ISO8601DateTime
  initialShopId: ID = null
  initialResidents: [ID!] = []
  initialProperties: [ID!] = []

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBulkTopic
"""
type CreateBulkTopicPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  topic: BulkTopic
}

"""
Autogenerated input type of CreateBulletin
"""
input CreateBulletinInput {
  companyId: ID
  title: String!
  content: String
  bulletinKindId: ID!
  visibleFrom: ISO8601DateTime!
  open: Boolean
  pushEnabled: Boolean
  pushScheduledTo: ISO8601DateTime
  pushSchedulingMethodId: ID
  initialShopId: ID = null
  initialResidents: [ID!] = []
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateBulletin
"""
type CreateBulletinPayload {
  bulletin: Bulletin

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateChatTemplate
"""
input CreateChatTemplateInput {
  title: String!
  template: String!
  accountKlass: AccountKlass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateChatTemplate
"""
type CreateChatTemplatePayload {
  chatTemplate: ChatTemplate

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateCompany
"""
input CreateCompanyInput {
  licenseAdministratorId: ID
  licenseExpression: String
  name: String!
  nameKana: String
  planId: ID!
  representativeName: String
  zipCode: String!
  cityCode: String!
  address1: String!
  address2: String
  note: String
  yearlyNote: String
  chargeBasic: Int = 0
  chargePerSms: Int = 0
  enableOwnerPlan: Boolean = false
  chargeOwnerPlan: Int
  enableResidentPlan: Boolean = false
  chargeResidentPlan: Int
  enableVirtualAccount: Boolean = false
  chargeVirtualAccount: Int
  enableAgreement: Boolean = false
  chargeAgreement: Int
  chargePerAgreement: Int
  enablePropertyValuation: Boolean = false
  chargePropertyValuation: Int
  enableAppCustomize: Boolean = false
  chargeAppCustomize: Int
  enableHouseMovingConsultation: Boolean = false
  chargeHouseMovingConsultation: Int
  enableChintaiPay: Boolean = false
  chargeChintaiPay: Int
  chargeMethodId: ID = "Q2hhcmdlTWV0aG9kLTEw"
  enableFreeDial: Boolean = false
  chargeFreeDial: Int
  enablePartnerPlan: Boolean = false
  chargePartnerPlan: Int
  hqManager: HeadquartersManagerInput!
  hqShop: HeadquartersShopInput!
  isLimitedFunction: Boolean = false
  attachment: AttachmentInput
  logoCompany: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateCompanyPartnerShop
"""
input CreateCompanyPartnerShopInput {
  companyId: ID
  partnerShopId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateCompanyPartnerShop
"""
type CreateCompanyPartnerShopPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  companyPartnerShop: CompanyPartnerShop
  errors: [AttributeError!]!
}

"""
Autogenerated return type of CreateCompany
"""
type CreateCompanyPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  company: Company
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateConfirmationToken
"""
input CreateConfirmationTokenInput {
  email: String
  loginId: String
  sessionClass: SessionClass!
  specializeId: SpecializeCompanyInput = null
  checkRole: Boolean = false

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateConfirmationToken
"""
type CreateConfirmationTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  message: String
}

"""
Autogenerated input type of CreateContractCancellation
"""
input CreateContractCancellationInput {
  contractId: ID!
  partnerShopId: ID
  partnerUserId: ID
  contractCancellationReasonId: ID
  reasonDetail: String
  picId: ID
  cancellationDate: ISO8601Date
  decisionDate: ISO8601DateTime
  reminder: Boolean
  homeStatus: HomeStatusInput
  witnessDate1: ISO8601DateTime
  witnessDate2: ISO8601DateTime
  witnessDate3: ISO8601DateTime
  witnessState: ContractCancellationWitnessState
  witnessComment: String
  keyForRent: String
  keyStoredPlace: String
  state: ContractCancellationState
  partnerState: ContractCancellationPartnerState
  cancellationNotice: Int
  note: String
  requestedDate: ISO8601DateTime
  workCategoryId: ID
  residentApp: Boolean
  confirmedDate: ISO8601Date
  cancelRegistrationDate: ISO8601Date
  movingDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateContractCancellationManual
"""
input CreateContractCancellationManualInput {
  rawOwner: RawOwnerInput
  rawResident: RawResidentInput
  rawContract: RawContractInput!
  picId: ID
  decisionDate: ISO8601DateTime
  cancellationDate: ISO8601Date
  cancellationNotice: Int
  contractCancellationReasonId: ID
  note: String
  witnessDate1: ISO8601DateTime
  witnessDate2: ISO8601DateTime
  witnessDate3: ISO8601DateTime
  partnerShopId: ID
  partnerUserId: ID
  requestedDate: ISO8601Date
  witnessState: ContractCancellationWitnessState
  state: ContractCancellationState
  partnerState: ContractCancellationPartnerState
  homeStatus: HomeStatusInput
  keyForRent: String
  keyStoredPlace: String
  workCategoryId: ID!
  reasonDetail: String
  residentApp: Boolean
  confirmedDate: ISO8601Date
  cancelRegistrationDate: ISO8601Date
  movingDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateContractCancellationManual
"""
type CreateContractCancellationManualPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contractCancellation: ContractCancellation
  errors: [AttributeError!]!
}

"""
Autogenerated return type of CreateContractCancellation
"""
type CreateContractCancellationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contractCancellation: ContractCancellation
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateContract
"""
input CreateContractInput {
  propertyId: ID!
  residentId: ID!
  ownerId: ID!
  individualGuarantorName: String
  corporateGuarantorName: String
  cohabitantNames: String
  startFrom: ISO8601DateTime!
  endUntil: ISO8601DateTime!
  endDate: ISO8601DateTime
  chargeRent: Int!
  chargeManagement: Int!
  chargeParking: Int!
  chargeAccumulation: Int!
  chargeAdditional: Int!
  chargeDeposit: Int!
  chargeGratuity: Int!
  chargeBond: Int!
  noticePeriod: Int
  monthsOfRentForRenewal: Int!
  note: String
  provisions: [ID!] = []
  legacyId: String
  sublease: Boolean = false

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateContract
"""
type CreateContractPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contract: Contract
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateContractProvision
"""
input CreateContractProvisionInput {
  provision: String!
  companyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateContractProvision
"""
type CreateContractProvisionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contractProvision: ContractProvision
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateCsvMapping
"""
input CreateCsvMappingInput {
  companyId: ID!
  name: String!
  description: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateCsvMappingItem
"""
input CreateCsvMappingItemInput {
  csvRuleConvertMappingId: ID!
  valueInput: String!
  valueOutput: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateCsvMappingItem
"""
type CreateCsvMappingItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  csvMappingItem: CsvRuleConvertMappingItem
  errors: [AttributeError!]!
}

"""
Autogenerated return type of CreateCsvMapping
"""
type CreateCsvMappingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  csvMapping: CsvRuleConvertMapping
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateCsvTemplate
"""
input CreateCsvTemplateInput {
  companyId: ID!
  templateName: String!
  csvTemplateOptions: [CsvTemplateOptionInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of CreateCsvTemplateMappings
"""
input CreateCsvTemplateMappingsInput {
  csvTemplateMappings: [CsvTemplateMappingInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateCsvTemplateMappings
"""
type CreateCsvTemplateMappingsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [[AttributeError!]!]!
  mappings: [CsvTemplateMapping!]
}

"""
Autogenerated return type of CreateCsvTemplate
"""
type CreateCsvTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  csvTemplate: CsvTemplate
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateDebitItem
"""
input CreateDebitItemInput {
  ownerId: ID!
  buildingId: ID!
  contractId: ID
  kindId: ID!
  baseAmount: Int!
  taxAmount: Int!
  yearMonthAccrual: Int!
  note: String = null
  companyId: ID
  propertyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateDebitItem
"""
type CreateDebitItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  debitItem: DebitItem
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateEstimateEvidence
"""
input CreateEstimateEvidenceInput {
  estimateId: ID!
  issueTaskId: ID!
  comment: String
  title: String!
  attachmentKind: AttachmentKind!
  attachment: AttachmentInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateEstimateEvidence
"""
type CreateEstimateEvidencePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateEvidence: EstimateEvidence
}

"""
Autogenerated input type of CreateEstimate
"""
input CreateEstimateInput {
  contractCancellationId: ID!
  partnerShopId: ID!
  title: String
  estimatedRequestDate: ISO8601Date
  partnerUserId: ID
  constructionState: ConstructionState
  estimatedReceiptDate: ISO8601Date
  constructionPeriod: Int
  companyConstructionPeriod: Int
  orderDate: ISO8601Date
  expectedCompletionDate: ISO8601Date
  completionDate: ISO8601Date
  invoiceReceiptDate: ISO8601Date
  paymentDeadline: ISO8601Date
  paymentDate: ISO8601Date
  discount: Float
  residentAccepted: Boolean
  reportCreationDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateEstimate
"""
type CreateEstimatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimate: Estimate
}

"""
Autogenerated input type of CreateEstimateRepairItem
"""
input CreateEstimateRepairItemInput {
  estimateId: ID!
  issueTaskId: ID!
  repairItemId: ID!
  note: String
  partnerPrice: Float
  companyPrice: Float
  qty: Float
  residentBurdenRate: Float
  ownerBurdenRate: Float
  companyBurdenRate: Float

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateEstimateRepairItem
"""
type CreateEstimateRepairItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateRepairItem: EstimateRepairItem
}

"""
Autogenerated input type of CreateFacilityManual
"""
input CreateFacilityManualInput {
  buildingId: ID!
  propertyId: ID
  name: String!
  attachments: [AttachmentInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFacilityManual
"""
type CreateFacilityManualPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  facilityManual: FacilityManual
}

"""
Autogenerated input type of CreateFaqCategory
"""
input CreateFaqCategoryInput {
  name: String!
  companyId: ID
  shopId: ID
  userId: ID
  mainId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFaqCategory
"""
type CreateFaqCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faqCategory: FaqCategory
}

"""
Autogenerated input type of CreateFaq
"""
input CreateFaqInput {
  faqCategoryId: ID!
  question: String!
  answer: String!
  enableContact: Boolean!
  enableFrequently: Boolean!
  enableTopic: Boolean!
  faqTelId: ID
  url: String
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFaq
"""
type CreateFaqPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faq: Faq
}

"""
Autogenerated input type of CreateFaqTel
"""
input CreateFaqTelInput {
  companyId: ID
  telMobile: String!
  note: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFaqTel
"""
type CreateFaqTelPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faqTel: FaqTel
}

"""
Autogenerated input type of CreateFirebaseToken
"""
input CreateFirebaseTokenInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFirebaseToken
"""
type CreateFirebaseTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session!
}

"""
Autogenerated input type of CreateFlowStepReminder
"""
input CreateFlowStepReminderInput {
  """
  Base64encoded "AgreementStep-:id"
  """
  remindableId: ID!
  organizationName: String!
  email: String
  smsNumber: String
  requestBody: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFlowStepReminder
"""
type CreateFlowStepReminderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  flowStepReminder: FlowStepReminder
}

"""
Autogenerated input type of CreateGroup
"""
input CreateGroupInput {
  name: String!
  userIds: [ID!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateGroup
"""
type CreateGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  group: Group
}

"""
Autogenerated input type of CreateHeadquartersManager
"""
input CreateHeadquartersManagerInput {
  email: String!
  name: String!
  companyId: ID = null
  enableOwnerPlan: Boolean = false
  enableResidentPlan: Boolean = false
  enablePartnerPlan: Boolean = false
  legacyId: String
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateHeadquartersManager
"""
type CreateHeadquartersManagerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  headquartersManager: HeadquartersManager
}

"""
Autogenerated input type of CreateHeadquartersStaff
"""
input CreateHeadquartersStaffInput {
  companyId: ID = null
  email: String!
  name: String!
  enableOwnerPlan: Boolean
  enableResidentPlan: Boolean
  enablePartnerPlan: Boolean
  legacyId: String
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateHeadquartersStaff
"""
type CreateHeadquartersStaffPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  headquartersStaff: HeadquartersStaff
}

"""
Autogenerated input type of CreateHomeHeader
"""
input CreateHomeHeaderInput {
  homeTemplateId: ID!
  title: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateHomeHeader
"""
type CreateHomeHeaderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  homeHeader: HomeHeader
}

"""
Autogenerated input type of CreateHomeTemplate
"""
input CreateHomeTemplateInput {
  companyId: ID
  name: String!
  preferences: JSON!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateHomeTemplate
"""
type CreateHomeTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  homeTemplate: HomeTemplate
}

"""
Autogenerated input type of CreateInspectionCommonComment
"""
input CreateInspectionCommonCommentInput {
  reportId: ID!
  content: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateInspectionCommonComment
"""
type CreateInspectionCommonCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  inspectionCommonComment: InspectionCommonComment
}

"""
Autogenerated input type of CreateInspectionReportAndSample
"""
input CreateInspectionReportAndSampleInput {
  ownerId: ID!
  buildingId: ID!
  propertyId: ID
  reportDate: ISO8601Date!
  items: [InspectionItemInput!]!
  itemPosition: JSON

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateInspectionReportAndSample
"""
type CreateInspectionReportAndSamplePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  inspectionReport: InspectionReport
}

"""
Autogenerated input type of CreateInspectionReport
"""
input CreateInspectionReportInput {
  sampleId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateInspectionReport
"""
type CreateInspectionReportPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  inspectionReport: InspectionReport
}

"""
Autogenerated input type of CreateInvitationCode
"""
input CreateInvitationCodeInput {
  companyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateInvitationCode
"""
type CreateInvitationCodePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  company: Company
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateIssueTask
"""
input CreateIssueTaskInput {
  issueCategoryId: ID!
  taskId: ID!
  state: IssueTaskState
  dutyKindId: ID
  picId: ID
  picType: TargetClass
  comment: String
  usingApp: Boolean = false
  expiredAt: ISO8601DateTime
  witnessReceivedDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateIssueTask
"""
type CreateIssueTaskPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  issueTask: IssueTask
}

"""
Autogenerated input type of CreateNotice
"""
input CreateNoticeInput {
  companyId: ID
  title: String!
  content: String!
  receiverTypeId: ID!

  """
  公開開始日
  """
  visibleFrom: ISO8601DateTime!

  """
  公開終了日
  """
  visibleUntil: ISO8601DateTime
  enabled: Boolean!

  """
  自動送信：True、手動送信：False
  """
  reserved: Boolean!
  pushSchedulingMethodId: ID
  pushReservedAt: ISO8601DateTime
  initialOwners: [ID!] = []
  initialShopId: ID = null
  initialResidents: [ID!] = []
  attachments: [AttachmentInput!]
  noticePriorityId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateNotice
"""
type CreateNoticePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  notice: Notice
}

"""
Autogenerated input type of CreateOrLoadBulletins
"""
input CreateOrLoadBulletinsInput {
  conditions: BulletinConditions = null
  order: Order = { by: "visible_from", direction: "desc" }

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOrLoadBulletins
"""
type CreateOrLoadBulletinsPayload {
  bulletins: [Bulletin!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateOrLoadNotices
"""
input CreateOrLoadNoticesInput {
  order: Order = { by: "created_at", direction: "desc" }

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOrLoadNotices
"""
type CreateOrLoadNoticesPayload {
  accountNotices: [AccountNotice!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateOrLoadQuestionnaires
"""
input CreateOrLoadQuestionnairesInput {
  states: [AccountQuestionnaireState!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOrLoadQuestionnaires
"""
type CreateOrLoadQuestionnairesPayload {
  accountQuestionnaires: [AccountQuestionnaire!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of CreateOrLoadQuickQuestionnaires
"""
input CreateOrLoadQuickQuestionnairesInput {
  order: Order = { by: "created_at", direction: "desc" }

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOrLoadQuickQuestionnaires
"""
type CreateOrLoadQuickQuestionnairesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  quickQuestionnaire: QuickQuestionnaire
}

"""
Autogenerated input type of CreateOwnerEstimate
"""
input CreateOwnerEstimateInput {
  partnerEstimateId: ID!
  companyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOwnerEstimate
"""
type CreateOwnerEstimatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimate: Estimate
}

"""
Autogenerated input type of CreateOwner
"""
input CreateOwnerInput {
  companyId: ID
  nameFamily: String
  nameFirst: String
  nameFamilyKana: String
  nameFirstKana: String
  email: String
  telFixed: String
  telMobile: String
  zipCode: String
  cityCode: String
  address1: String
  address2: String
  chargeUserId: ID!
  kindId: ID!
  genderId: ID
  companyName: String
  birthday: ISO8601Date
  companyNameKana: String
  sendTemporaryPassword: Boolean!
  tagIds: [ID!] = []
  closingMonth: Int = 12
  closingDay: Int = 31
  legacyId: String
  gmoPgRegisted: Boolean = false
  gmoPgMemberId: String
  contactPriorityId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOwner
"""
type CreateOwnerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  owner: Owner
  warnings: [AttributeError!]
}

"""
Autogenerated input type of CreatePartnerBranchShop
"""
input CreatePartnerBranchShopInput {
  partnerCompanyId: ID!
  name: String!
  telMobile: String!
  partnerBranchManagerId: ID!
  zipCode: String
  cityCode: String = null
  address1: String
  address2: String
  title: String
  description: String
  tags: [String!] = []
  isWitness: Boolean = true
  openFromHhmm: [OpenHhmmInput!] = []
  openUntilHhmm: [OpenHhmmInput!] = []
  note: String
  isPublicSetting: Boolean = true
  workableIds: [ID!]!
  availableAreas: [String!]!
  attachments: [AttachmentInput!] = []
  parentId: ID
  shopLevel: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePartnerBranchShop
"""
type CreatePartnerBranchShopPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerBranchShop: PartnerBranchShop
}

"""
Autogenerated input type of CreatePartnerBranchUser
"""
input CreatePartnerBranchUserInput {
  email: String!
  name: String!
  tel: String
  partnerCompanyId: ID = null
  isManager: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePartnerBranchUser
"""
type CreatePartnerBranchUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerBranchUser: PartnerBranchUser
}

"""
Autogenerated input type of CreatePartner
"""
input CreatePartnerInput {
  partnerCompany: PartnerCompanyInput!
  partnerHqShop: PartnerHeadquartersShopInput!
  partnerHqManager: PartnerHeadquartersManagerInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePartner
"""
type CreatePartnerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerCompany: PartnerCompany
}

"""
Autogenerated input type of CreatePassword
"""
input CreatePasswordInput {
  password: String!
  passwordConfirmation: String!
  confirmationToken: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePassword
"""
type CreatePasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session!
}

"""
Autogenerated input type of CreatePresignedUrlForPut
"""
input CreatePresignedUrlForPutInput {
  name: String!
  resourceType: AttachmentResource!
  hasThumb: Boolean!
  agreementId: ID
  partnerHeadquartersShopId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePresignedUrlForPut
"""
type CreatePresignedUrlForPutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  presignedUrl: PresignedUrlSet
}

"""
Autogenerated input type of CreateProperty
"""
input CreatePropertyInput {
  kindId: ID!
  buildingId: ID!
  ownerId: ID!
  name: String!
  zipCode: String!
  cityCode: String!
  address1: String!
  address2: String
  landPrivilegeId: ID
  roomArea: String
  balconyArea: String
  structureId: ID
  floor: Int
  roomLayoutId: ID
  administrativeTypeId: ID
  handOverId: ID
  note: String
  equipmentsAndConditionItems: [EquipmentsAndConditionInput!] = []
  legacyId: String
  estimateRent: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateProperty
"""
type CreatePropertyPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  property: Property
}

"""
Autogenerated input type of CreatePropertyValuation
"""
input CreatePropertyValuationInput {
  name: String!
  cityCode: String!
  buildingId: ID
  propertyId: ID
  address: String
  valuationKindId: ID!
  landArea: Float
  buildingArea: Float
  floor: Int
  structureId: ID
  nearestStation: String!
  walkMinutes: Int
  builtYear: Int
  builtMonth: Int
  floorPlanDescription: String
  askingPrice: LongInteger!
  currentChargeRent: Int
  fullChargeRent: Int
  preferredTime: String
  reasonForSale: String
  preferredContactId: ID!
  tel: String
  relationToOwner: String
  misc: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePropertyValuation
"""
type CreatePropertyValuationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  propertyValuation: PropertyValuation
}

"""
Autogenerated input type of CreateProxySession
"""
input CreateProxySessionInput {
  email: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateProxySession
"""
type CreateProxySessionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session!
}

"""
Autogenerated input type of CreateQuestionnaire
"""
input CreateQuestionnaireInput {
  companyId: ID
  title: String!
  targetTypeId: ID!
  openFrom: ISO8601DateTime!
  openUntil: ISO8601DateTime!
  open: Boolean!
  pushEnabled: Boolean!
  pushSchedulingMethodId: ID
  pushScheduledTo: ISO8601DateTime
  header: String
  question: JSON!
  footer: String
  initialShopId: ID = null
  initialResidents: [ID!] = []
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateQuestionnaire
"""
type CreateQuestionnairePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  questionnaire: Questionnaire
}

"""
Autogenerated input type of CreateQuickQuestionnaire
"""
input CreateQuickQuestionnaireInput {
  companyId: ID
  title: String!
  quickQuestionnaireKindId: ID!
  endContractFrom: ISO8601Date
  endContractTo: ISO8601Date
  visibleFrom: ISO8601DateTime!
  visibleTo: ISO8601DateTime!
  enabled: Boolean!
  question: String!
  footer: String!
  options: [QuickQuestionnaireOptionInput!]!
  initialShopId: ID = null
  initialResidents: [ID!] = []
  propertyKindId: ID = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateQuickQuestionnaire
"""
type CreateQuickQuestionnairePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  quickQuestionnaire: QuickQuestionnaire
}

"""
Autogenerated input type of CreateRelocation
"""
input CreateRelocationInput {
  otherRequest: String
  stationName: String!
  contactKindId: ID!
  roomLayoutId: ID!
  expectedMoveDate: ISO8601DateTime
  priceMin: Int!
  priceMax: Int!
  telMobile: String
  cityCode: String!
  contractId: ID = null
  undecidedMoveDate: Boolean = false

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateRelocation
"""
type CreateRelocationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  relocation: Relocation
}

"""
Autogenerated input type of CreateRepairItem
"""
input CreateRepairItemInput {
  companyId: ID
  partnerShopId: ID!
  name: String!
  unitId: ID!
  taxRate: Float!
  partnerPrice: Float!
  companyPrice: Float!
  note: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateRepairItem
"""
type CreateRepairItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  repairItem: RepairItem
}

"""
Autogenerated input type of CreateResident
"""
input CreateResidentInput {
  companyId: ID
  nameFamily: String
  nameFirst: String
  nameFamilyKana: String
  nameFirstKana: String
  email: String
  telFixed: String
  telMobile: String
  zipCode: String
  cityCode: String
  address1: String
  address2: String
  chargeUserId: ID!
  kindId: ID
  genderId: ID
  companyName: String
  birthday: ISO8601Date
  companyNameKana: String
  gmoPgRegisted: Boolean = false
  gmoPgMemberId: String
  sendTemporaryPassword: Boolean!
  tagIds: [ID!] = []
  legacyId: String
  contactPriorityId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateResident
"""
type CreateResidentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  resident: Resident
  warnings: [AttributeError!]
}

"""
Autogenerated input type of CreateRevenueExpenseItem
"""
input CreateRevenueExpenseItemInput {
  ownerId: ID!
  buildingId: ID!
  contractId: ID
  kindId: ID!
  miscName: String = null
  baseAmount: Int!
  taxAmount: Int!
  yearMonthAccrual: Int!
  sendDate: ISO8601DateTime
  note: String = null
  companyId: ID
  propertyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateRevenueExpenseItem
"""
type CreateRevenueExpenseItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  revenueExpenseItem: RevenueExpenseItem
}

"""
Autogenerated input type of CreateSession
"""
input CreateSessionInput {
  email: String
  loginId: String
  password: String!
  sessionClass: SessionClass!
  isAdmin: Boolean = false
  sessionEnvironment: SessionEnvironment
  specializeId: SpecializeCompanyInput = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateSession
"""
type CreateSessionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session!
}

"""
Autogenerated input type of CreateTag
"""
input CreateTagInput {
  name: String!
  color: String!
  companyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateTag
"""
type CreateTagPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  tag: Tag
}

"""
Autogenerated input type of CreateTaskReport
"""
input CreateTaskReportInput {
  taskKind: TaskKind!
  attachmentIds: [ID!]
  csvTemplateId: ID = null
  companyId: ID
  deleteRevenueExpenseType: DeleteRevenueExpenseEnum = not_deleted
  deleteRevenueExpenseFrom: Int
  deleteRevenueExpenseTo: Int
  sendPdf: Boolean
  note: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateTaskReport
"""
type CreateTaskReportPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  taskReport: TaskReport!
}

"""
Autogenerated input type of CreateTopic
"""
input CreateTopicInput {
  buildingId: ID
  propertyId: ID
  ownerId: ID = null
  residentId: ID = null
  topicCategoryId: ID = null
  topicType: TopicTypeEnum!
  title: String!
  managerUserId: ID
  initialUsers: [ID!] = []

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateTopic
"""
type CreateTopicPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  topic: Topic
}

"""
Autogenerated input type of CreateWorkflow
"""
input CreateWorkflowInput {
  ownerId: ID!
  propertyId: ID
  topicCategoryId: ID!
  title: String!
  body: String!
  approvableIds: [ID!]!
  attachmentCopyIds: [ID!]
  propertyKindId: ID
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateWorkflow
"""
type CreateWorkflowPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  workflow: Workflow
}

type CsvCondition {
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  methodName: String!
  name: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for CsvCondition.
"""
type CsvConditionConnection {
  """
  A list of edges.
  """
  edges: [CsvConditionEdge]

  """
  A list of nodes.
  """
  nodes: [CsvCondition]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvConditionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvCondition
}

type CsvData {
  fileName: String!
  header: [CsvTemplateMapping!]!
  values: [[String!]!]!
}

input CsvDataInput {
  fileName: String!
  header: [String!]!
  values: [[String!]!]!
}

type CsvFomula {
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  methodName: String!
  name: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for CsvFomula.
"""
type CsvFomulaConnection {
  """
  A list of edges.
  """
  edges: [CsvFomulaEdge]

  """
  A list of nodes.
  """
  nodes: [CsvFomula]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvFomulaEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvFomula
}

type CsvOption {
  id: ID!
  name: String!
  type: String!
  value: String!
}

type CsvRuleConvertMapping {
  company: Company
  createdAt: ISO8601DateTime!
  csvRuleConvertMappingItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CsvRuleConvertMappingItemConnection
  description: String
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime!
}

input CsvRuleConvertMappingConditions {
  companyId: ID
}

"""
The connection type for CsvRuleConvertMapping.
"""
type CsvRuleConvertMappingConnection {
  """
  A list of edges.
  """
  edges: [CsvRuleConvertMappingEdge]

  """
  A list of nodes.
  """
  nodes: [CsvRuleConvertMapping]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvRuleConvertMappingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvRuleConvertMapping
}

type CsvRuleConvertMappingItem {
  createdAt: ISO8601DateTime!
  csvRuleConvertMapping: CsvRuleConvertMapping
  id: ID!
  updatedAt: ISO8601DateTime!
  valueInput: String
  valueOutput: String
}

"""
The connection type for CsvRuleConvertMappingItem.
"""
type CsvRuleConvertMappingItemConnection {
  """
  A list of edges.
  """
  edges: [CsvRuleConvertMappingItemEdge]

  """
  A list of nodes.
  """
  nodes: [CsvRuleConvertMappingItem]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvRuleConvertMappingItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvRuleConvertMappingItem
}

type CsvTemplate {
  company: Company
  createdAt: ISO8601DateTime!
  csvTemplateMappings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CsvTemplateMappingConnection
  csvTemplateOptions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CsvTemplateOptionConnection
  id: ID!
  templateName: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for CsvTemplate.
"""
type CsvTemplateConnection {
  """
  A list of edges.
  """
  edges: [CsvTemplateEdge]

  """
  A list of nodes.
  """
  nodes: [CsvTemplate]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvTemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvTemplate
}

type CsvTemplateMapping {
  createdAt: ISO8601DateTime!
  csvColumnName: String
  csvTemplateMappingRules: [CsvTemplateMappingRule!]
  csvTemplateOption: CsvTemplateOption
  defaultValue: String
  id: ID!
  tableColumnName: TableColumnName!
  tableName: TableName!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for CsvTemplateMapping.
"""
type CsvTemplateMappingConnection {
  """
  A list of edges.
  """
  edges: [CsvTemplateMappingEdge]

  """
  A list of nodes.
  """
  nodes: [CsvTemplateMapping]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvTemplateMappingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvTemplateMapping
}

input CsvTemplateMappingInput {
  csvTemplateMappingId: ID
  csvTemplateOptionId: ID!
  tableNameId: ID!
  tableColumnNameId: ID!
  csvColumnName: String
  defaultValue: String
  rules: [CsvTemplateMappingRuleInput!]
  position: Int
  hasChangePosition: Boolean
}

type CsvTemplateMappingRule {
  createdAt: ISO8601DateTime!
  csvTemplateMapping: CsvTemplateMapping!
  csvTemplateMappingRuleSteps: [CsvTemplateMappingRuleStep!]
  id: ID!
  positionStep: Int
  updatedAt: ISO8601DateTime!
}

input CsvTemplateMappingRuleInput {
  id: ID
  positionStep: Int!
  ruleSteps: [CsvTemplateMappingRuleStepInput!]
  csvTemplateMappingRuleStepsAttributes: [CsvTemplateMappingRuleStepInput!]
}

type CsvTemplateMappingRuleStep {
  createdAt: ISO8601DateTime!
  csvColumnName: String
  csvTemplateMappingRule: CsvTemplateMappingRule!
  csvTemplateOption: CsvTemplateOption
  id: ID!
  inputValue: String
  inputValueLast: String
  positionStep: Int
  ruleStepable: RuleStepableSubject
  updatedAt: ISO8601DateTime!
}

input CsvTemplateMappingRuleStepInput {
  id: ID
  ruleStepableId: ID!
  positionStep: Int!
  inputValue: String
  inputValueLast: String
  csvColumnName: String
  columnValues: [String!]
  csvTemplateOptionId: ID
}

type CsvTemplateOption {
  attachment: Attachment
  columnNames: [String!]!
  createdAt: ISO8601DateTime!
  csvTemplate: CsvTemplate!
  csvTemplateMappings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CsvTemplateMappingConnection
  dataSeparator: CsvOption!
  escapeCharacter: CsvOption!
  fileName: String!
  id: ID!
  startLine: Int!
  stringQuote: CsvOption!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for CsvTemplateOption.
"""
type CsvTemplateOptionConnection {
  """
  A list of edges.
  """
  edges: [CsvTemplateOptionEdge]

  """
  A list of nodes.
  """
  nodes: [CsvTemplateOption]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type CsvTemplateOptionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: CsvTemplateOption
}

input CsvTemplateOptionInput {
  id: ID
  columnNames: [String!]!
  fileName: String!
  startLine: Int!
  dataSeparatorId: ID!
  escapeCharacterId: ID!
  stringQuoteId: ID!
}

"""
未入金管理
"""
type DebitItem {
  baseAmount: Int!
  building: Building!
  company: Company!
  contract: Contract
  createdAt: ISO8601DateTime!
  id: ID!
  kind: DebitKind!
  legacyId: String
  name: String
  note: String
  owner: Owner!
  property: Property
  reportDate: ISO8601Date
  taxAmount: Int!
  updatedAt: ISO8601DateTime!
  yearMonthAccrual: Int!
}

input DebitItemConditions {
  buildingId: ID
  propertyKindId: ID
  propertyId: ID
  ownerId: ID
  yearMonthAccrual: Int
  kindId: ID
  reportDate: RangeDate
}

"""
The connection type for DebitItem.
"""
type DebitItemConnection {
  """
  A list of edges.
  """
  edges: [DebitItemEdge]

  """
  A list of nodes.
  """
  nodes: [DebitItem]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type DebitItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: DebitItem
}

"""
未入金管理
"""
type DebitKind {
  id: ID!
  name: String!
}

"""
Autogenerated input type of DecideAgreement
"""
input DecideAgreementInput {
  agreementId: ID
  signToken: String
  comment: String
  decision: FlowDecision!
  textValues: [AgreementStepPositionTextValueInput!]
  priorityAttachment: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DecideAgreement
"""
type DecideAgreementPayload {
  agreementStep: AgreementStep

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DecideWorkflow
"""
input DecideWorkflowInput {
  workflowId: ID!
  comment: String
  decision: FlowDecision!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DecideWorkflow
"""
type DecideWorkflowPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  workflow: Workflow
}

enum DecisionEnum {
  witness_input
  witness_date_1
  witness_date_2
  witness_date_3
}

enum DeleteRevenueExpenseEnum {
  not_deleted
  deleted_by_year_month_accrual
  deleted_by_send_date
}

"""
Autogenerated input type of DestroyEstimateEvidence
"""
input DestroyEstimateEvidenceInput {
  estimateEvidenceId: ID!
  issueTaskId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DestroyEstimateEvidence
"""
type DestroyEstimateEvidencePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateEvidence: EstimateEvidence
}

"""
Autogenerated input type of DestroyEstimateRepairItem
"""
input DestroyEstimateRepairItemInput {
  estimateRepairItemId: ID!
  issueTaskId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DestroyEstimateRepairItem
"""
type DestroyEstimateRepairItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateRepairItem: EstimateRepairItem
}

"""
Autogenerated input type of DestroyProxySession
"""
input DestroyProxySessionInput {
  proxyAdminToken: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DestroyProxySession
"""
type DestroyProxySessionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  session: Session!
}

"""
Autogenerated input type of DestroyResource
"""
input DestroyResourceInput {
  globalId: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DestroyResource
"""
type DestroyResourcePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DestroySession
"""
input DestroySessionInput {
  notificationEndpointArn: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DestroySession
"""
type DestroySessionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  session: Session!
}

type Direction {
  id: String!
  name: String!
}

"""
Display method
"""
type DisplayMethod {
  id: ID!
  name: String!
}

"""
Autogenerated input type of DownloadConstructionCompleteReport
"""
input DownloadConstructionCompleteReportInput {
  contractCancellationId: ID!
  to: TargetClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadConstructionCompleteReport
"""
type DownloadConstructionCompleteReportPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadEstimatePdfInvoice
"""
input DownloadEstimatePdfInvoiceInput {
  contractCancellationId: ID!
  to: TargetClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadEstimatePdfInvoice
"""
type DownloadEstimatePdfInvoicePayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadEstimatePdfOwner
"""
input DownloadEstimatePdfOwnerInput {
  contractCancellationId: ID!
  displayResidentPrice: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadEstimatePdfOwner
"""
type DownloadEstimatePdfOwnerPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadEstimatePdfPartner
"""
input DownloadEstimatePdfPartnerInput {
  contractCancellationId: ID!
  to: TargetClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadEstimatePdfPartner
"""
type DownloadEstimatePdfPartnerPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadEstimatePdfReceipt
"""
input DownloadEstimatePdfReceiptInput {
  contractCancellationId: ID!
  to: TargetClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadEstimatePdfReceipt
"""
type DownloadEstimatePdfReceiptPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadInspectionReportPdf
"""
input DownloadInspectionReportPdfInput {
  inspectionReportId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadInspectionReportPdf
"""
type DownloadInspectionReportPdfPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadOrderEstimatePdfOwner
"""
input DownloadOrderEstimatePdfOwnerInput {
  contractCancellationId: ID!
  to: TargetClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadOrderEstimatePdfOwner
"""
type DownloadOrderEstimatePdfOwnerPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadOrderEstimatePdfPartner
"""
input DownloadOrderEstimatePdfPartnerInput {
  contractCancellationId: ID!
  to: TargetClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadOrderEstimatePdfPartner
"""
type DownloadOrderEstimatePdfPartnerPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of DownloadResidentAcceptOrderPdf
"""
input DownloadResidentAcceptOrderPdfInput {
  contractCancellationId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DownloadResidentAcceptOrderPdf
"""
type DownloadResidentAcceptOrderPdfPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

type DutyKind {
  id: ID!
  name: String
}

"""
設備や条件など
"""
type EquipmentsAndCondition {
  id: ID!
  misc: Boolean!
  name: String!
}

input EquipmentsAndConditionInput {
  id: ID
  kindId: Int!
  name: String
  possess: Boolean!
}

"""
設備と条件など（手入力含む）
"""
type EquipmentsAndConditionItem {
  id: ID!
  kindId: Int!
  name: String!
  possess: Boolean!
}

type Estimate {
  actualWitnessDate: ISO8601DateTime
  afterEstimateEvidences(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EstimateEvidenceConnection
  beforeEstimateEvidences(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EstimateEvidenceConnection

  """
  工期（管理会社）
  """
  companyConstructionPeriod: Int

  """
  工事完了予定日
  """
  companyExpectCompleteConstructionDate: ISO8601Date

  """
  請求書送付日
  """
  companyInvoiceSendDate: ISO8601Date
  companyTaxAmount: Float!
  companyTotal: Float!

  """
  工事完了日
  """
  completionDate: ISO8601Date

  """
  工期（業者）
  """
  constructionPeriod: Int
  constructionState: String!
  contractCancellation: ContractCancellation!
  createdAt: ISO8601DateTime!

  """
  値引額
  """
  discount: Float!
  displayOrder: Int!
  estimateGroupKind: EstimateGroupKind!
  estimateRepairItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EstimateRepairItemConnection
  estimateSetting: EstimateSetting

  """
  見積作成日
  """
  estimatedCreationDate: ISO8601Date

  """
  見積受領日
  """
  estimatedReceiptDate: ISO8601Date

  """
  見積依頼日
  """
  estimatedRequestDate: ISO8601Date
  estimator: Estimator
  expectCompleteConstructionDate: ISO8601Date
  expectedCompletionDate: ISO8601Date
  id: ID!

  """
  請求書受領日
  """
  invoiceReceiptDate: ISO8601Date

  """
  発注日
  """
  orderDate: ISO8601Date

  """
  受注日
  """
  orderReceiptDate: ISO8601Date
  ownerDisplayOrder: [Int!]
  partnerDisplayOrder: [Int!]
  partnerInvoiceSendDate: ISO8601Date
  partnerUser: PartnerUser

  """
  支払日
  """
  paymentDate: ISO8601Date

  """
  支払期限
  """
  paymentDeadline: ISO8601Date

  """
  工事完了報告日
  """
  reportCompletionDate: ISO8601Date

  """
  報告内容
  """
  reportContent: String

  """
  報告書作成日
  """
  reportCreationDate: ISO8601Date
  residentAccepted: Boolean!
  residentTaxAmount: Float!
  residentTotal: Float!

  """
  見積提出日
  """
  sentAt: ISO8601DateTime

  """
  小計
  """
  subtotal: Float!

  """
  値引後小計
  """
  subtotalAfterDiscount: Float!

  """
  小計
  """
  subtotalCompanyEstimatePrice: Float!

  """
  小計
  """
  subtotalOwnerEstimatePrice: Float!

  """
  小計
  """
  subtotalResidentEstimatePrice: Float!

  """
  消費税
  """
  taxAmount: Float!
  title: String

  """
  税込み額
  """
  total: Float!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Estimate.
"""
type EstimateConnection {
  """
  A list of edges.
  """
  edges: [EstimateEdge]

  """
  A list of nodes.
  """
  nodes: [Estimate]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type EstimateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Estimate
}

type EstimateEvidence {
  attachmentKind: String!
  comment: String
  createdAt: ISO8601DateTime!
  displayOrder: Int!
  estimate: Estimate!
  evidenceCategory: EvidenceCategory!
  evidenceImage: Attachment!
  id: ID!
  title: String!
  updatedAt: ISO8601DateTime!
}

input EstimateEvidenceConditions {
  title: String
}

"""
The connection type for EstimateEvidence.
"""
type EstimateEvidenceConnection {
  """
  A list of edges.
  """
  edges: [EstimateEvidenceEdge]

  """
  A list of nodes.
  """
  nodes: [EstimateEvidence]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type EstimateEvidenceEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: EstimateEvidence
}

type EstimateGroupKind {
  id: ID!
  name: String!
}

enum EstimateGroupKindValue {
  PARTNER_GROUP
  RESIDENT_GROUP
  OWNER_GROUP
}

type EstimateRepairItem {
  companyBurdenRate: Float!
  companyCost: Float!
  companyEstimatePrice: Float!
  companyPrice: Float!
  createdAt: ISO8601DateTime!
  estimate: Estimate!
  id: ID!
  note: String
  ownerBurdenRate: Float!
  ownerEstimatePrice: Float!
  partnerCost: Float!
  partnerPrice: Float!
  qty: Float!
  repairItem: RepairItem!
  residentBurdenRate: Float!
  residentEstimatePrice: Float!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for EstimateRepairItem.
"""
type EstimateRepairItemConnection {
  """
  A list of edges.
  """
  edges: [EstimateRepairItemEdge]

  """
  A list of nodes.
  """
  nodes: [EstimateRepairItem]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type EstimateRepairItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: EstimateRepairItem
}

type EstimateSetting {
  createdAt: ISO8601DateTime!
  id: ID!
  roundTaxKind: RoundValueKind
  roundUnitKind: RoundUnitKind
  roundValueKind: RoundValueKind
  tax: Float
  updatedAt: ISO8601DateTime!
}

type Estimator {
  id: ID!
  klass: String!
  name: String!
}

type EvidenceCategory {
  id: ID!
  name: String!
}

"""
Autogenerated input type of ExecutePayment
"""
input ExecutePaymentInput {
  invoiceId: ID!
  cardSeq: String
  token: String
  paymentMethodId: ID!
  saveMember: Boolean = false
  saveCard: Boolean = false

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ExecutePayment
"""
type ExecutePaymentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]
  invoice: AccountInvoice
  saveCardErrors: [GmoPgError!]
  saveMemberErrors: [GmoPgError!]
}

"""
ExternalLink
"""
type ExternalLink {
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  openPlatform: OpenPlatform!
  position: Int!
  updatedAt: ISO8601DateTime!
  url: String!
}

input ExternalLinkConditions {
  companyId: ID
}

input ExternalLinkInput {
  linkId: ID
  openPlatformId: ID
  url: String
  name: String
}

"""
部屋マニュアル
"""
type FacilityManual {
  attachmentId: ID
  attachmentMimeType: String
  attachmentName: String
  attachmentSize: LongInteger
  attachmentUpdatedAt: ISO8601DateTime
  attachmentUrl: String
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  building: Building!
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  property: Property
  updatedAt: ISO8601DateTime!
}

"""
The connection type for FacilityManual.
"""
type FacilityManualConnection {
  """
  A list of edges.
  """
  edges: [FacilityManualEdge]

  """
  A list of nodes.
  """
  nodes: [FacilityManual]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type FacilityManualEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: FacilityManual
}

input FacilityManualsConditions {
  buildingId: ID
  propertyId: ID
  name: String
  propertyKindId: ID
  updatedAt: RangeDate
}

type Faq {
  answer: String!
  createdAt: ISO8601DateTime!
  enableContact: Boolean!
  enableFrequently: Boolean!
  enableTopic: Boolean!
  faqCategory: FaqCategory!
  faqTel: FaqTel
  files(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  id: ID!
  imagesAndVideos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  question: String!
  totalReference: LongInteger!
  totalResolved: LongInteger!
  totalUnresolved: LongInteger!
  totalViewFile: LongInteger!
  totalViewUrl: LongInteger!
  totalViewVideo: LongInteger!
  updatedAt: ISO8601DateTime!
  url: String
}

type FaqCategory {
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  main: FaqCategory
  name: String
  position: Int!
  shop: Shop
  subordinates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "position", direction: "asc" }
  ): FaqCategoryConnection
  updatedAt: ISO8601DateTime!
  user: User
}

"""
The connection type for FaqCategory.
"""
type FaqCategoryConnection {
  """
  A list of edges.
  """
  edges: [FaqCategoryEdge]

  """
  A list of nodes.
  """
  nodes: [FaqCategory]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type FaqCategoryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: FaqCategory
}

input FaqCategoryPositionInput {
  faqCategoryId: ID!
  position: Int!
}

input FaqConditions {
  mainFaqCategoryId: ID
  faqCategoryId: ID
  question: String
  answer: String
  keywords: String
  enableFrequently: Boolean
}

"""
The connection type for Faq.
"""
type FaqConnection {
  """
  A list of edges.
  """
  edges: [FaqEdge]

  """
  A list of nodes.
  """
  nodes: [Faq]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type FaqEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Faq
}

enum FaqKindCounter {
  total_reference
  total_resolved
  total_unresolved
  total_view_video
  total_view_url
  total_view_file
}

type FaqTel {
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  note: String
  telMobile: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for FaqTel.
"""
type FaqTelConnection {
  """
  A list of edges.
  """
  edges: [FaqTelEdge]

  """
  A list of nodes.
  """
  nodes: [FaqTel]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type FaqTelEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: FaqTel
}

enum FlowDecision {
  """
  Approve the Workflow
  """
  APPROVE

  """
  Reject the Workflow
  """
  REJECT
}

enum FlowState {
  initial
  ready
  approved
  rejected
  failed
}

"""
電子契約を催促するやつ
"""
type FlowStepReminder {
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  organizationName: String!
  remindable: Remindable!
  requestBody: String
  smsNumber: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for FlowStepReminder.
"""
type FlowStepReminderConnection {
  """
  A list of edges.
  """
  edges: [FlowStepReminderEdge]

  """
  A list of nodes.
  """
  nodes: [FlowStepReminder]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type FlowStepReminderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: FlowStepReminder
}

enum Format {
  DEFAULT
  FRONT_END
}

type FreeTalkAttachment {
  id: ID!
  lastUpdatedAt: ISO8601DateTime!
  name: String
  size: LongInteger!
}

"""
The connection type for FreeTalkAttachment.
"""
type FreeTalkAttachmentConnection {
  """
  A list of edges.
  """
  edges: [FreeTalkAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [FreeTalkAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type FreeTalkAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: FreeTalkAttachment
}

input FreeTalkConditions {
  name: String
  topicCategories: [ID!] = []
}

"""
性別
"""
type Gender {
  id: ID!
  name: String!
}

type GmoLinkPlusMemberUrl {
  cardEditNo: String!
  linkUrl: String!
  processDate: String
  warnList: [GmoPgWarning!]
}

"""
お支払い方法
"""
type GmoPaymentMethod {
  id: ID!
  name: String!
}

type GmoPgCard {
  cardName: String
  cardNo: String
  cardSeq: String
  defaultFlag: String
  deleteFlag: String
  expire: String
  holderName: String
}

type GmoPgError {
  errCode: String!
  errInfo: String!
}

type GmoPgWarning {
  warnCode: String!
  warnInfo: String!
}

type Group {
  chargeUser: User!
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  members: [User!]
  name: String!
  updatedAt: ISO8601DateTime!
}

input GroupConditions {
  name: String
  memberName: String
}

"""
The connection type for Group.
"""
type GroupConnection {
  """
  A list of edges.
  """
  edges: [GroupEdge]

  """
  A list of nodes.
  """
  nodes: [Group]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type GroupEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Group
}

"""
引渡し
"""
type HandOver {
  id: ID!
  name: String!
}

"""
本部責任者
"""
type HeadquartersManager {
  avatarUrl: String!
  company: Company!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  enableAppLogin: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enableResidentPlan: Boolean!
  id: ID!
  klass: ClientUserKlassEnum
  legacyId: String
  name: String
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
}

input HeadquartersManagerInput {
  name: String!
  email: String!
  legacyId: String
}

"""
本部店舗
"""
type HeadquartersShop {
  additionalBusinessHours: [ShopAdditionalBusinessHour!]
  address1: String
  address2: String
  allStaff: [HeadquartersStaff!]
  businessStatus: ShopBusinessStatusEnum
  city: City
  company: Company
  createdAt: ISO8601DateTime!
  headquarters: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AttachmentConnection
  legacyId: String
  level: Int!
  levelName: String!
  managerUser: HeadquartersManager
  name: String
  noticeWhenClosed: String
  onFriday: ShopBusinessStatusEnum
  onMonday: ShopBusinessStatusEnum
  onSaturday: ShopBusinessStatusEnum
  onSunday: ShopBusinessStatusEnum
  onThursday: ShopBusinessStatusEnum
  onTuesday: ShopBusinessStatusEnum
  onWednesday: ShopBusinessStatusEnum
  openFromHhmmOnFriday: String
  openFromHhmmOnMonday: String
  openFromHhmmOnSaturday: String
  openFromHhmmOnSunday: String
  openFromHhmmOnThursday: String
  openFromHhmmOnTuesday: String
  openFromHhmmOnWednesday: String
  openUntilHhmmOnFriday: String
  openUntilHhmmOnMonday: String
  openUntilHhmmOnSaturday: String
  openUntilHhmmOnSunday: String
  openUntilHhmmOnThursday: String
  openUntilHhmmOnTuesday: String
  openUntilHhmmOnWednesday: String
  parent: ShopUnion!
  pgShopId: String
  prefecture: Prefecture
  staffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): HeadquartersStaffConnection
  tel: String
  updatedAt: ISO8601DateTime!
  zipCode: String
}

input HeadquartersShopInput {
  name: String!
  tel: String!
  legacyId: String
}

input HeadquartersShopUpdateInput {
  name: String
  tel: String
  legacyId: String
}

"""
本部スタッフ
"""
type HeadquartersStaff {
  avatarUrl: String!
  company: Company!
  confirmationTokenExpiredAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  email: String
  enableAppLogin: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enableResidentPlan: Boolean!
  id: ID!
  klass: ClientUserKlassEnum
  legacyId: String
  name: String
  state: String
  stop: Boolean!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for HeadquartersStaff.
"""
type HeadquartersStaffConnection {
  """
  A list of edges.
  """
  edges: [HeadquartersStaffEdge]

  """
  A list of nodes.
  """
  nodes: [HeadquartersStaff]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type HeadquartersStaffEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: HeadquartersStaff
}

"""
Autogenerated input type of HealthCheckGmoPayment
"""
input HealthCheckGmoPaymentInput {
  companyId: ID!
  pgSiteId: String!
  pgSitePass: String
  pgShopId: String!
  pgShopPass: String
  pgPaymentApi: String!
  pgKeyHash: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of HealthCheckGmoPayment
"""
type HealthCheckGmoPaymentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  status: Int!
}

"""
ホームテンプレート
"""
type HomeComponent {
  code: String!
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for HomeComponent.
"""
type HomeComponentConnection {
  """
  A list of edges.
  """
  edges: [HomeComponentEdge]

  """
  A list of nodes.
  """
  nodes: [HomeComponent]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type HomeComponentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: HomeComponent
}

type HomeHeader {
  createdAt: ISO8601DateTime!
  displayOrder: Int
  homeHeaderComponents(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): HomeHeaderComponentConnection
  homeTemplate: HomeTemplate!
  id: ID!
  title: String!
  updatedAt: ISO8601DateTime!
}

"""
ホームテンプレート
"""
type HomeHeaderComponent {
  createdAt: ISO8601DateTime!
  displayOrder: Int
  homeComponent: HomeComponent!
  homeHeader: HomeHeader!
  id: ID!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for HomeHeaderComponent.
"""
type HomeHeaderComponentConnection {
  """
  A list of edges.
  """
  edges: [HomeHeaderComponentEdge]

  """
  A list of nodes.
  """
  nodes: [HomeHeaderComponent]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type HomeHeaderComponentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: HomeHeaderComponent
}

"""
The connection type for HomeHeader.
"""
type HomeHeaderConnection {
  """
  A list of edges.
  """
  edges: [HomeHeaderEdge]

  """
  A list of nodes.
  """
  nodes: [HomeHeader]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type HomeHeaderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: HomeHeader
}

type HomeStatus {
  hasBike: Boolean
  hasBrokenPart: Boolean
  hasPet: Boolean
  isSmoke: Boolean
}

input HomeStatusInput {
  isSmoke: Boolean
  hasPet: Boolean
  hasBike: Boolean
  hasBrokenPart: Boolean
}

"""
ホームテンプレート
"""
type HomeTemplate {
  attachment: Attachment
  company: Company!
  createdAt: ISO8601DateTime!
  homeHeaders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): HomeHeaderConnection
  id: ID!
  isDefault: Boolean
  isPublished: Boolean
  name: String!
  preferences: JSON
  updatedAt: ISO8601DateTime!
}

"""
The connection type for HomeTemplate.
"""
type HomeTemplateConnection {
  """
  A list of edges.
  """
  edges: [HomeTemplateEdge]

  """
  A list of nodes.
  """
  nodes: [HomeTemplate]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type HomeTemplateEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: HomeTemplate
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Image Kind
"""
type ImageKind {
  id: ID!
  name: String!
}

type ImportantNotice {
  notice: Notice!

  """
  既読
  """
  readStatus: Boolean!
}

"""
The connection type for ImportantNotice.
"""
type ImportantNoticeConnection {
  """
  A list of edges.
  """
  edges: [ImportantNoticeEdge]

  """
  A list of nodes.
  """
  nodes: [ImportantNotice]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type ImportantNoticeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ImportantNotice
}

type InitWebApp {
  browser: String!
  eventDate: String!
  eventName: String!
  platform: String!
}

input InitWebAppConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  orderDirection: BigQueryOrderDirection = DESC
  orderBy: [InitWebAppEnum!] = [EVENTDATE]
}

enum InitWebAppEnum {
  EVENTDATE
  EVENTNAME
  PLATFORM
  BROWSER
}

input InitWebAppPercentageConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  type: InitWebAppEnum!
}

input InitWebAppStatisticConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  type: InitWebAppEnum!
}

type InspectionClaim {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "updated_at", direction: "asc" }
  ): AttachmentConnection
  content: String
  createdAt: ISO8601DateTime!
  id: ID!
  inspectionReport: InspectionReport!
  updatedAt: ISO8601DateTime!
}

input InspectionClaimInput {
  content: String
  attachments: [ID!] = []
}

type InspectionComment {
  active: Boolean!
  content: String!
  createdAt: ISO8601DateTime!
  id: ID!
  inspectionItem: InspectionItem!
  updatedAt: ISO8601DateTime!
}

input InspectionCommentInput {
  content: String!
  active: Boolean
  commentId: ID
}

type InspectionCommonComment {
  content: String!
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
}

type InspectionImage {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "updated_at", direction: "asc" }
  ): AttachmentConnection
  createdAt: ISO8601DateTime!
  id: ID!
  inspectionImageKind: InspectionImageKind
  inspectionItem: InspectionItem!
  updatedAt: ISO8601DateTime!
}

input InspectionImageInput {
  inspectionImageId: ID
  attachments: [ID!] = []
  inspectionImageKindId: ID
}

type InspectionImageKind {
  id: ID!
  name: String!
}

type InspectionItem {
  comments: [InspectionComment!]
  commonComments: [InspectionCommonComment!]
  createdAt: ISO8601DateTime!
  id: ID!
  images: [InspectionImage!]
  index: Int!
  inspectionItemKind: InspectionItemKind
  inspectionItemStatus: InspectionItemStatus
  inspectionReport: InspectionReport!
  itemComments: [InspectionItemComment!]
  name: String!
  updatedAt: ISO8601DateTime!
}

type InspectionItemComment {
  active: Boolean!
  comment: InspectionCommonComment!
  createdAt: ISO8601DateTime!
  id: ID!
  item: InspectionItem!
  updatedAt: ISO8601DateTime!
}

input InspectionItemCommentInput {
  commentId: ID!
  active: Boolean!
}

input InspectionItemInput {
  itemId: ID
  comments: [InspectionCommentInput!]
  itemComments: [InspectionItemCommentInput!]
  images: [InspectionImageInput!]
  inspectionItemKindId: ID
  inspectionItemStatusId: ID
  name: String
}

type InspectionItemKind {
  id: ID!
  name: String!
}

type InspectionItemStatus {
  id: ID!
  name: String!
}

type InspectionReport {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "updated_at", direction: "asc" }
  ): AttachmentConnection
  building: Building!
  claim: InspectionClaim
  company: Company!
  createdAt: ISO8601DateTime!
  files: [Attachment!]
  id: ID!
  inspectionReportStatus: InspectionReportStatus!
  itemPosition: JSON
  items(withAllIndex: Boolean = false): [InspectionItem!]!
  owner: Owner!
  property: Property
  reportDate: ISO8601Date!
  reportUser: User!
  sample: InspectionReport
  updatedAt: ISO8601DateTime!
}

input InspectionReportConditions {
  buildingId: ID
  propertyId: ID
  ownerId: ID
  reportUserId: ID
  inspectionReportStatusId: ID
  buildingOrOwnerName: String
  buildingName: String
  reportDate: RangeDate
  createdAt: RangeDate
}

"""
The connection type for InspectionReport.
"""
type InspectionReportConnection {
  """
  A list of edges.
  """
  edges: [InspectionReportEdge]

  """
  A list of nodes.
  """
  nodes: [InspectionReport]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type InspectionReportEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: InspectionReport
}

type InspectionReportStatus {
  id: ID!
  name: String!
}

type IpKind {
  id: ID!
  name: String!
}

type IssueCategory {
  company: Company
  createdAt: ISO8601DateTime!
  displayType: String
  estimate: Estimate
  id: ID!
  isActive: Boolean!
  issuable: IssueCategorySubject
  issueTasks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): IssueTaskConnection
  partnerActive: Boolean!
  partnerShop: PartnerShop
  partnerState: String!
  state: String!
  updatedAt: ISO8601DateTime!
  witnessReceivedDate: ISO8601Date
  workCategory: WorkCategory!
}

input IssueCategoryConditions {
  state: [String!]
  buildingName: String
  propertyName: String
  ownerName: String
  chargeOwnerName: String
  residentName: String
  partnerShopId: ID
  createdAt: RangeDate
  decisionDate: RangeDate
  witnessConfirmedAt: RangeDate
  cancellationDate: RangeDate
  partnerEstimatedReceiptDate: RangeDate
  ownerEstimatedReceiptDate: RangeDate
  partnerOrderDate: RangeDate
  ownerOrderDate: RangeDate
  expectedCompletionDate: RangeDate
  partnerExpectedCompletionDate: RangeDate
  ownerExpectedCompletionDate: RangeDate
  completionDate: RangeDate
  categoryStates: [WorkCategoryInput!]
  partnerEstimatedCreationDate: RangeDate
  partnerSentAt: RangeDate
  companyName: String
  categoryActives: [WorkCategoryInput!]
  requestedDate: RangeDate
  chargeUserName: String
  confirmedDate: RangeDate
}

"""
The connection type for IssueCategory.
"""
type IssueCategoryConnection {
  """
  A list of edges.
  """
  edges: [IssueCategoryEdge]

  """
  A list of nodes.
  """
  nodes: [IssueCategory]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type IssueCategoryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: IssueCategory
}

enum IssueCategoryPartnerState {
  partner_not_started
  partner_processing
  partner_completed
  partner_cancelled
}

enum IssueCategoryState {
  not_started_yet
  processing
  completed
  cancelled
}

"""
Objects which may have issue_categories
"""
union IssueCategorySubject = ContractCancellation

type IssueTask {
  approvedAt: ISO8601DateTime
  comment: String
  createdAt: ISO8601DateTime!
  displayOrder: Int!
  dutyKind: DutyKind
  expiredAt: ISO8601DateTime
  id: ID!
  issueCategory: IssueCategory
  pic: PicSubject
  picType: String
  state: String
  task: Task
  updatedAt: ISO8601DateTime!
  usingApp: Boolean
}

"""
The connection type for IssueTask.
"""
type IssueTaskConnection {
  """
  A list of edges.
  """
  edges: [IssueTaskEdge]

  """
  A list of nodes.
  """
  nodes: [IssueTask]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type IssueTaskEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: IssueTask
}

enum IssueTaskState {
  not_started_yet
  processing
  completed
  cancelled
}

enum IssueTaskStateEvents {
  process
  complete
  cancel
}

"""
Represents untyped JSON
"""
scalar JSON

"""
土地権利
"""
type LandPrivilege {
  id: ID!
  name: String!
  usableForBuildings: Boolean!
  usableForProperties: Boolean!
}

enum LandPrivilegeEntityEnum {
  BUILDING
  PROPERTY
}

"""
用途地域
"""
type LandUseZone {
  id: ID!
  name: String!
}

"""
免許行政庁
"""
type LicenseAdministrator {
  id: ID!
  name: String!
}

"""
Long Integer which can also represent more than 2**32. It will be NON-QUOTED value
"""
scalar LongInteger

type MailTemplate {
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  mailContent: String
  smsContent: String
  title: String
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of MarkQuestionnaireAsRead
"""
input MarkQuestionnaireAsReadInput {
  questionnaireId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of MarkQuestionnaireAsRead
"""
type MarkQuestionnaireAsReadPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  questionnaire: AccountQuestionnaire
}

type MemberRegistrationUrl {
  errors: [GmoPgError!]
  memberRegistrationUrl: GmoLinkPlusMemberUrl
}

type Mutation {
  """
  写真をつける
  """
  addImage(
    """
    Parameters for AddImage
    """
    input: AddImageInput!
  ): AddImagePayload
  agreeToTos(
    """
    Parameters for AgreeToTos
    """
    input: AgreeToTosInput!
  ): AgreeToTosPayload
  agreeToTosFreedial(
    """
    Parameters for AgreeToTosFreedial
    """
    input: AgreeToTosFreedialInput!
  ): AgreeToTosFreedialPayload
  answerQuestionnaire(
    """
    Parameters for AnswerQuestionnaire
    """
    input: AnswerQuestionnaireInput!
  ): AnswerQuestionnairePayload
  answerQuickQuestionnaire(
    """
    Parameters for AnswerQuickQuestionnaire
    """
    input: AnswerQuickQuestionnaireInput!
  ): AnswerQuickQuestionnairePayload
  cancelPayment(
    """
    Parameters for CancelPayment
    """
    input: CancelPaymentInput!
  ): CancelPaymentPayload
  cloneInspectionReport(
    """
    Parameters for CloneInspectionReport
    """
    input: CloneInspectionReportInput!
  ): CloneInspectionReportPayload
  confirmContactChange(
    """
    Parameters for ConfirmContactChange
    """
    input: ConfirmContactChangeInput!
  ): ConfirmContactChangePayload

  """
  列データを変換する
  """
  convertColumnData(
    """
    Parameters for ConvertColumnData
    """
    input: ConvertColumnDataInput!
  ): ConvertColumnDataPayload

  """
  列データを変換する
  """
  convertData(
    """
    Parameters for ConvertData
    """
    input: ConvertDataInput!
  ): ConvertDataPayload
  countFaqStatistic(
    """
    Parameters for CountFaqStatistic
    """
    input: CountFaqStatisticInput!
  ): CountFaqStatisticPayload

  """
  アカウントホームテンプレート
  """
  createAccountHomeTemplate(
    """
    Parameters for CreateAccountHomeTemplate
    """
    input: CreateAccountHomeTemplateInput!
  ): CreateAccountHomeTemplatePayload
  createAccountInvoice(
    """
    Parameters for CreateAccountInvoice
    """
    input: CreateAccountInvoiceInput!
  ): CreateAccountInvoicePayload

  """
  GMO管理スタッフ作成。AdminManagerしか実行できません。他の権限で実行できたらバグなので報告してください
  """
  createAdminStaff(
    """
    Parameters for CreateAdminStaff
    """
    input: CreateAdminStaffInput!
  ): CreateAdminStaffPayload

  """
  電子契約のフローを開始します（その1）
  """
  createAgreement(
    """
    Parameters for CreateAgreement
    """
    input: CreateAgreementInput!
  ): CreateAgreementPayload

  """
  S3にファイルアップロードしたら、このmutationで知らせてください
  """
  createAttachment(
    """
    Parameters for CreateAttachment
    """
    input: CreateAttachmentInput!
  ): CreateAttachmentPayload

  """
  入居者作成
  """
  createBasicResident(
    """
    Parameters for CreateBasicResident
    """
    input: CreateBasicResidentInput!
  ): CreateBasicResidentPayload
  createBranchInspector(
    """
    Parameters for CreateBranchInspector
    """
    input: CreateBranchInspectorInput!
  ): CreateBranchInspectorPayload

  """
  店舗責任者作成
  """
  createBranchManager(
    """
    Parameters for CreateBranchManager
    """
    input: CreateBranchManagerInput!
  ): CreateBranchManagerPayload

  """
  店舗を作る
  """
  createBranchShop(
    """
    Parameters for CreateBranchShop
    """
    input: CreateBranchShopInput!
  ): CreateBranchShopPayload

  """
  店舗スタッフを作る
  """
  createBranchStaff(
    """
    Parameters for CreateBranchStaff
    """
    input: CreateBranchStaffInput!
  ): CreateBranchStaffPayload

  """
  建物を作る
  """
  createBuilding(
    """
    Parameters for CreateBuilding
    """
    input: CreateBuildingInput!
  ): CreateBuildingPayload
  createBulkFileTopic(
    """
    Parameters for CreateBulkFileTopic
    """
    input: CreateBulkFileTopicInput!
  ): CreateBulkFileTopicPayload
  createBulkTopic(
    """
    Parameters for CreateBulkTopic
    """
    input: CreateBulkTopicInput!
  ): CreateBulkTopicPayload

  """
  掲示板を作る
  """
  createBulletin(
    """
    Parameters for CreateBulletin
    """
    input: CreateBulletinInput!
  ): CreateBulletinPayload
  createChatTemplate(
    """
    Parameters for CreateChatTemplate
    """
    input: CreateChatTemplateInput!
  ): CreateChatTemplatePayload
  createCompany(
    """
    Parameters for CreateCompany
    """
    input: CreateCompanyInput!
  ): CreateCompanyPayload
  createCompanyPartnerShop(
    """
    Parameters for CreateCompanyPartnerShop
    """
    input: CreateCompanyPartnerShopInput!
  ): CreateCompanyPartnerShopPayload

  """
  入力されたemailあてにパスワード再設定のためのメールが飛びます
  """
  createConfirmationToken(
    """
    Parameters for CreateConfirmationToken
    """
    input: CreateConfirmationTokenInput!
  ): CreateConfirmationTokenPayload

  """
  契約を作る
  """
  createContract(
    """
    Parameters for CreateContract
    """
    input: CreateContractInput!
  ): CreateContractPayload
  createContractCancellation(
    """
    Parameters for CreateContractCancellation
    """
    input: CreateContractCancellationInput!
  ): CreateContractCancellationPayload
  createContractCancellationManual(
    """
    Parameters for CreateContractCancellationManual
    """
    input: CreateContractCancellationManualInput!
  ): CreateContractCancellationManualPayload
  createContractProvision(
    """
    Parameters for CreateContractProvision
    """
    input: CreateContractProvisionInput!
  ): CreateContractProvisionPayload

  """
  マッピング設定ポップアップ
  """
  createCsvMapping(
    """
    Parameters for CreateCsvMapping
    """
    input: CreateCsvMappingInput!
  ): CreateCsvMappingPayload

  """
  マッピングアイテムを作る
  """
  createCsvMappingItem(
    """
    Parameters for CreateCsvMappingItem
    """
    input: CreateCsvMappingItemInput!
  ): CreateCsvMappingItemPayload

  """
  連携テンプレート新規作成
  """
  createCsvTemplate(
    """
    Parameters for CreateCsvTemplate
    """
    input: CreateCsvTemplateInput!
  ): CreateCsvTemplatePayload

  """
  CSV連携ルール設定
  """
  createCsvTemplateMappings(
    """
    Parameters for CreateCsvTemplateMappings
    """
    input: CreateCsvTemplateMappingsInput!
  ): CreateCsvTemplateMappingsPayload

  """
  未入金新規作成画面
  """
  createDebitItem(
    """
    Parameters for CreateDebitItem
    """
    input: CreateDebitItemInput!
  ): CreateDebitItemPayload
  createEstimate(
    """
    Parameters for CreateEstimate
    """
    input: CreateEstimateInput!
  ): CreateEstimatePayload
  createEstimateEvidence(
    """
    Parameters for CreateEstimateEvidence
    """
    input: CreateEstimateEvidenceInput!
  ): CreateEstimateEvidencePayload
  createEstimateRepairItem(
    """
    Parameters for CreateEstimateRepairItem
    """
    input: CreateEstimateRepairItemInput!
  ): CreateEstimateRepairItemPayload

  """
  部屋マニュアル新規作成
  """
  createFacilityManual(
    """
    Parameters for CreateFacilityManual
    """
    input: CreateFacilityManualInput!
  ): CreateFacilityManualPayload
  createFaq(
    """
    Parameters for CreateFaq
    """
    input: CreateFaqInput!
  ): CreateFaqPayload

  """
  FAQカテゴリ追加
  """
  createFaqCategory(
    """
    Parameters for CreateFaqCategory
    """
    input: CreateFaqCategoryInput!
  ): CreateFaqCategoryPayload
  createFaqTel(
    """
    Parameters for CreateFaqTel
    """
    input: CreateFaqTelInput!
  ): CreateFaqTelPayload

  """
  Firebaseのトークンをつくります
  """
  createFirebaseToken(
    """
    Parameters for CreateFirebaseToken
    """
    input: CreateFirebaseTokenInput!
  ): CreateFirebaseTokenPayload

  """
  電子契約を催促します
  """
  createFlowStepReminder(
    """
    Parameters for CreateFlowStepReminder
    """
    input: CreateFlowStepReminderInput!
  ): CreateFlowStepReminderPayload

  """
  グループを作る
  """
  createGroup(
    """
    Parameters for CreateGroup
    """
    input: CreateGroupInput!
  ): CreateGroupPayload

  """
  店舗責任者作成
  """
  createHeadquartersManager(
    """
    Parameters for CreateHeadquartersManager
    """
    input: CreateHeadquartersManagerInput!
  ): CreateHeadquartersManagerPayload

  """
  店舗責任者作成
  """
  createHeadquartersStaff(
    """
    Parameters for CreateHeadquartersStaff
    """
    input: CreateHeadquartersStaffInput!
  ): CreateHeadquartersStaffPayload
  createHomeHeader(
    """
    Parameters for CreateHomeHeader
    """
    input: CreateHomeHeaderInput!
  ): CreateHomeHeaderPayload

  """
  ホームテンプレートを作成する
  """
  createHomeTemplate(
    """
    Parameters for CreateHomeTemplate
    """
    input: CreateHomeTemplateInput!
  ): CreateHomeTemplatePayload
  createInspectionCommonComment(
    """
    Parameters for CreateInspectionCommonComment
    """
    input: CreateInspectionCommonCommentInput!
  ): CreateInspectionCommonCommentPayload
  createInspectionReport(
    """
    Parameters for CreateInspectionReport
    """
    input: CreateInspectionReportInput!
  ): CreateInspectionReportPayload
  createInspectionReportAndSample(
    """
    Parameters for CreateInspectionReportAndSample
    """
    input: CreateInspectionReportAndSampleInput!
  ): CreateInspectionReportAndSamplePayload
  createInvitationCode(
    """
    Parameters for CreateInvitationCode
    """
    input: CreateInvitationCodeInput!
  ): CreateInvitationCodePayload
  createIssueTask(
    """
    Parameters for CreateIssueTask
    """
    input: CreateIssueTaskInput!
  ): CreateIssueTaskPayload
  createNotice(
    """
    Parameters for CreateNotice
    """
    input: CreateNoticeInput!
  ): CreateNoticePayload
  createOrLoadBulletins(
    """
    Parameters for CreateOrLoadBulletins
    """
    input: CreateOrLoadBulletinsInput!
  ): CreateOrLoadBulletinsPayload
  createOrLoadNotices(
    """
    Parameters for CreateOrLoadNotices
    """
    input: CreateOrLoadNoticesInput!
  ): CreateOrLoadNoticesPayload
  createOrLoadQuestionnaires(
    """
    Parameters for CreateOrLoadQuestionnaires
    """
    input: CreateOrLoadQuestionnairesInput!
  ): CreateOrLoadQuestionnairesPayload
  createOrLoadQuickQuestionnaires(
    """
    Parameters for CreateOrLoadQuickQuestionnaires
    """
    input: CreateOrLoadQuickQuestionnairesInput!
  ): CreateOrLoadQuickQuestionnairesPayload

  """
  オーナー作成
  """
  createOwner(
    """
    Parameters for CreateOwner
    """
    input: CreateOwnerInput!
  ): CreateOwnerPayload
  createOwnerEstimate(
    """
    Parameters for CreateOwnerEstimate
    """
    input: CreateOwnerEstimateInput!
  ): CreateOwnerEstimatePayload
  createPartner(
    """
    Parameters for CreatePartner
    """
    input: CreatePartnerInput!
  ): CreatePartnerPayload
  createPartnerBranchShop(
    """
    Parameters for CreatePartnerBranchShop
    """
    input: CreatePartnerBranchShopInput!
  ): CreatePartnerBranchShopPayload
  createPartnerBranchUser(
    """
    Parameters for CreatePartnerBranchUser
    """
    input: CreatePartnerBranchUserInput!
  ): CreatePartnerBranchUserPayload

  """
  メールで通知されたconfirmation_tokenを使用して、パスワードを設定します。成功すると即座にログインし、セッショントークンが返却されます
  """
  createPassword(
    """
    Parameters for CreatePassword
    """
    input: CreatePasswordInput!
  ): CreatePasswordPayload

  """
  S3にファイルアップロードするためのプリサインドURLをつくります
  """
  createPresignedUrlForPut(
    """
    Parameters for CreatePresignedUrlForPut
    """
    input: CreatePresignedUrlForPutInput!
  ): CreatePresignedUrlForPutPayload

  """
  部屋/駐車場/共用部を作る
  """
  createProperty(
    """
    Parameters for CreateProperty
    """
    input: CreatePropertyInput!
  ): CreatePropertyPayload

  """
  売却査定
  """
  createPropertyValuation(
    """
    Parameters for CreatePropertyValuation
    """
    input: CreatePropertyValuationInput!
  ): CreatePropertyValuationPayload
  createProxySession(
    """
    Parameters for CreateProxySession
    """
    input: CreateProxySessionInput!
  ): CreateProxySessionPayload
  createQuestionnaire(
    """
    Parameters for CreateQuestionnaire
    """
    input: CreateQuestionnaireInput!
  ): CreateQuestionnairePayload
  createQuickQuestionnaire(
    """
    Parameters for CreateQuickQuestionnaire
    """
    input: CreateQuickQuestionnaireInput!
  ): CreateQuickQuestionnairePayload

  """
  住み替え相談-新規作成
  """
  createRelocation(
    """
    Parameters for CreateRelocation
    """
    input: CreateRelocationInput!
  ): CreateRelocationPayload
  createRepairItem(
    """
    Parameters for CreateRepairItem
    """
    input: CreateRepairItemInput!
  ): CreateRepairItemPayload

  """
  入居者作成
  """
  createResident(
    """
    Parameters for CreateResident
    """
    input: CreateResidentInput!
  ): CreateResidentPayload

  """
  収入または支出をつくる
  """
  createRevenueExpenseItem(
    """
    Parameters for CreateRevenueExpenseItem
    """
    input: CreateRevenueExpenseItemInput!
  ): CreateRevenueExpenseItemPayload

  """
  メールアドレスとパスワードでログイン。成功時に返却されるTokenをHTTP Headerにセットして後続のクエリを発行してください
  """
  createSession(
    """
    Parameters for CreateSession
    """
    input: CreateSessionInput!
  ): CreateSessionPayload

  """
  タグを作成する
  """
  createTag(
    """
    Parameters for CreateTag
    """
    input: CreateTagInput!
  ): CreateTagPayload

  """
  例）CSVインポートの場合：createAttachmentでCSVをアップロードしたあと、このミューテーションで非同期タスクをつくってください。結果はtaskReportsクエリで参照可能です
  """
  createTaskReport(
    """
    Parameters for CreateTaskReport
    """
    input: CreateTaskReportInput!
  ): CreateTaskReportPayload
  createTopic(
    """
    Parameters for CreateTopic
    """
    input: CreateTopicInput!
  ): CreateTopicPayload
  createWorkflow(
    """
    Parameters for CreateWorkflow
    """
    input: CreateWorkflowInput!
  ): CreateWorkflowPayload
  decideAgreement(
    """
    Parameters for DecideAgreement
    """
    input: DecideAgreementInput!
  ): DecideAgreementPayload
  decideWorkflow(
    """
    Parameters for DecideWorkflow
    """
    input: DecideWorkflowInput!
  ): DecideWorkflowPayload
  destroyEstimateEvidence(
    """
    Parameters for DestroyEstimateEvidence
    """
    input: DestroyEstimateEvidenceInput!
  ): DestroyEstimateEvidencePayload
  destroyEstimateRepairItem(
    """
    Parameters for DestroyEstimateRepairItem
    """
    input: DestroyEstimateRepairItemInput!
  ): DestroyEstimateRepairItemPayload
  destroyProxySession(
    """
    Parameters for DestroyProxySession
    """
    input: DestroyProxySessionInput!
  ): DestroyProxySessionPayload

  """
  Relay IDに基づく任意のタイプのリソースを破棄
  """
  destroyResource(
    """
    Parameters for DestroyResource
    """
    input: DestroyResourceInput!
  ): DestroyResourcePayload

  """
  ログアウト。現在のTokenが無効になります
  """
  destroySession(
    """
    Parameters for DestroySession
    """
    input: DestroySessionInput!
  ): DestroySessionPayload
  downloadConstructionCompleteReport(
    """
    Parameters for DownloadConstructionCompleteReport
    """
    input: DownloadConstructionCompleteReportInput!
  ): DownloadConstructionCompleteReportPayload
  downloadEstimatePdfInvoice(
    """
    Parameters for DownloadEstimatePdfInvoice
    """
    input: DownloadEstimatePdfInvoiceInput!
  ): DownloadEstimatePdfInvoicePayload
  downloadEstimatePdfOwner(
    """
    Parameters for DownloadEstimatePdfOwner
    """
    input: DownloadEstimatePdfOwnerInput!
  ): DownloadEstimatePdfOwnerPayload
  downloadEstimatePdfPartner(
    """
    Parameters for DownloadEstimatePdfPartner
    """
    input: DownloadEstimatePdfPartnerInput!
  ): DownloadEstimatePdfPartnerPayload
  downloadEstimatePdfReceipt(
    """
    Parameters for DownloadEstimatePdfReceipt
    """
    input: DownloadEstimatePdfReceiptInput!
  ): DownloadEstimatePdfReceiptPayload
  downloadInspectionReportPdf(
    """
    Parameters for DownloadInspectionReportPdf
    """
    input: DownloadInspectionReportPdfInput!
  ): DownloadInspectionReportPdfPayload
  downloadOrderEstimatePdfOwner(
    """
    Parameters for DownloadOrderEstimatePdfOwner
    """
    input: DownloadOrderEstimatePdfOwnerInput!
  ): DownloadOrderEstimatePdfOwnerPayload
  downloadOrderEstimatePdfPartner(
    """
    Parameters for DownloadOrderEstimatePdfPartner
    """
    input: DownloadOrderEstimatePdfPartnerInput!
  ): DownloadOrderEstimatePdfPartnerPayload
  downloadResidentAcceptOrderPdf(
    """
    Parameters for DownloadResidentAcceptOrderPdf
    """
    input: DownloadResidentAcceptOrderPdfInput!
  ): DownloadResidentAcceptOrderPdfPayload
  executePayment(
    """
    Parameters for ExecutePayment
    """
    input: ExecutePaymentInput!
  ): ExecutePaymentPayload
  healthCheckGmoPg(
    """
    Parameters for HealthCheckGmoPayment
    """
    input: HealthCheckGmoPaymentInput!
  ): HealthCheckGmoPaymentPayload
  markQuestionnaireAsRead(
    """
    Parameters for MarkQuestionnaireAsRead
    """
    input: MarkQuestionnaireAsReadInput!
  ): MarkQuestionnaireAsReadPayload
  notifyTopicMessage(
    """
    Parameters for NotifyTopicMessage
    """
    input: NotifyTopicMessageInput!
  ): NotifyTopicMessagePayload

  """
  電子契約のフローを開始します（その2。契約書をアップロードしてからこれを呼んでください）
  """
  prepareAgreement(
    """
    Parameters for PrepareAgreement
    """
    input: PrepareAgreementInput!
  ): PrepareAgreementPayload

  """
  月締処理を開始します。
  """
  prepareRevenueExpenseMonthlyCloseTask(
    """
    Parameters for PrepareRevenueExpenseMonthlyCloseTask
    """
    input: PrepareRevenueExpenseMonthlyCloseTaskInput!
  ): PrepareRevenueExpenseMonthlyCloseTaskPayload
  readBulletin(
    """
    Parameters for ReadBulletin
    """
    input: ReadBulletinInput!
  ): ReadBulletinPayload
  readCsvData(
    """
    Parameters for ReadCsvData
    """
    input: ReadCsvDataInput!
  ): ReadCsvDataPayload
  readNoticeDetail(
    """
    Parameters for ReadNoticeDetail
    """
    input: ReadNoticeDetailInput!
  ): ReadNoticeDetailPayload
  recoveryRevenueExpenseVersion(
    """
    Parameters for RecoveryRevenueExpenseVersion
    """
    input: RecoveryRevenueExpenseVersionInput!
  ): RecoveryRevenueExpenseVersionPayload
  registerDeviceToken(
    """
    Parameters for RegisterDeviceToken
    """
    input: RegisterDeviceTokenInput!
  ): RegisterDeviceTokenPayload
  resendTemporaryPassword(
    """
    Parameters for ResendTemporaryPassword
    """
    input: ResendTemporaryPasswordInput!
  ): ResendTemporaryPasswordPayload

  """
  パスワード初回設定メールまたは再設定メールから開いた画面でパスワードを設定するためのAPI
  """
  resetPassword(
    """
    Parameters for ResetPassword
    """
    input: ResetPasswordInput!
  ): ResetPasswordPayload

  """
  Save external links
  """
  saveExternalLinks(
    """
    Parameters for SaveExternalLinks
    """
    input: SaveExternalLinksInput!
  ): SaveExternalLinksPayload
  saveOtherFaq(
    """
    Parameters for SaveOtherFaq
    """
    input: SaveOtherFaqInput!
  ): SaveOtherFaqPayload
  saveSlider(
    """
    Parameters for SaveSlider
    """
    input: SaveSliderInput!
  ): SaveSliderPayload

  """
  お知らせ
  """
  saveUserNotice(
    """
    Parameters for SaveUserNotice
    """
    input: SaveUserNoticeInput!
  ): SaveUserNoticePayload
  searchLegacy(
    """
    Parameters for SearchLegacy
    """
    input: SearchLegacyInput!
  ): SearchLegacyPayload
  sendInstructionMail(
    """
    Parameters for SendInstructionMail
    """
    input: SendInstructionMailInput!
  ): SendInstructionMailPayload
  sendVacantPropertyMessage(
    """
    Parameters for SendVacantPropertyMessage
    """
    input: SendVacantPropertyMessageInput!
  ): SendVacantPropertyMessagePayload
  setCompanyIp(
    """
    Parameters for SetCompanyIp
    """
    input: SetCompanyIpInput!
  ): SetCompanyIpPayload
  setFirstPassword(
    """
    Parameters for SetFirstPassword
    """
    input: SetFirstPasswordInput!
  ): SetFirstPasswordPayload
  stopAccount(
    """
    Parameters for StopAccount
    """
    input: StopAccountInput!
  ): StopAccountPayload
  stopBulkTopic(
    """
    Parameters for StopBulkTopic
    """
    input: StopBulkTopicInput!
  ): StopBulkTopicPayload
  stopPartnerUser(
    """
    Parameters for StopPartnerUser
    """
    input: StopPartnerUserInput!
  ): StopPartnerUserPayload
  stopUser(
    """
    Parameters for StopUser
    """
    input: StopUserInput!
  ): StopUserPayload

  """
  アカウントホームテンプレート
  """
  updateAccountHomeTemplate(
    """
    Parameters for UpdateAccountHomeTemplate
    """
    input: UpdateAccountHomeTemplateInput!
  ): UpdateAccountHomeTemplatePayload

  """
  GMO責任者更新
  """
  updateAdminManager(
    """
    Parameters for UpdateAdminManager
    """
    input: UpdateAdminManagerInput!
  ): UpdateAdminManagerPayload

  """
  GMOスタッフ更新
  """
  updateAdminStaff(
    """
    Parameters for UpdateAdminStaff
    """
    input: UpdateAdminStaffInput!
  ): UpdateAdminStaffPayload

  """
  電子契約を更新
  """
  updateAgreement(
    """
    Parameters for UpdateAgreement
    """
    input: UpdateAgreementInput!
  ): UpdateAgreementPayload
  updateAttachment(
    """
    Parameters for UpdateAttachment
    """
    input: UpdateAttachmentInput!
  ): UpdateAttachmentPayload
  updateBranchInspector(
    """
    Parameters for UpdateBranchInspector
    """
    input: UpdateBranchInspectorInput!
  ): UpdateBranchInspectorPayload

  """
  店舗管理者更新
  """
  updateBranchManager(
    """
    Parameters for UpdateBranchManager
    """
    input: UpdateBranchManagerInput!
  ): UpdateBranchManagerPayload

  """
  店舗を更新する
  """
  updateBranchShop(
    """
    Parameters for UpdateBranchShop
    """
    input: UpdateBranchShopInput!
  ): UpdateBranchShopPayload

  """
  店舗スタッフを更新する
  """
  updateBranchStaff(
    """
    Parameters for UpdateBranchStaff
    """
    input: UpdateBranchStaffInput!
  ): UpdateBranchStaffPayload

  """
  建物を更新する
  """
  updateBuilding(
    """
    Parameters for UpdateBuilding
    """
    input: UpdateBuildingInput!
  ): UpdateBuildingPayload
  updateBulkTopic(
    """
    Parameters for UpdateBulkTopic
    """
    input: UpdateBulkTopicInput!
  ): UpdateBulkTopicPayload

  """
  掲示板を更新する
  """
  updateBulletin(
    """
    Parameters for UpdateBulletin
    """
    input: UpdateBulletinInput!
  ): UpdateBulletinPayload

  """
  チャットテンプレートを更新する
  """
  updateChatTemplate(
    """
    Parameters for UpdateChatTemplate
    """
    input: UpdateChatTemplateInput!
  ): UpdateChatTemplatePayload
  updateCompany(
    """
    Parameters for UpdateCompany
    """
    input: UpdateCompanyInput!
  ): UpdateCompanyPayload
  updateCompanyInvoice(
    """
    Parameters for UpdateCompanyInvoice
    """
    input: UpdateCompanyInvoiceInput!
  ): UpdateCompanyInvoicePayload
  updateCompanyLevelNames(
    """
    Parameters for UpdateCompanyLevelNames
    """
    input: UpdateCompanyLevelNamesInput!
  ): UpdateCompanyLevelNamesPayload
  updateCompanyPartnerShop(
    """
    Parameters for UpdateCompanyPartnerShop
    """
    input: UpdateCompanyPartnerShopInput!
  ): UpdateCompanyPartnerShopPayload
  updateCompanyPaymentInfo(
    """
    Parameters for UpdateCompanyPaymentInfo
    """
    input: UpdateCompanyPaymentInfoInput!
  ): UpdateCompanyPaymentInfoPayload

  """
  契約をを更新する
  """
  updateContract(
    """
    Parameters for UpdateContract
    """
    input: UpdateContractInput!
  ): UpdateContractPayload
  updateContractCancellation(
    """
    Parameters for UpdateContractCancellation
    """
    input: UpdateContractCancellationInput!
  ): UpdateContractCancellationPayload
  updateContractCancellationManual(
    """
    Parameters for UpdateContractCancellationManual
    """
    input: UpdateContractCancellationManualInput!
  ): UpdateContractCancellationManualPayload
  updateContractProvision(
    """
    Parameters for UpdateContractProvision
    """
    input: UpdateContractProvisionInput!
  ): UpdateContractProvisionPayload

  """
  マッピング設定ポップアップ
  """
  updateCsvMapping(
    """
    Parameters for UpdateCsvMapping
    """
    input: UpdateCsvMappingInput!
  ): UpdateCsvMappingPayload

  """
  マッピング設定ポップアップ
  """
  updateCsvMappingItem(
    """
    Parameters for UpdateCsvMappingItem
    """
    input: UpdateCsvMappingItemInput!
  ): UpdateCsvMappingItemPayload

  """
  新しいリンクテンプレートを更新
  """
  updateCsvTemplate(
    """
    Parameters for UpdateCsvTemplate
    """
    input: UpdateCsvTemplateInput!
  ): UpdateCsvTemplatePayload

  """
  変換ルールを更新
  """
  updateCsvTemplateMappings(
    """
    Parameters for UpdateCsvTemplateMappings
    """
    input: UpdateCsvTemplateMappingsInput!
  ): UpdateCsvTemplateMappingsPayload

  """
  未入金編集
  """
  updateDebitItem(
    """
    Parameters for UpdateDebitItem
    """
    input: UpdateDebitItemInput!
  ): UpdateDebitItemPayload
  updateEstimate(
    """
    Parameters for UpdateEstimate
    """
    input: UpdateEstimateInput!
  ): UpdateEstimatePayload
  updateEstimateEvidence(
    """
    Parameters for UpdateEstimateEvidence
    """
    input: UpdateEstimateEvidenceInput!
  ): UpdateEstimateEvidencePayload
  updateEstimateRepairItem(
    """
    Parameters for UpdateEstimateRepairItem
    """
    input: UpdateEstimateRepairItemInput!
  ): UpdateEstimateRepairItemPayload
  updateEstimateSetting(
    """
    Parameters for UpdateEstimateSetting
    """
    input: UpdateEstimateSettingInput!
  ): UpdateEstimateSettingPayload

  """
  部屋マニュアル更新
  """
  updateFacilityManual(
    """
    Parameters for UpdateFacilityManual
    """
    input: UpdateFacilityManualInput!
  ): UpdateFacilityManualPayload
  updateFaq(
    """
    Parameters for UpdateFaq
    """
    input: UpdateFaqInput!
  ): UpdateFaqPayload

  """
  Update FAQ category
  """
  updateFaqCategory(
    """
    Parameters for UpdateFaqCategory
    """
    input: UpdateFaqCategoryInput!
  ): UpdateFaqCategoryPayload

  """
  Update FAQ category position
  """
  updateFaqCategoryPosition(
    """
    Parameters for UpdateFaqCategoryPosition
    """
    input: UpdateFaqCategoryPositionInput!
  ): UpdateFaqCategoryPositionPayload

  """
  グループを更新
  """
  updateGroup(
    """
    Parameters for UpdateGroup
    """
    input: UpdateGroupInput!
  ): UpdateGroupPayload

  """
  本部責任者更新
  """
  updateHeadquartersManager(
    """
    Parameters for UpdateHeadquartersManager
    """
    input: UpdateHeadquartersManagerInput!
  ): UpdateHeadquartersManagerPayload

  """
  本部店舗を更新する
  """
  updateHeadquartersShop(
    """
    Parameters for UpdateHeadquartersShop
    """
    input: UpdateHeadquartersShopInput!
  ): UpdateHeadquartersShopPayload

  """
  本部スタッフ更新
  """
  updateHeadquartersStaff(
    """
    Parameters for UpdateHeadquartersStaff
    """
    input: UpdateHeadquartersStaffInput!
  ): UpdateHeadquartersStaffPayload

  """
  ホームヘッダーの更新
  """
  updateHomeHeader(
    """
    Parameters for UpdateHomeHeader
    """
    input: UpdateHomeHeaderInput!
  ): UpdateHomeHeaderPayload

  """
  ホーム テンプレートを更新する
  """
  updateHomeTemplate(
    """
    Parameters for UpdateHomeTemplate
    """
    input: UpdateHomeTemplateInput!
  ): UpdateHomeTemplatePayload

  """
  ホーム テンプレート コンテンツの更新
  """
  updateHomeTemplateContent(
    """
    Parameters for UpdateHomeTemplateContent
    """
    input: UpdateHomeTemplateContentInput!
  ): UpdateHomeTemplateContentPayload
  updateInspectionReport(
    """
    Parameters for UpdateInspectionReport
    """
    input: UpdateInspectionReportInput!
  ): UpdateInspectionReportPayload
  updateInspectionReportAndSample(
    """
    Parameters for UpdateInspectionReportAndSample
    """
    input: UpdateInspectionReportAndSampleInput!
  ): UpdateInspectionReportAndSamplePayload
  updateIssueCategory(
    """
    Parameters for UpdateIssueCategory
    """
    input: UpdateIssueCategoryInput!
  ): UpdateIssueCategoryPayload
  updateIssueTask(
    """
    Parameters for UpdateIssueTask
    """
    input: UpdateIssueTaskInput!
  ): UpdateIssueTaskPayload
  updateNotice(
    """
    Parameters for UpdateNotice
    """
    input: UpdateNoticeInput!
  ): UpdateNoticePayload

  """
  オーナー更新
  """
  updateOwner(
    """
    Parameters for UpdateOwner
    """
    input: UpdateOwnerInput!
  ): UpdateOwnerPayload
  updatePartner(
    """
    Parameters for UpdatePartner
    """
    input: UpdatePartnerInput!
  ): UpdatePartnerPayload
  updatePartnerBranchShop(
    """
    Parameters for UpdatePartnerBranchShop
    """
    input: UpdatePartnerBranchShopInput!
  ): UpdatePartnerBranchShopPayload
  updatePartnerBranchUser(
    """
    Parameters for UpdatePartnerBranchUser
    """
    input: UpdatePartnerBranchUserInput!
  ): UpdatePartnerBranchUserPayload
  updatePartnerCompanyLevelNames(
    """
    Parameters for UpdatePartnerCompanyLevelNames
    """
    input: UpdatePartnerCompanyLevelNamesInput!
  ): UpdatePartnerCompanyLevelNamesPayload
  updatePartnerHeadquartersUser(
    """
    Parameters for UpdatePartnerHeadquartersUser
    """
    input: UpdatePartnerHeadquartersUserInput!
  ): UpdatePartnerHeadquartersUserPayload

  """
  ログイン者が自身のパスワードを更新するためのAPI。パスワード更新が成功すると、当該ユーザの全デバイスのログインが強制的に解除されます。返却される新たなTokenをヘッダに反映しないと、後続の操作ができなくなります
  """
  updatePassword(
    """
    Parameters for UpdatePassword
    """
    input: UpdatePasswordInput!
  ): UpdatePasswordPayload

  """
  部屋/駐車場/共用部を更新する
  """
  updateProperty(
    """
    Parameters for UpdateProperty
    """
    input: UpdatePropertyInput!
  ): UpdatePropertyPayload
  updateQuestionnaire(
    """
    Parameters for UpdateQuestionnaire
    """
    input: UpdateQuestionnaireInput!
  ): UpdateQuestionnairePayload
  updateQuickQuestionnaire(
    """
    Parameters for UpdateQuickQuestionnaire
    """
    input: UpdateQuickQuestionnaireInput!
  ): UpdateQuickQuestionnairePayload
  updateRelocation(
    """
    Parameters for UpdateRelocation
    """
    input: UpdateRelocationInput!
  ): UpdateRelocationPayload
  updateRepairItem(
    """
    Parameters for UpdateRepairItem
    """
    input: UpdateRepairItemInput!
  ): UpdateRepairItemPayload

  """
  入居者更新
  """
  updateResident(
    """
    Parameters for UpdateResident
    """
    input: UpdateResidentInput!
  ): UpdateResidentPayload

  """
  収入または支出を更新する
  """
  updateRevenueExpenseItem(
    """
    Parameters for UpdateRevenueExpenseItem
    """
    input: UpdateRevenueExpenseItemInput!
  ): UpdateRevenueExpenseItemPayload

  """
  タグを更新する
  """
  updateTag(
    """
    Parameters for UpdateTag
    """
    input: UpdateTagInput!
  ): UpdateTagPayload
  updateTopic(
    """
    Parameters for UpdateTopic
    """
    input: UpdateTopicInput!
  ): UpdateTopicPayload
  updateTotalProcessingWorkflow(
    """
    Parameters for UpdateTotalProcessingWorkflow
    """
    input: UpdateTotalProcessingWorkflowInput!
  ): UpdateTotalProcessingWorkflowPayload
}

type Notice {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  content: String!
  createdAt: ISO8601DateTime!

  """
  公開中はopen_status = true AND now between (open_start_at, open_end_at)
  """
  enabled: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  noticePriority: NoticePriority!
  owners: [Owner!]!
  pushReservedAt: ISO8601DateTime
  pushSchedulingMethod: PushSchedulingMethod
  pushedAt: ISO8601DateTime
  receiverType: NoticeTarget!

  """
  自動送信：True、手動送信：False
  """
  reserved: Boolean!
  residents: [Resident!]!
  shop: Shop
  state: NoticeState!
  title: String!
  updatedAt: ISO8601DateTime!

  """
  公開開始日
  """
  visibleFrom: ISO8601DateTime!

  """
  公開終了日
  """
  visibleUntil: ISO8601DateTime
}

input NoticeConditions {
  title: String
  receiverTypeId: ID
  noticeTargetIds: [ID!]
  enabled: Boolean
  reserved: Boolean
  pushSchedulingMethodId: ID
  state: NoticeState
  visibleFrom: RangeDate
  visibleUntil: RangeDate
  noticePriorityIds: [ID!]
}

"""
The connection type for Notice.
"""
type NoticeConnection {
  """
  A list of edges.
  """
  edges: [NoticeEdge]

  """
  A list of nodes.
  """
  nodes: [Notice]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type NoticeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Notice
}

"""
種別
"""
type NoticeKind {
  id: ID!
  name: String!
}

type NoticePriority {
  id: ID!
  name: String!
}

enum NoticeState {
  UNDELIVERED
  SCHEDULED
  DELIVERED
}

type NoticeTarget {
  description: String!
  id: ID!
  name: String!
  target: String!
}

type NotificationEndpoint {
  arn: String!
}

"""
Autogenerated input type of NotifyTopicMessage
"""
input NotifyTopicMessageInput {
  topicId: ID!
  title: String!
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of NotifyTopicMessage
"""
type NotifyTopicMessagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  status: Boolean!
}

input OpenHhmmInput {
  type: String!
  state: String!
  time: String!
}

type OpenPlatform {
  id: ID!
  name: String!
}

input Order {
  by: String!
  direction: String!
}

type OtherFaq {
  company: Company!
  createdAt: ISO8601DateTime!
  enableContact: Boolean!
  enableTopic: Boolean!
  faqTel: FaqTel
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime!
}

type Owner {
  address1: String
  address2: String
  avatarUrl(renewOwner: Boolean = false): String
  birthday: ISO8601Date
  canChangeContactInfo: Boolean!
  chargeUser: BranchStaff
  chatChargeUsers: [ChatChargeUser!]
  city: City
  closingDay: Int
  closingMonth: Int
  company: Company!
  companyName: String
  companyNameKana: String
  confirmationTokenExpiredAt: ISO8601DateTime
  contactPriority: ContactPriority
  createdAt: ISO8601DateTime!
  email: String
  emailNew: String
  fullName: String
  fullNameKana: String
  gender: Gender
  gmoPgMemberId: String
  gmoPgRegisted: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AttachmentConnection
  kind: AccountKind
  klass: String
  legacyId: String
  loginId: String
  nameFamily: String
  nameFamilyKana: String
  nameFirst: String
  nameFirstKana: String
  nameJoined: String
  nameJoinedKana: String
  prefecture: Prefecture
  reportAvailableFrom: Int
  state: String
  stop: Boolean!
  tags: [Tag!]
  telFixed: String
  telMobile: String
  telMobileNew: String
  updatedAt: ISO8601DateTime!
  zipCode: String
}

input OwnerConditions {
  id: ID
  loginId: String
  nameFamily: String
  nameFirst: String
  nameFamilyKana: String
  nameFirstKana: String
  email: String
  telMobile: String
  telFixed: String
  zipCode: String
  prefectureCode: String
  cityCode: String
  address1: String
  address2: String
  chargeUserName: String
  chargeUserId: ID
  state: [String!]
  companyName: String
  companyNameKana: String
  kindId: ID
  genderId: ID
  birthday: ISO8601Date
  gmoPgRegisted: Boolean
  gmoPgMemberId: String
  tagIds: [ID!]
  legacyId: String
  searchWithCompany: Boolean = false
  ownerName: String
  chatChargeUserIds: [ID!]
}

"""
The connection type for Owner.
"""
type OwnerConnection {
  """
  A list of edges.
  """
  edges: [OwnerEdge]

  """
  A list of nodes.
  """
  nodes: [Owner]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type OwnerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Owner
}

type OwnerPropertyRentSituation {
  month: Int!
  summary: OwnerPropertyRentSituationMonthly
}

type OwnerPropertyRentSituationMonthly {
  availableRooms: Int!
  totalRooms: Int!
}

type OwnerPropertyRentSituationRoot {
  building: Building
  months: [OwnerPropertyRentSituation!]
  year: Int!
}

type OwnerRevenueExpend {
  building: Building
  incomeAdditional: LongInteger!
  incomeManagement: LongInteger!
  incomeParking: LongInteger!
  incomeRent: LongInteger!
  pmBm: LongInteger!
  totalIncome: LongInteger!
  updatedAt: ISO8601DateTime!
}

type OwnerRevenueExpendMonth {
  month: Int
  summary: OwnerRevenueExpendSummary
}

type OwnerRevenueExpendRoot {
  building: Building
  months: [OwnerRevenueExpendMonth!]
  year: Int
}

type OwnerRevenueExpendSummary {
  incomeAdditional: LongInteger!
  incomeManagement: LongInteger!
  incomeParking: LongInteger!
  incomeRent: LongInteger!
  pmBm: LongInteger!
  totalIncome: LongInteger!
}

type OwnerSummary {
  availableRooms: Int!
  buildings: [BuildingSummary!]
  incomeAdditional: LongInteger!
  incomeManagement: LongInteger!
  incomeParking: LongInteger!
  incomeRent: LongInteger!
  isLimitedFunction: Boolean
  latePaymentAmount: LongInteger!
  latePaymentCount: Int!
  occupiedParkingLots: Int!
  occupiedRooms: Int!
  pmBm: LongInteger!
  propertyDebited: Boolean
  summaryExpenseKinds: [OwnerSummaryKind!]
  summaryExpenseKindsByYear: [OwnerSummaryKind!]
  summaryMonthlyReport: Attachment
  summaryReport: Attachment
  summaryRevenueKinds: [OwnerSummaryKind!]
  summaryRevenueKindsByYear: [OwnerSummaryKind!]
  summaryYearlyReport: Attachment
  totalBuildings: Int!
  totalExpensesForYear: LongInteger!
  totalIncome: LongInteger!
  totalIncomeBeginYearUntilNow: LongInteger!
  totalIncomes: [TotalIncome!]
  totalParkingLots: Int!
  totalRevenuesExpenses: [TotalRevenueOrExpense!]
  totalRevenuesForYear: LongInteger!
  totalRooms: Int!
  updatedAt: ISO8601DateTime!
}

type OwnerSummaryDebitKind {
  amount: LongInteger!
  debitKind: DebitKind!
}

type OwnerSummaryKind {
  amount: LongInteger!
  revenueExpenseKind: RevenueExpenseKind!
  summaryProperties: [OwnerSummaryProperty!]
}

type OwnerSummaryProperty {
  amount: Int!
  property: Property
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type PartnerBranchManager {
  confirmed: Boolean!
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  isManager: Boolean!
  klass: String!
  name: String!
  partnerCompany: PartnerCompany!
  stop: Boolean!
  tel: String
  updatedAt: ISO8601DateTime!
}

type PartnerBranchShop {
  address1: String
  address2: String
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  availableAreas(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): CityConnection
  city: City
  createdAt: ISO8601DateTime!
  description: String
  headquarters: Boolean!
  id: ID!
  isPublicSetting: Boolean
  isWitness: Boolean!
  levelName: String!
  name: String!
  note: String
  openFromHhmm: JSON
  openUntilHhmm: JSON
  parent: PartnerShopUnion!
  partnerBranchManager: PartnerBranchManager!
  partnerCompany: PartnerCompany
  prefecture: Prefecture
  referralCode: String
  shopLevel: Int!
  tags: [String!]!
  telMobile: String
  title: String
  updatedAt: ISO8601DateTime!
  workables: [Workable!]!
  zipCode: String
}

input PartnerBranchShopConditions {
  name: String
  telMobile: String
  managerName: String
  managerEmail: String
  shopLevel: Int
  parentLevel: Int
}

"""
The connection type for PartnerBranchShop.
"""
type PartnerBranchShopConnection {
  """
  A list of edges.
  """
  edges: [PartnerBranchShopEdge]

  """
  A list of nodes.
  """
  nodes: [PartnerBranchShop]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PartnerBranchShopEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PartnerBranchShop
}

type PartnerBranchStaff {
  confirmed: Boolean!
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  isManager: Boolean!
  klass: String!
  managerPartnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PartnerBranchShopConnection!
  name: String!
  partnerCompany: PartnerCompany!
  partnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PartnerBranchShopConnection!
  stop: Boolean!
  tel: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for PartnerBranchStaff.
"""
type PartnerBranchStaffConnection {
  """
  A list of edges.
  """
  edges: [PartnerBranchStaffEdge]

  """
  A list of nodes.
  """
  nodes: [PartnerBranchStaff]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PartnerBranchStaffEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PartnerBranchStaff
}

union PartnerBranchUser = PartnerBranchManager | PartnerBranchStaff

enum PartnerBranchUserKlassEnum {
  PartnerBranchManager
  PartnerBranchStaff
}

type PartnerCompany {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  partnerHeadquartersShop: PartnerHeadquartersShop
  representativeName: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for PartnerCompany.
"""
type PartnerCompanyConnection {
  """
  A list of edges.
  """
  edges: [PartnerCompanyEdge]

  """
  A list of nodes.
  """
  nodes: [PartnerCompany]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PartnerCompanyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PartnerCompany
}

input PartnerCompanyInput {
  name: String
  representativeName: String
}

type PartnerCompanyLevelName {
  level: Int!
  name: String!
}

type PartnerHeadquartersManager {
  confirmed: Boolean!
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  isManager: Boolean!
  klass: String!
  name: String!
  partnerCompany: PartnerCompany!
  partnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PartnerShopConnection
  state: String!
  stop: Boolean!
  tel: String
  updatedAt: ISO8601DateTime!
}

input PartnerHeadquartersManagerInput {
  name: String
  email: String
  skipRequiredEmail: Boolean = false
}

type PartnerHeadquartersShop {
  address1: String
  address2: String
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  availableAreas(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): CityConnection
  city: City
  company: Company
  createdAt: ISO8601DateTime!
  description: String
  headquarters: Boolean!
  id: ID!
  isPublicSetting: Boolean
  isWitness: Boolean
  levelName: String!
  name: String
  note: String
  openFromHhmm: JSON
  openUntilHhmm: JSON
  parent: PartnerShopUnion!
  partnerCompany: PartnerCompany
  partnerHeadquartersManager: PartnerHeadquartersManager
  prefecture: Prefecture
  referralCode: String
  shopLevel: Int!
  tags: [String!]
  telMobile: String
  title: String
  updatedAt: ISO8601DateTime!
  workables: [Workable!]!
  zipCode: String
}

input PartnerHeadquartersShopInput {
  name: String
  telMobile: String
  openFromHhmm: [OpenHhmmInput!]
  openUntilHhmm: [OpenHhmmInput!]
  address1: String
  address2: String
  cityCode: String
  description: String
  isPublicSetting: Boolean
  isWitness: Boolean
  note: String
  tags: [String!]
  title: String
  zipCode: String
  workableIds: [ID!]
  availableAreas: [String!]
  companyId: ID
}

type PartnerHeadquartersStaff {
  confirmed: Boolean!
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  isManager: Boolean!
  klass: String!
  name: String!
  partnerCompany: PartnerCompany!
  partnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PartnerShopConnection
  state: String!
  stop: Boolean!
  tel: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for PartnerHeadquartersStaff.
"""
type PartnerHeadquartersStaffConnection {
  """
  A list of edges.
  """
  edges: [PartnerHeadquartersStaffEdge]

  """
  A list of nodes.
  """
  nodes: [PartnerHeadquartersStaff]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PartnerHeadquartersStaffEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PartnerHeadquartersStaff
}

union PartnerHeadquartersUser =
    PartnerHeadquartersManager
  | PartnerHeadquartersStaff

enum PartnerHeadquartersUserKlassEnum {
  PartnerHeadquartersManager
  PartnerHeadquartersStaff
}

enum PartnerIssueTaskEnum {
  """
  立会い日程調整
  """
  WITNESS_RESERVATION

  """
  入居者負担見積
  """
  RESIDENT_BURDEN_ESTIMATES

  """
  管理会社向け見積
  """
  ESTIMATE_FOR_COMPANIES

  """
  工事完了報告
  """
  COMPLETION_REPORTS
}

type PartnerShop {
  address1: String
  address2: String
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  availableAreas(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): CityConnection
  city: City
  company: Company
  companyPartnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompanyPartnerShopConnection
  createdAt: ISO8601DateTime!
  description: String
  headquarters: Boolean!
  id: ID!
  isPublicSetting: Boolean
  isWitness: Boolean
  levelName: String!
  manager: PartnerUser!
  name: String
  note: String
  openFromHhmm: JSON
  openUntilHhmm: JSON
  parent: PartnerShopUnion!
  partnerCompany: PartnerCompany
  prefecture: Prefecture
  referralCode: String
  shopLevel: Int!
  tags: [String!]
  telMobile: String
  title: String
  updatedAt: ISO8601DateTime!
  workables: [Workable!]
  zipCode: String
}

input PartnerShopConditions {
  name: String
  telMobile: String
  managerName: String
  managerEmail: String
  state: CompanyPartnerShopState
}

"""
The connection type for PartnerShop.
"""
type PartnerShopConnection {
  """
  A list of edges.
  """
  edges: [PartnerShopEdge]

  """
  A list of nodes.
  """
  nodes: [PartnerShop]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PartnerShopEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PartnerShop
}

input PartnerShopNotConnectedConditions {
  name: String
  telMobile: String
  zipCode: String
  address1: String
  referralCode: String
  tags: [String!]
  partnerCompanyName: String
  workableIds: [ID!]
  availableAreas: [String!]
  managerName: String
}

union PartnerShopUnion = PartnerBranchShop | PartnerHeadquartersShop

input PartnerStaffConditions {
  email: String
  klass: String
  name: String
  state: String
  partnerShopIds: [ID!] = []
  isManager: Boolean
}

type PartnerUser {
  avatarUrl: String
  confirmed: Boolean!
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  isManager: Boolean!
  klass: String!
  name: String!
  partnerCompany: PartnerCompany!
  partnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PartnerShopConnection
  state: String!
  stop: Boolean!
  tel: String
  updatedAt: ISO8601DateTime!
}

input PartnerUserConditions {
  name: String
  email: String
}

"""
The connection type for PartnerUser.
"""
type PartnerUserConnection {
  """
  A list of edges.
  """
  edges: [PartnerUserEdge]

  """
  A list of nodes.
  """
  nodes: [PartnerUser]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PartnerUserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PartnerUser
}

type PaymentSettings {
  keyHash: String!
  pgPaymentApi: String!
  pgPaymentSite: String!
  pgShopId: String!
}

type PercentageData {
  contribution: Int!
  name: String!
  percentage: Float!
}

"""
Objects which may have issue tasks
"""
union PicSubject = Account | PartnerUser | User

"""
料金プラン
"""
type Plan {
  description: String
  id: ID!
  initialCost: Int!
  monthlyCost: Int!
  name: String
}

"""
都道府県
"""
type Prefecture {
  code: String!
  id: ID!
  name: String!
}

"""
The connection type for Prefecture.
"""
type PrefectureConnection {
  """
  A list of edges.
  """
  edges: [PrefectureEdge]

  """
  A list of nodes.
  """
  nodes: [Prefecture]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PrefectureEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Prefecture
}

"""
売却物件の種類
"""
type PreferredContact {
  id: ID!
  name: String!
}

"""
Autogenerated input type of PrepareAgreement
"""
input PrepareAgreementInput {
  agreementId: ID!
  attachmentId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of PrepareAgreement
"""
type PrepareAgreementPayload {
  agreement: Agreement!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of PrepareRevenueExpenseMonthlyCloseTask
"""
input PrepareRevenueExpenseMonthlyCloseTaskInput {
  ownerId: ID!
  buildingIds: [ID!]!
  yearMonth: Int!
  closeAll: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of PrepareRevenueExpenseMonthlyCloseTask
"""
type PrepareRevenueExpenseMonthlyCloseTaskPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  revenueExpenseMonthlyCloseTaskType: RevenueExpenseMonthlyCloseTask
}

type PresignedUrlSet {
  objectKey: String!
  thumbObjectKey: String
  thumbUrl: String
  url: String!
}

input PropertiesConditions {
  id: ID
  name: String
  zipCode: String
  prefectureCode: String
  cityCode: String
  address1: String
  address2: String
  kindId: ID
  buildingId: ID
  ownerId: ID
  landPrivilegeId: ID
  roomArea: String
  balconyArea: String
  floor: Int
  structureId: ID
  roomLayoutId: ID
  administrativeTypeId: ID
  handOverId: ID
  note: String
  lastFollowedUpAt: RangeDate
  legacyId: String
  buildingOrOwnerName: String
  estimateRent: String
}

"""
部屋/駐車場/共用部
"""
type Property {
  address1: String
  address2: String
  administrativeType: AdministrativeType
  balconyArea: String
  building: Building!
  buildingMergedEquipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  city: City
  company: Company!
  contract: Contract
  createdAt: ISO8601DateTime!
  debited: Boolean
  equipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  estimateRent: Int
  floor: Int
  handOver: HandOver
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "name", direction: "asc" }
  ): AttachmentConnection
  kind: PropertyKind!
  landPrivilege: LandPrivilege
  lastFollowedUpAt: ISO8601DateTime
  legacyId: String
  name: String
  note: String
  owner: Owner
  prefecture: Prefecture
  revenueExpenseItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    yearMonthAccrual: Int = null
  ): RevenueExpenseItemConnection
  roomArea: String
  roomLayout: RoomLayout
  structure: Structure
  updatedAt: ISO8601DateTime!
  virtualBank: VirtualBank
  zipCode: String
}

type PropertyAttachment {
  id: ID!
  lastUpdatedAt: ISO8601DateTime!
  name: String
  size: LongInteger!
}

"""
The connection type for PropertyAttachment.
"""
type PropertyAttachmentConnection {
  """
  A list of edges.
  """
  edges: [PropertyAttachmentEdge]

  """
  A list of nodes.
  """
  nodes: [PropertyAttachment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PropertyAttachmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PropertyAttachment
}

"""
The connection type for Property.
"""
type PropertyConnection {
  """
  A list of edges.
  """
  edges: [PropertyEdge]

  """
  A list of nodes.
  """
  nodes: [Property]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PropertyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Property
}

"""
Property Kind
"""
type PropertyKind {
  id: ID!
  name: String!
}

"""
売却査定
"""
type PropertyValuation {
  address: String
  askingPrice: LongInteger!
  building: Building
  buildingArea: Float
  builtMonth: Int
  builtYear: Int
  city: City!
  company: Company!
  createdAt: ISO8601DateTime!
  currentChargeRent: Int
  floor: Int
  floorPlanDescription: String
  fullChargeRent: Int
  id: ID!
  landArea: Float
  misc: String
  name: String!
  nearestStation: String!
  owner: Owner!
  prefecture: Prefecture!
  preferredContact: PreferredContact!
  preferredTime: String
  property: Property
  reasonForSale: String
  relationToOwner: String
  structure: Structure
  tel: String
  updatedAt: ISO8601DateTime!
  valuationKind: ValuationKind!
  walkMinutes: Int
}

input PropertyValuationConditions {
  id: ID
  name: String
  prefectureCode: String
  cityCode: String
  address: String
  valuationKindId: ID
  landArea: String
  buildingArea: String
  floor: String
  structureId: ID
  nearestStation: String
  walkMinutes: String
  builtYear: String
  builtMonth: String
  floorPlanDescription: String
  askingPrice: String
  currentChargeRent: String
  fullChargeRent: String
  preferredTime: String
  reasonForSale: String
  preferredContactId: ID
  tel: String
  relationToOwner: String
  misc: String
  ownerId: ID
  ownerNameFamily: String
  ownerNameFirst: String
}

"""
The connection type for PropertyValuation.
"""
type PropertyValuationConnection {
  """
  A list of edges.
  """
  edges: [PropertyValuationEdge]

  """
  A list of nodes.
  """
  nodes: [PropertyValuation]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type PropertyValuationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PropertyValuation
}

type PushSchedulingMethod {
  id: ID!
  name: String!
}

type Query {
  """
  Return account app launched percentage
  """
  accountAppLaunchedPercentages(
    conditions: AccountAppLaunchedPercentageConditions!
  ): [PercentageData!]

  """
  Return account app launched statistic
  """
  accountAppLaunchedStatistics(
    conditions: AccountAppLaunchedStatisticConditions!
  ): [StatisticData!]
  accountBranchShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
  ): BranchShopConnection

  """
  入居の掲示板一覧
  """
  accountBulletins(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: BulletinConditions = null
    order: Order = { by: "visible_from", direction: "desc" }
  ): BulletinConnection!

  """
  指定した会員のカード情報を参照します。
  """
  accountCards: AccountCards

  """
  ホームテンプレート
  """
  accountHomeTemplate: AccountHomeTemplate

  """
  請求書詳細
  """
  accountInvoice(id: ID!): AccountInvoice!

  """
  請求書一覧
  """
  accountInvoices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: AccountInvoiceConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): AccountInvoiceConnection
  accountKinds: [AccountKind!]!

  """
  メールの詳細
  """
  accountMailTemplate(id: ID!): AccountMailTemplate!

  """
  メール履歴
  """
  accountMailTemplates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: AccountMailTemplateConditions = null
    order: Order = { by: "created_at", direction: "desc" }
    companyId: ID!
    accountKlass: String!
  ): AccountMailTemplateConnection!

  """
  オーナーや入居者お知らせ一覧
  """
  accountNotices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "notices.visible_from", direction: "desc" }
  ): AccountNoticeConnection!
  accountNoticesUnreadCount(logKey: String = "no-param"): Int!
  accountQuestionnaires(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    states: [AccountQuestionnaireState!]
  ): AccountQuestionnaireConnection!
  accountQuestionnairesUnreadCount(logKey: String = "no-param"): Int!
  accountTotalUnreadMessagesAndUnreadNotices(
    accountIds: [ID!]!
    logKey: String = "no-param"
  ): [AccountUnreadMessagesAndNotices!]!

  """
  管理スタッフ詳細
  """
  adminStaff(id: ID!): AdminStaff

  """
  管理スタッフ一覧
  """
  adminStaffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: AdminStaffsConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): AdminStaffConnection
  administrativeTypes: [AdministrativeType!]!

  """
  電子契約詳細
  """
  agreement(id: ID!): Agreement!
  agreementPositionTypes: [AgreementPosition!]!

  """
  電子契約ステップ。非ログインユーザが電子サインするために使う。documentフィールドから契約書のurlを取得できます。フィールドにcommentとdocument_tokenを要求するとサーバエラーになりますが、意図された動作です。このクエリのあとに、decideAgreementミューテーションでサインしてください
  """
  agreementStep(signToken: String!): AgreementStep!

  """
  電子契約
  """
  agreements(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: AgreementConditions = null
    order: Order = { by: "id", direction: "asc" }
    accountKlass: AccountKlass = Owner
  ): AgreementConnection

  """
  すべてのマネージャーユーザートピック
  """
  allManagerUserTopics(
    buildingId: ID!
    propertyId: ID = null
    accountId: ID!
    accountKlass: AccountKlass! = Owner
  ): [User!]
  allOwners(
    companyId: ID
    order: Order = { by: "id", direction: "asc" }
    conditions: OwnerConditions = null
    limit: Int = null
    excludeUnviewable: Boolean = false
  ): [Owner!]
  allPartnerShops(
    partnerCompanyId: ID
    order: Order = { by: "id", direction: "asc" }
    shopLevel: Int
  ): [PartnerBranchShop!]
  allResidents(
    buildingId: ID
    residentId: ID
    companyId: ID
    order: Order = { by: "id", direction: "asc" }
  ): [Resident!]
  allShops(
    companyId: ID
    order: Order = { by: "id", direction: "asc" }
    excludeUnviewable: Boolean = false
    shopLevel: Int
  ): [BranchShop!]
  allStaff(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: StaffConditions = null
    withInspector: Boolean = false
  ): UserConnection
  allStaffChat(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: StaffConditions = null
  ): UserConnection
  allStaffChatUnpaginated(
    companyId: ID
    conditions: StaffConditions = null
  ): [User!]
  allStaffUnpaginated(
    companyId: ID
    conditions: StaffConditions = null
    withInspector: Boolean = false
  ): [User!]
  allSummaryReportByMonthly(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order! = { by: "year_month", direction: "desc" }
  ): SummaryReportByMonthlyRootConnection
  allSummaryReportByYearly(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order! = { by: "year", direction: "desc" }
  ): SummaryReportByYearlyRootConnection

  """
  ファイル取得。実質的にはurlフィールドをつかってダウンロードするためのもの
  """
  attachment(id: ID!): Attachment
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID = null
    buildingId: ID = null
    propertyId: ID = null
    ownerId: ID = null
    residentId: ID = null
    name: String
    topicCategories: [ID!] = []
    topicCategoryGroup: TopicCategoryGroup = null
    order: Order = { by: "name", direction: "asc" }
    accountKlass: AccountKlass = null
    propertyKindId: ID = null
    yearMonth: Int = null
    buildingOrOwnerName: String
    freeTalkQuery: Boolean = false
    freeTalkConditions: FreeTalkConditions = null
  ): AttachmentConnection

  """
  建物の書類情報
  """
  attachmentsInforAccountBuildings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): FreeTalkAttachmentConnection

  """
  フリートークの書類情報
  """
  attachmentsInforFreeTalk(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): FreeTalkAttachmentConnection

  """
  店舗詳細
  """
  branchShop(id: ID!): BranchShop

  """
  店舗一覧
  """
  branchShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: BranchShopConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): BranchShopConnection

  """
  店舗スタッフ詳細
  """
  branchStaff(id: ID!, withInspector: Boolean = false): BranchStaff

  """
  店舗スタッフ一覧
  """
  branchStaffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: StaffConditions = null
    order: Order = { by: "id", direction: "asc" }
    withInspector: Boolean = false
  ): BranchStaffConnection

  """
  建物詳細
  """
  building(id: ID!): Building
  buildingAttachmentsOfCompany(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    order: Order = { by: "id", direction: "desc" }
  ): AttachmentConnection
  buildingExpensesByYear(buildingId: ID!, yearAccrual: Int!): RevenueRoot!
  buildingRevenuesByYearMonth(
    buildingId: ID!
    yearMonthAccrual: Int!
  ): RevenueRoot!

  """
  建物一覧
  """
  buildings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: BuildingsConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): BuildingConnection
  buildingsAndOwnersWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
    topicCategoryGroup: TopicCategoryGroup = null
    yearMonth: Int = null
  ): BuildingOwnerAttachmentConnection
  buildingsWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
    companyId: ID = null
  ): BuildingAttachmentConnection
  buildingsWithOwner(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    ownerId: ID
    order: Order = { by: "id", direction: "asc" }
  ): PropertyConnection

  """
  ファイル一括送信詳細
  """
  bulkFileTopic(id: ID!): BulkFileTopic!
  bulkFileTopics(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: BulkFileTopicConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): BulkFileTopicConnection
  bulkPreviewAccount(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: BulkPreviewAccountConditions!
  ): AccountUnionConnection

  """
  一斉チャット詳細
  """
  bulkTopic(id: ID!): BulkTopic!
  bulkTopics(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: BulkTopicConditions = null
    order: Order = { by: "created_at", direction: "desc" }
    accountKlass: AccountKlass = Resident
  ): BulkTopicConnection
  bulletin(id: ID!): Bulletin
  bulletinKindTypes: [BulletinKind!]!

  """
  掲示板一覧
  """
  bulletins(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: BulletinConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): BulletinConnection!
  categoriesWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    buildingId: ID
    order: Order = { by: "id", direction: "asc" }
    ownerId: ID
    yearMonth: Int = null
    topicCategoryGroup: TopicCategoryGroup = null
  ): CategoryAttachmentConnection
  chargeMethods: [ChargeMethod!]!

  """
  Return chart page opened percentage
  """
  chatPageOpenPercentages(
    conditions: ChatPageOpenPercentageConditions!
  ): [PercentageData!]

  """
  Return chart page opened statistic
  """
  chatPageOpenStatistics(
    conditions: ChatPageOpenStatisticConditions!
  ): [StatisticData!]

  """
  Return chart page opened list
  """
  chatPageOpens(conditions: ChatPageOpenConditions!): [ChatPageOpen!]

  """
  チャットテンプレート詳細確認
  """
  chatTemplate(id: ID!): ChatTemplate

  """
  チャットテンプレート
  """
  chatTemplates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: ChatTemplatesConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): ChatTemplateConnection
  cities(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    prefectureCode: String!
  ): CityConnection!

  """
  管理会社一覧
  """
  companies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: CompaniesConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): CompanyConnection
  companiesWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
  ): CompanyAttachmentConnection

  """
  管理会社詳細
  """
  company(id: ID!): Company!
  companyFunctions(companyId: ID): CompanyFunctions!
  companyInvoice(companyInvoiceId: ID!): CompanyInvoice
  companyInvoices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID = null
    conditions: CompanyInvoiceConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): CompanyInvoiceConnection!

  """
  会社のIP一覧
  """
  companyIps(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID = null
  ): CompanyIpConnection
  companyLevelNames(
    companyId: ID = null
    consideringCurrentUserLevel: Boolean = false
  ): [CompanyLevelName!]!
  companyPartnerShop(id: ID!): CompanyPartnerShop

  """
  会社の決済アカウント情報
  """
  companyPaymentInfos(companyId: ID!): CompanyPaymentInfo
  companyShopLevels(companyId: ID): [CompanyShopLevel!]
  connectedCompanies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    partnerShopId: ID!
    order: Order = { by: "id", direction: "asc" }
  ): CompanyPartnerShopConnection
  connectedPartnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID = null
    conditions: CompanyPartnerShopConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): CompanyPartnerShopConnection

  """
  優先連絡先
  """
  contactPriorities: [ContactPriority!]!

  """
  契約詳細
  """
  contract(id: ID!): Contract

  """
  解約受付詳細
  """
  contractCancellation(id: ID!): ContractCancellation!
  contractCancellationReasons: [ContractCancellationReason!]!

  """
  解約受付一覧
  """
  contractCancellations(
    companyId: ID = null
    conditions: ContractCancellationConditions = null
    order: Order = { by: "created_at", direction: "desc" }
    page: Int
    perPage: Int
  ): ContractCancellationPage
  contractProvisions(companyId: ID): [ContractProvision!]!

  """
  契約一覧
  """
  contracts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: ContractConditions = null
    order: Order = { by: "id", direction: "asc" }
    consideringCurrentUserLevel: Boolean = false
  ): ContractConnection

  """
  オーナーが所有する建物単位の部屋を一覧表示する
  """
  contractsOfBuilding(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    buildingId: ID!
    yearMonth: Int = null
    date: ISO8601Date = null
    order: Order = { by: "id", direction: "desc" }
    year: Int = null
  ): ContractConnection
  contractsWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "property_id", direction: "asc" }
  ): ContractAttachmentConnection

  """
  条件一覧
  """
  csvConditions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CsvConditionConnection!

  """
  処理一覧
  """
  csvFomulas(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CsvFomulaConnection!

  """
  CSV読込ポップアップ
  """
  csvOptions: [CsvOption!]
  csvRuleConvertMapping(id: ID!): CsvRuleConvertMapping
  csvRuleConvertMappingItem(id: ID!): CsvRuleConvertMappingItem

  """
  CSVルールマッピング一覧
  """
  csvRuleConvertMappings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "updated_at", direction: "desc" }
    conditions: CsvRuleConvertMappingConditions = null
  ): CsvRuleConvertMappingConnection
  csvTemplate(id: ID!): CsvTemplate

  """
  CSVテンプレート一覧
  """
  csvTemplates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    order: Order = { by: "id", direction: "asc" }
  ): CsvTemplateConnection

  """
  支出詳細
  """
  debitItem(id: ID!): DebitItem

  """
  支出一覧
  """
  debitItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: DebitItemConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): DebitItemConnection
  debitKinds: [DebitKind!]!
  directions: [Direction!]!
  displayMethods: [DisplayMethod!]!
  dutyKinds: [DutyKind!]!
  equipmentsAndConditions: [EquipmentsAndCondition!]!
  estimate(id: ID!): Estimate
  estimateEvidence(id: ID!): EstimateEvidence
  estimateEvidences(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    estimateId: ID!
    attachmentKind: AttachmentKind!
    conditions: EstimateEvidenceConditions = null
    order: Order = { by: "display_order", direction: "asc" }
  ): EstimateEvidenceConnection
  estimateRepairItem(id: ID!): EstimateRepairItem
  estimateSetting(id: ID!): EstimateSetting
  estimates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    contractCancellationId: ID!
    estimateGroupKind: EstimateGroupKindValue!
    order: Order = { by: "created_at", direction: "asc" }
  ): EstimateConnection
  externalLinks(
    conditions: ExternalLinkConditions = null
    order: Order = { by: "position", direction: "asc" }
  ): [ExternalLink!]!

  """
  部屋マニュアル詳細
  """
  facilityManual(id: ID!): FacilityManual

  """
  部屋マニュアル一覧
  """
  facilityManuals(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: FacilityManualsConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): FacilityManualConnection
  faq(id: ID!): Faq
  faqCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    mainId: ID
    order: Order = { by: "position", direction: "asc" }
  ): FaqCategoryConnection
  faqCategory(id: ID!): FaqCategory
  faqTels(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    order: Order = { by: "id", direction: "asc" }
  ): FaqTelConnection
  faqs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: FaqConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): FaqConnection
  flowStepReminders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Base64encoded "AgreementStep-:id"
    """
    remindableId: ID!
  ): FlowStepReminderConnection
  freeDial: String!
  freeTalkDocuments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    ownerId: ID = null
    residentId: ID = null
    order: Order = { by: "name", direction: "asc" }
    accountKlass: AccountKlass = null
    conditions: FreeTalkConditions = null
  ): AttachmentConnection
  genders: [Gender!]!

  """
  グループの詳細
  """
  group(id: ID!): Group!

  """
  グループ一覧
  """
  groups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: GroupConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): GroupConnection
  handOvers: [HandOver!]!

  """
  本部スタッフ詳細
  """
  headquartersStaff(id: ID!): HeadquartersStaff

  """
  本部スタッフ一覧
  """
  headquartersStaffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: StaffConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): HeadquartersStaffConnection

  """
  成分一覧
  """
  homeComponents(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): HomeComponentConnection

  """
  ヘッダ一覧
  """
  homeHeaders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    homeTemplateId: ID!
  ): HomeHeaderConnection!

  """
  ホームテンプレート
  """
  homeTemplate(id: ID!): HomeTemplate!

  """
  ホームテンプレート
  """
  homeTemplates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
  ): HomeTemplateConnection
  imageKinds: [ImageKind!]!

  """
  Return init web app percentage
  """
  initWebAppPercentages(
    conditions: InitWebAppPercentageConditions!
  ): [PercentageData!]

  """
  Return init web app statistic
  """
  initWebAppStatistics(
    conditions: InitWebAppStatisticConditions!
  ): [StatisticData!]

  """
  Return init web app list
  """
  initWebApps(conditions: InitWebAppConditions!): [InitWebApp!]
  inspectionImageKindTypes: [InspectionImageKind!]!
  inspectionItemKindTypes: [InspectionItemKind!]!
  inspectionItemStatusTypes: [InspectionItemStatus!]!
  inspectionReport(id: ID!): InspectionReport!
  inspectionReportSample(id: ID!): InspectionReport!
  inspectionReportSamples(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: InspectionReportConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): InspectionReportConnection
  inspectionReportStatusTypes: [InspectionReportStatus!]!
  inspectionReports(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: InspectionReportConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): InspectionReportConnection
  ipKinds: [IpKind!]!

  """
  解約受付一覧
  """
  issueCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID = null
    conditions: IssueCategoryConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): IssueCategoryConnection
  issueTask(id: ID!): IssueTask
  landPrivileges(entity: LandPrivilegeEntityEnum = null): [LandPrivilege!]!
  landUseZones: [LandUseZone!]!
  licenseAdministrators: [LicenseAdministrator!]!

  """
  該当するユーザの管理会社ロゴ
  """
  logoCompanyCurrentUser: String

  """
  管理会社のロゴ
  """
  logoCompanyForAdminApp: Attachment
  notice(noticeId: ID!): Notice
  noticeKinds: [NoticeKind!]!
  noticePriorities: [NoticePriority!]!
  noticeTargets: [NoticeTarget!]!

  """
  管理側お知らせ一覧
  """
  notices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: NoticeConditions = null
    order: Order = { by: "created_at", direction: "desc" }
    accountKlass: AccountKlass = Owner
  ): NoticeConnection!

  """
  オンラインのアカウント一覧
  """
  onlineAccounts: [String!]
  openPlatforms: [OpenPlatform!]!
  otherFaq(companyId: ID): OtherFaq

  """
  オーナー詳細
  """
  owner(id: ID!): Owner

  """
  利用可能なプロパティのリスト
  """
  ownerAvailableProperties(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: PropertiesConditions = null
    order: Order = { by: "end_until", direction: "asc" }
  ): AvailablePropertyConnection

  """
  オーナーお知らせ一覧
  """
  ownerNotices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "notices.visible_from", direction: "desc" }
  ): AccountNoticeConnection!
  ownerNoticesUnreadCount(logKey: String = "no-param"): Int!

  """
  月次の貸し出し中の部屋リストを返します。
  """
  ownerPropertyRentedSituation(
    year: Int = 2022
    buildingId: ID = null
  ): OwnerPropertyRentSituationRoot

  """
  指定した期間の収支合計を返します。
  """
  ownerRevenueExpend(
    fromYearMonth: Int = null
    endYearMonth: Int = null
    buildingId: ID = null
  ): OwnerRevenueExpend

  """
  月次収支を返します。
  """
  ownerRevenueExpendByMonthPeriods(
    year: Int = 2022
    buildingId: ID = null
  ): OwnerRevenueExpendRoot

  """
  Returns data required to render the Home screen in the Owner app
  """
  ownerSummary(yearMonth: Int!, buildingId: ID = null): OwnerSummary
  ownerSummaryReportMonthlyAndYearly(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    yearMonth: Int = null
    year: Int = null
    order: Order = { by: "`buildings`.`name`", direction: "asc" }
  ): SummaryReportMonthlyAndYearlyConnection

  """
  オーナー一覧
  """
  owners(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: OwnerConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): OwnerConnection

  """
  オーナー一覧
  """
  ownersUnpaginated(
    companyId: ID
    conditions: OwnerConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): [Owner!]
  partnerBranchShop(id: ID!): PartnerBranchShop
  partnerBranchShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    partnerCompanyId: ID
    conditions: PartnerBranchShopConditions = null
    order: Order = { by: "updated_at", direction: "desc" }
  ): PartnerBranchShopConnection
  partnerBranchStaff(id: ID!): PartnerBranchStaff
  partnerBranchStaffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    partnerCompanyId: ID
    conditions: PartnerStaffConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): PartnerBranchStaffConnection
  partnerCategoriesWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    propertyId: ID!
    order: Order = { by: "id", direction: "asc" }
  ): CategoryAttachmentConnection
  partnerCompanies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
  ): PartnerCompanyConnection
  partnerCompanyLevelNames(
    partnerCompanyId: ID = null
    consideringCurrentUserLevel: Boolean = false
  ): [PartnerCompanyLevelName!]!
  partnerHeadquartersStaff(id: ID!): PartnerHeadquartersStaff
  partnerHeadquartersStaffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    partnerCompanyId: ID
    conditions: PartnerStaffConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): PartnerHeadquartersStaffConnection
  partnerIssuesTasks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    category: PartnerIssueTaskEnum!
    picId: ID
    order: Order = { by: "created_at", direction: "desc" }
  ): IssueTaskConnection
  partnerShop(id: ID!): PartnerShop
  partnerShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    partnerCompanyId: ID
    conditions: PartnerShopConditions = null
    order: Order = { by: "updated_at", direction: "desc" }
  ): PartnerShopConnection
  partnerShopsNotConnected(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: PartnerShopNotConnectedConditions = null
    order: Order = { by: "updated_at", direction: "desc" }
  ): PartnerShopConnection
  partnerUser(id: ID!): PartnerUser
  partnerUsers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    partnerShopId: ID
    conditions: PartnerUserConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): PartnerUserConnection
  partnerUsersUnpaginated(
    partnerShopId: ID
    conditions: PartnerUserConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): [PartnerUser!]

  """
  賃貸pay履歴
  """
  paymentHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AccountInvoiceConnection
  paymentMethods: [GmoPaymentMethod!]!

  """

  """
  pgMemberRegistrationUrl: MemberRegistrationUrl
  plans: [Plan!]!
  prefectures(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PrefectureConnection!
  preferredContacts: [PreferredContact!]!

  """
  部屋/駐車場/共用部一覧
  """
  properties(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: PropertiesConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): PropertyConnection
  propertiesForResident(
    companyId: ID
    buildingId: ID!
    residentId: ID!
    order: Order = {
      by: "MAX(CASE WHEN `contracts`.`end_date` IS NOT NULL THEN `contracts`.`end_date` ELSE `contracts`.`end_until` END)"
      direction: "desc"
    }
    kindId: ID
  ): [Property!]

  """
  オーナーが所有する建物単位の部屋を一覧表示する
  """
  propertiesOfBuilding(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    buildingId: ID!
    yearMonth: Int = null
    date: ISO8601Date = null
    order: Order = { by: "id", direction: "desc" }
    year: Int = null
  ): PropertyConnection
  propertiesWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    buildingId: ID!
    order: Order = { by: "id", direction: "asc" }
  ): PropertyAttachmentConnection

  """
  部屋/駐車場/共用部詳細
  """
  property(id: ID!): Property
  propertyKinds: [PropertyKind!]!
  propertyRevenuesByYear(propertyId: ID!, yearAccrual: Int!): RevenueRoot!

  """
  売却査定詳細
  """
  propertyValuation(id: ID!): PropertyValuation!

  """
  売却査定一覧
  """
  propertyValuations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: PropertyValuationConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): PropertyValuationConnection
  pushSchedulingMethods: [PushSchedulingMethod!]!
  questionnaire(id: ID!): Questionnaire
  questionnaireTargetTypes: [QuestionnaireTarget!]!

  """
  アンケート一覧
  """
  questionnaires(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: QuestionnaireConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): QuestionnaireConnection!

  """
  建物一覧
  """
  quickBuildingList(
    companyId: ID
    conditions: BuildingsConditions = null
    order: Order = { by: "id", direction: "asc" }
    consideringCurrentUserLevel: Boolean = false
  ): [Building!]
  quickQuestionnaire(
    order: Order = { by: "created_at", direction: "desc" }
  ): QuickQuestionnaire
  quickQuestionnaireDetail(quickQuestionnaireId: ID!): QuickQuestionnaire
  quickQuestionnaireKindTypes: [QuickQuestionnaireKind!]!
  quickQuestionnaires(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: QuickQuestionnaireConditions = null
    order: Order = { by: "created_at", direction: "desc" }
  ): QuickQuestionnaireConnection

  """
  For a performance purpose, you cannot select columns other than id, level and name of shops table
  """
  quickShopList(
    levelLessThan: Int!
    companyId: ID = null
    consideringCurrentUserLevel: Boolean = false
  ): [ShopUnion!]!

  """
  For a performance purpose, you cannot select columns other than id, name, avatar_url, firebase_id and klass from users table
  """
  quickStaffList(userIds: [ID!] = null, userFirebaseIds: [ID!] = null): [User!]!
  rawContract(id: ID!): RawContract!
  receiverTypes: [NoticeTarget!]!

  """
  住み替え相談-詳細
  """
  relocation(id: ID!): Relocation!
  relocationContacts: [ContactKind!]!
  relocationStates: [RelocationStates!]!

  """
  住み替え相談
  """
  relocations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: RelocationConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): RelocationConnection
  repairItem(id: ID!): RepairItem
  repairItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    estimateId: ID = null
    companyId: ID = null
    partnerShopId: ID = null
    order: Order = { by: "updated_at", direction: "desc" }
  ): RepairItemConnection

  """
  入居者詳細
  """
  resident(id: ID!): Resident

  """
  IssueTasks by ContractCancellation
  """
  residentAssignedIssueTasks(
    contractCancellationId: ID!
    order: Order = { by: "id", direction: "desc" }
  ): [IssueTask!]
  residentCategoriesWithAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    propertyId: ID
    order: Order = { by: "id", direction: "asc" }
  ): CategoryAttachmentConnection

  """
  契約一覧
  """
  residentContracts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ContractConnection
  residentFaqCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ResidentFaqConnection
  residentFaqCategory(faqCategoryId: ID!): ResidentFaq
  residentFaqs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
  ): ResidentFaqConnection

  """
  アプリホーム情報纏め
  """
  residentHome(id: ID): ResidentHome
  residentSearchFaqs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: FaqConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): ResidentFaqConnection

  """
  入居者一覧
  """
  residents(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    buildingId: ID
    conditions: ResidentConditions = null
    order: Order = { by: "id", direction: "asc" }
    consideringThroughContract: Boolean = false
  ): ResidentConnection

  """
  入居者一覧
  """
  residentsUnpaginated(
    companyId: ID
    conditions: ResidentConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): [Resident!]
  resientImportantNotices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "notices.visible_from", direction: "desc" }
  ): ImportantNoticeConnection!

  """
  支出詳細
  """
  revenueExpenseItem(id: ID!): RevenueExpenseItem

  """
  支出一覧
  """
  revenueExpenseItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    conditions: RevenueExpenseItemConditions = null
    order: Order = { by: "id", direction: "asc" }
  ): RevenueExpenseItemConnection
  revenueExpenseKinds: [RevenueExpenseKind!]!
  revenueExpenseProperty(
    propertyId: ID!
    yearMonth: Int!
  ): RevenueExpenseProperty!

  """
  オーナーの月次と年次の収支報告書。
  """
  revenuesExpensesByMonthAndYear(
    yearMonth: Int = null
    year: Int = null
    buildingId: ID = null
  ): RevenuesExpensesByMonthAndYearRoot
  roadTypes: [RoadType!]!
  roles(shopType: ShopRolesEnum!): [Role!]!
  roomLayouts: [RoomLayout!]!
  roundUnitKinds: [RoundUnitKind!]!
  roundValueKinds: [RoundValueKind!]!
  searchAttachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    conditions: AttachmentsConditions = null
    order: Order = { by: "name", direction: "asc" }
    includeFreeTalk: Boolean = false
  ): AttachmentConnection
  sliderOfCompany(sessionClass: SessionSliderClass!, companyId: ID): Slider

  """
  デフォルト値を独自する
  """
  specializeDefaultData(specializeName: String = null): SpecializeDefaultData!
  states(entity: StatefulEntityEnum!, machine: String = "default"): [State!]!
  stations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    name: String!
  ): StationConnection!
  structures: [Structure!]!
  subWorkCategories(
    order: Order = { by: "id", direction: "asc" }
  ): [WorkCategory!]!
  tableColumnName(tableId: ID!): [TableColumnName!]

  """
  テーブル名一覧
  """
  tableNameLegacies: [TableName!]!

  """
  テーブル名一覧
  """
  tableNames: [TableName!]!

  """
  タグの詳細
  """
  tag(id: ID!): Tag!

  """
  タグ一覧
  """
  tags(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID = null
    conditions: TagConditions = {}
    order: Order = { by: "created_at", direction: "desc" }
  ): TagConnection
  taskReport(id: ID!): TaskReport!
  taskReports(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID
    order: Order = { by: "id", direction: "asc" }
  ): TaskReportConnection
  tasks(workCategoryId: ID!): [Task!]

  """
  チャット
  """
  topic(id: ID!): Topic!

  """
  Master data of TopicCategory
  """
  topicCategories(
    usage: TopicCategoryUsage!
    app: TopicCategoryApp
    format: Format = DEFAULT
    major: TopicCategoryMajorId
  ): [TopicCategoryUnion!]

  """
  Return tracking browser list
  """
  trackingBrowsers(conditions: TrackingBrowserConditions!): [TrackingBrowser!]

  """
  Return tracking page list
  """
  trackingPages(conditions: TrackingPageConditions!): [TrackingPage!]
  units: [Unit!]!
  unrentKeepDateTypes: [UnrentKeepDate!]!
  usages: [Usage!]!

  """
  ユーザー掲示板一覧
  """
  userBulletins(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "visible_from", direction: "desc" }
  ): BulletinConnection
  userDetails: AccountUser

  """
  Return user engagement counting
  """
  userEngagementCounting(
    conditions: UserEngagementCountingConditions!
  ): [UserEngagementCounting!]

  """
  Return user engagement list
  """
  userEngagements(conditions: UserEngagementConditions!): [UserEngagement!]
  userNotice: UserNotice

  """
  ユーザーアンケート
  """
  userQuestionnaires(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "open_until", direction: "desc" }
  ): AccountQuestionnaireConnection

  """
  稼働率改善提案
  """
  vacantProperties(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    指定がない場合は結果が部屋一覧と一緒です
    """
    unrentDates: UnrentKeepDate = null
    conditions: PropertiesConditions = null
    startFollowedUpMessageAt: ISO8601DateTime = null
    endFollowedUpMessageAt: ISO8601DateTime = null
    order: VacantPropertyOrder = { by: "unrentDates", direction: "asc" }
  ): VacantPropertyConnection
  valuationKinds: [ValuationKind!]!

  """
  バーチャル口座詳細
  """
  virtualBank(id: ID!): VirtualBank

  """
  バーチャル口座入金履歴一覧
  """
  virtualBankIncomes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    virtualBankId: ID!
    order: Order = { by: "received_date", direction: "desc" }
    conditions: VirtualBankIncomeConditions = null
  ): VirtualBankIncomeConnection

  """
  バーチャル口座一覧
  """
  virtualBanks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    companyId: ID!
    order: Order = { by: "name", direction: "asc" }
    conditions: VirtualBankConditions = null
  ): VirtualBankConnection
  visibleShopsForCurrentStaff(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "id", direction: "asc" }
  ): BranchShopConnection

  """
  Master data of WorkCategory
  """
  workCategories(
    workCategoryName: WorkCategoryName
    order: Order = { by: "id", direction: "asc" }
  ): [WorkCategory!]!
  workables: [Workable!]!

  """
  ワークフロー詳細
  """
  workflow(id: ID!): Workflow

  """
  特定ワークフローの前後のIDだけを返す。オーナーアプリ専用
  """
  workflowPrevNext(
    id: ID!
    order: Order! = { by: "id", direction: "asc" }
    state: [FlowState!]
  ): WorkflowPrevNext!

  """
  ワークフロー一覧
  """
  workflows(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order! = { by: "id", direction: "asc" }
    companyId: ID
    conditions: WorkflowsConditions = null
  ): WorkflowConnection
}

enum QueryAccountFunctionEnum {
  SEND_INSTRUCTION_MAIL
  CREATE_NOTICE
  CREATE_BULK_TOPIC
  CREATE_QUICK_QUESTIONNAIRE
  CREATE_QUESTIONNAIRE
  CREATE_BULK_FILE_TOPIC
}

type Questionnaire {
  accountQuestionnaires(
    states: [AccountQuestionnaireState!]
  ): [AccountQuestionnaire!]!
  answerCount: Int!
  answers: [AccountQuestionnaire!]!
  createdAt: ISO8601DateTime!
  footer: String
  header: String
  id: ID!
  open: Boolean!
  openFrom: ISO8601DateTime!
  openUntil: ISO8601DateTime!
  pushEnabled: Boolean!
  pushScheduledTo: ISO8601DateTime
  pushSchedulingMethod: PushSchedulingMethod
  pushedAt: ISO8601DateTime
  question: JSON!
  residents: [Resident!]!
  responseRate: Float
  shop: Shop
  targetCount: Int!
  targetType: QuestionnaireTarget!
  title: String!
  updatedAt: ISO8601DateTime!
  user: User!
}

input QuestionnaireConditions {
  title: String
  targetTypeId: ID
  targetIds: [ID!]
  openFrom: RangeDate
  openUntil: RangeDate
  state: String
  pushScheduledTo: RangeDate
  targetCount: Range
  responseRate: Range
  pushSchedulingType: String
  userId: ID
}

"""
The connection type for Questionnaire.
"""
type QuestionnaireConnection {
  """
  A list of edges.
  """
  edges: [QuestionnaireEdge]

  """
  A list of nodes.
  """
  nodes: [Questionnaire]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type QuestionnaireEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Questionnaire
}

type QuestionnaireTarget {
  description: String!
  id: ID!
  name: String!
}

type QuickQuestionnaire {
  answerCount: Int!
  answers(
    order: Order = { by: "answered_at", direction: "asc" }
  ): [AccountQuickQuestionnaire!]!
  createdAt: ISO8601DateTime!
  enabled: Boolean!
  endContractFrom: ISO8601Date
  endContractTo: ISO8601Date
  footer: String!
  id: ID!
  propertyKind: PropertyKind
  question: String!
  quickQuestionnaireKind: QuickQuestionnaireKind!
  quickQuestionnaireOptions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): QuickQuestionnaireOptionConnection!
  residents: [Resident!]!
  responseRate: Float
  shop: Shop
  targetCount: Int!
  title: String!
  updatedAt: ISO8601DateTime!
  user: User!
  visibleFrom: ISO8601DateTime!
  visibleTo: ISO8601DateTime!
}

input QuickQuestionnaireConditions {
  userId: ID
  title: String
  quickQuestionnaireKindId: ID
  visibleFrom: RangeDate
  visibleTo: RangeDate
  endContractFrom: RangeDate
  endContractTo: RangeDate
  enabled: Boolean
  question: String
  targetCount: Range
  responseRate: RangeFloat
  propertyKindId: ID
}

"""
The connection type for QuickQuestionnaire.
"""
type QuickQuestionnaireConnection {
  """
  A list of edges.
  """
  edges: [QuickQuestionnaireEdge]

  """
  A list of nodes.
  """
  nodes: [QuickQuestionnaire]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type QuickQuestionnaireEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: QuickQuestionnaire
}

type QuickQuestionnaireKind {
  id: ID!
  name: String!
}

type QuickQuestionnaireOption {
  id: ID!
  option: String!
}

"""
The connection type for QuickQuestionnaireOption.
"""
type QuickQuestionnaireOptionConnection {
  """
  A list of edges.
  """
  edges: [QuickQuestionnaireOptionEdge]

  """
  A list of nodes.
  """
  nodes: [QuickQuestionnaireOption]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type QuickQuestionnaireOptionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: QuickQuestionnaireOption
}

input QuickQuestionnaireOptionInput {
  option: String!
}

input QuickQuestionnaireOptionUpdateInput {
  index: Int!
  option: String!
}

input Range {
  min: Int
  max: Int
}

input RangeDate {
  min: ISO8601DateTime
  max: ISO8601DateTime
}

input RangeFloat {
  min: Float
  max: Float
}

type RawContract {
  address1: String
  address2: String
  cancellationNotice: Int
  chargeAdditional: Int
  chargeBond: Int
  chargeDeposit: Int
  chargeGratuity: Int
  chargeManagement: Int
  chargeParking: Int
  chargeRent: Int
  contractPeriod: Int
  contractProvision: String
  corporateGuarantorName: String
  createdAt: ISO8601DateTime!
  endUntil: ISO8601Date
  homeStatus: HomeStatus
  id: ID!
  monthsOfRentForRenewal: Int
  note: String
  numberResidents: Int
  rawBuildingName: String!
  rawOwner: RawOwner
  rawPropertyName: String
  rawResident: RawResident
  securityDeposit: Int
  startFrom: ISO8601Date
  sublease: Boolean
  updatedAt: ISO8601DateTime!
  usage: Usage
  zipCode: String
}

input RawContractInput {
  rawBuildingName: String
  rawPropertyName: String
  zipCode: String
  address1: String
  address2: String
  sublease: Boolean
  contractPeriod: Int
  startFrom: ISO8601Date
  endUntil: ISO8601Date
  usageId: ID
  cancellationNotice: Int
  numberResidents: Int
  chargeRent: Int
  chargeManagement: Int
  chargeParking: Int
  chargeAdditional: Int
  chargeDeposit: Int
  chargeGratuity: Int
  monthsOfRentForRenewal: Int
  chargeBond: Int
  securityDeposit: Int
  corporateGuarantorName: String
  homeStatus: HomeStatusInput
  contractProvision: String
  note: String
}

type RawOwner {
  address: String
  appCooperation: Boolean
  chargeUserName: String
  companyName: String
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String
  telMobile: String
  updatedAt: ISO8601DateTime!
  usingApp: Boolean
  zipCode: String
}

input RawOwnerInput {
  companyName: String
  name: String
  chargeUserName: String
  telMobile: String
  email: String
  zipCode: String
  address: String
  usingApp: Boolean
  appCooperation: Boolean
}

type RawResident {
  address: String
  appCooperation: Boolean
  chargeUserName: String
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String
  telMobile: String
  updatedAt: ISO8601DateTime!
  usingApp: Boolean
  zipCode: String
}

input RawResidentInput {
  name: String
  telMobile: String
  email: String
  zipCode: String
  address: String
  usingApp: Boolean
  appCooperation: Boolean
}

"""
Autogenerated input type of ReadBulletin
"""
input ReadBulletinInput {
  bulletinId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ReadBulletin
"""
type ReadBulletinPayload {
  bulletin: Bulletin

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of ReadCsvData
"""
input ReadCsvDataInput {
  objectKey: String!
  removeFileFromS3: Boolean = false

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ReadCsvData
"""
type ReadCsvDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of ReadNoticeDetail
"""
input ReadNoticeDetailInput {
  noticeId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ReadNoticeDetail
"""
type ReadNoticeDetailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  notice: AccountNotice
}

"""
Autogenerated input type of RecoveryRevenueExpenseVersion
"""
input RecoveryRevenueExpenseVersionInput {
  revenueExpenseVersionId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RecoveryRevenueExpenseVersion
"""
type RecoveryRevenueExpenseVersionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  revenueExpenseVersion: RevenueExpenseVersion
}

"""
Autogenerated input type of RegisterDeviceToken
"""
input RegisterDeviceTokenInput {
  deviceToken: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RegisterDeviceToken
"""
type RegisterDeviceTokenPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  notificationEndpoint: NotificationEndpoint
}

"""
住み替え相談
"""
type Relocation {
  city: City!
  contactKind: ContactKind!
  createdAt: ISO8601DateTime!
  expectedMoveDate: ISO8601Date
  id: ID!
  otherRequest: String
  prefecture: Prefecture!
  priceMax: Int!
  priceMin: Int!
  property: Property
  relocationStates: RelocationStates
  resident: Resident!
  roomLayout: RoomLayout!
  stationName: String!
  telMobile: String
  undecidedMoveDate: Boolean
  updatedAt: ISO8601DateTime!
}

input RelocationConditions {
  prefectureCode: String
  cityCode: String
  stationName: String
  contactKindId: ID
  priceMin: Range
  priceMax: Range
  relocationStatesId: ID
  otherRequest: String
  telMobile: String
  expectedMoveDate: RangeDate
  roomLayoutId: ID
  buildingId: ID = null
  propertyId: ID
  accountId: ID
  propertyKindId: ID
}

"""
The connection type for Relocation.
"""
type RelocationConnection {
  """
  A list of edges.
  """
  edges: [RelocationEdge]

  """
  A list of nodes.
  """
  nodes: [Relocation]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type RelocationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Relocation
}

type RelocationStates {
  id: ID!
  name: String!
}

type Remindable {
  id: ID!
}

type RepairItem {
  company: Company!
  companyPrice: Float!
  createdAt: ISO8601DateTime!
  id: ID!
  name: String!
  note: String
  partnerPrice: Float!
  partnerShop: PartnerShop!
  taxRate: Float!
  unit: Unit!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for RepairItem.
"""
type RepairItemConnection {
  """
  A list of edges.
  """
  edges: [RepairItemEdge]

  """
  A list of nodes.
  """
  nodes: [RepairItem]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type RepairItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: RepairItem
}

"""
The Chain of Command. You can filter resource regarding superior and/or subordinate shops in the company's organization tree
"""
enum ReportingLine {
  """
  Superior shops including shops you belong to
  """
  ancestor

  """
  Subordinate shops including shops you belong to
  """
  descendant
}

"""
Autogenerated input type of ResendTemporaryPassword
"""
input ResendTemporaryPasswordInput {
  loginId: String = null
  loginIds: [String!]
  sendNotifySms: Boolean
  sendNotifyEmail: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ResendTemporaryPassword
"""
type ResendTemporaryPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  notSendNotify: Boolean
  warnings: [AttributeError!]
}

"""
Autogenerated input type of ResetPassword
"""
input ResetPasswordInput {
  confirmationToken: String!
  password: String!
  passwordConfirmation: String!
  sessionClass: SessionClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ResetPassword
"""
type ResetPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session!
}

type Resident {
  address1: String
  address2: String
  allProperties(
    buildingId: ID = null
    propertyKindId: ID = null
    withValidContract: Boolean = false
  ): [Property!]
  avatarUrl: String
  birthday: ISO8601Date
  canChangeContactInfo: Boolean!
  chargeUser: BranchStaff
  city: City
  company: Company!
  companyName: String
  companyNameKana: String
  confirmationTokenExpiredAt: ISO8601DateTime
  contactPriority: ContactPriority
  createdAt: ISO8601DateTime!
  email: String
  emailNew: String
  fullName: String
  fullNameKana: String
  gender: Gender
  gmoPgMemberId: String
  gmoPgRegisted: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AttachmentConnection
  kind: AccountKind
  klass: String
  legacyId: String
  loginId: String
  nameFamily: String
  nameFamilyKana: String
  nameFirst: String
  nameFirstKana: String
  nameJoined: String
  nameJoinedKana: String
  prefecture: Prefecture
  state: String
  stop: Boolean!
  tags: [Tag!]
  telFixed: String
  telMobile: String
  telMobileNew: String
  updatedAt: ISO8601DateTime!
  zipCode: String
}

input ResidentBurdenEstimateInput {
  residentAccepted: Boolean
}

input ResidentConditions {
  id: ID
  loginId: String
  nameFamily: String
  nameFirst: String
  nameFamilyKana: String
  nameFirstKana: String
  email: String
  telMobile: String
  telFixed: String
  zipCode: String
  prefectureCode: String
  cityCode: String
  address1: String
  address2: String
  chargeUserName: String
  chargeUserId: ID
  state: [String!]
  companyName: String
  companyNameKana: String
  kindId: ID
  genderId: ID
  birthday: ISO8601Date
  buildingId: ID
  hasValidContractToday: Boolean
  gmoPgRegisted: Boolean
  gmoPgMemberId: String
  tagIds: [ID!]
  legacyId: String
  searchWithCompany: Boolean = false
  propertyKindId: ID
  propertyId: ID
  residentName: String
}

"""
The connection type for Resident.
"""
type ResidentConnection {
  """
  A list of edges.
  """
  edges: [ResidentEdge]

  """
  A list of nodes.
  """
  nodes: [Resident]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type ResidentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Resident
}

type ResidentFaq {
  id: ID!
  klass: String!
  name: String
  subCategoriesOrFaqs: [ResidentFaq!]
}

"""
The connection type for ResidentFaq.
"""
type ResidentFaqConnection {
  """
  A list of edges.
  """
  edges: [ResidentFaqEdge]

  """
  A list of nodes.
  """
  nodes: [ResidentFaq]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type ResidentFaqEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ResidentFaq
}

"""
アプリホームリクエスト
"""
type ResidentHome {
  userContract: Contract
}

type RevenueBuilding {
  expenses: [BuildingExpense!]
  id: ID!
  name: String!
  properties: [RevenueProperty!]
}

"""
収支項目
"""
type RevenueExpenseItem {
  baseAmount: Int!
  building: Building!
  company: Company!
  contract: Contract
  createdAt: ISO8601DateTime!
  id: ID!
  kind: RevenueExpenseKind!
  miscName: String
  name: String
  note: String
  owner: Owner!
  property: Property
  sendDate: ISO8601DateTime
  taxAmount: Int!
  updatedAt: ISO8601DateTime!
  yearMonthAccrual: Int!
}

input RevenueExpenseItemConditions {
  buildingId: ID
  propertyKindId: ID
  propertyId: ID
  ownerId: ID
  yearMonthAccrual: Int
  kindType: String
  kindId: ID
  sendDate: RangeDate
}

"""
The connection type for RevenueExpenseItem.
"""
type RevenueExpenseItemConnection {
  """
  A list of edges.
  """
  edges: [RevenueExpenseItemEdge]

  """
  A list of nodes.
  """
  nodes: [RevenueExpenseItem]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type RevenueExpenseItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: RevenueExpenseItem
}

"""
収支費目
"""
type RevenueExpenseKind {
  id: ID!
  itemType: String!
  misc: Boolean!
  name: String!
}

"""
月締
"""
type RevenueExpenseMonthlyCloseTask {
  building: Building!
  chargeUser: User!
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  owner: Owner!
  state: String!
  updatedAt: ISO8601DateTime!
  yearMonth: Int!
}

type RevenueExpenseProperty {
  summaryDebitKinds: [OwnerSummaryDebitKind!]
  summaryExpenseKinds: [OwnerSummaryKind!]
  summaryRevenueKinds: [OwnerSummaryKind!]
  totalIncomeBeginYearUntilNow: LongInteger!
  totalRevenuesExpenses: [TotalRevenueOrExpense!]
}

type RevenueExpenseVersion {
  company: Company!
  createdAt: ISO8601DateTime!
  disable: Boolean
  disableRestore: Boolean
  id: ID!
  isCurrentVersion: Boolean
  sortOrder: Int
  taskReport: TaskReport
  taskRevertVersions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): TaskRevertVersionConnection
  updatedAt: ISO8601DateTime!
}

type RevenueMonth {
  buildings: [RevenueBuilding!]!
  month: Int!
}

type RevenueProperty {
  id: ID!
  lastUpdatedAt: ISO8601DateTime
  latePaymentAmount: Int
  management: Int!
  name: String
  others: Int!
  parking: Int!
  rent: Int!
  residentName: String
}

type RevenueRoot {
  months: [RevenueMonth!]!
  year: Int!
}

type RevenuesExpensesByMonthAndYearRoot {
  htmlStringValue: String
  summaryReport: Attachment
}

"""
接道種類
"""
type RoadType {
  id: ID!
  name: String!
}

type Role {
  name: String!
  translation: String
}

"""
間取り
"""
type RoomLayout {
  id: ID!
  name: String!
}

type RoundUnitKind {
  id: ID!
  name: String!
}

type RoundValueKind {
  id: ID!
  name: String!
}

union RuleStepableSubject = CsvCondition | CsvFomula | CsvRuleConvertMapping

"""
Autogenerated input type of SaveExternalLinks
"""
input SaveExternalLinksInput {
  externalLinks: [ExternalLinkInput!]
  companyId: ID = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SaveExternalLinks
"""
type SaveExternalLinksPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  externalLinks: [ExternalLink!]
}

"""
Autogenerated input type of SaveOtherFaq
"""
input SaveOtherFaqInput {
  companyId: ID
  enableTopic: Boolean!
  enableContact: Boolean!
  faqTelId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SaveOtherFaq
"""
type SaveOtherFaqPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  otherFaq: OtherFaq
}

"""
Autogenerated input type of SaveSlider
"""
input SaveSliderInput {
  companyId: ID
  timer: Int!
  banners: [BannerInput!]!
  sessionClass: SessionSliderClass!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SaveSlider
"""
type SaveSliderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  slider: Slider
}

"""
Autogenerated input type of SaveUserNotice
"""
input SaveUserNoticeInput {
  noticeKindId: ID!
  title: String
  content: String
  url: String
  ownerEnabled: Boolean!
  residentEnabled: Boolean!
  partnerEnabled: Boolean!
  enabled: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SaveUserNotice
"""
type SaveUserNoticePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  notice: UserNotice
}

"""
Autogenerated input type of SearchLegacy
"""
input SearchLegacyInput {
  companyId: ID!
  objectKey: String!
  csvTemplateOptions: CsvTemplateOptionInput
  tableId: ID!
  searchLegacyOptions: [SearchLegacyOptionInput!]
  columnTable: String!
  columnCsv: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

input SearchLegacyOptionInput {
  tableColumnNameId: ID!
  csvColumnName: String!
  priority: Int
}

"""
Autogenerated return type of SearchLegacy
"""
type SearchLegacyPayload {
  attachment: Attachment!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of SendInstructionMail
"""
input SendInstructionMailInput {
  title: String!
  mailContent: String!
  smsContent: String!
  accountIds: [ID!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SendInstructionMail
"""
type SendInstructionMailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  mailTemplate: MailTemplate
  notSendNotify: Boolean
  warnings: [AttributeError!]
}

"""
Autogenerated input type of SendVacantPropertyMessage
"""
input SendVacantPropertyMessageInput {
  title: String!
  message: String!
  vacantProperties: [ID!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SendVacantPropertyMessage
"""
type SendVacantPropertyMessagePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

type Session {
  enableAppLogin: Boolean
  firebaseToken: String
  isManager: Boolean
  proxyAdminToken: String
  requisiteUpdatingPassword: Boolean
  token: String
  tosAgreedAt: ISO8601DateTime
  tosFreedialAgreedAt: ISO8601Date
  userFirebaseId: String
  userId: ID
}

"""
A klass to login
"""
enum SessionClass {
  """
  End users either Owner or Resident. Either `email` or `loginId` is required.
  """
  ACCOUNT

  """
  CMS users like AdminManager, HeadquartersStaff, etc. `email` is always required.
  """
  USER
  PARTNER_USER
}

enum SessionEnvironment {
  WEB
  APP
}

"""
A klass to slider
"""
enum SessionSliderClass {
  OwnerSlider
  ResidentSlider
}

"""
Autogenerated input type of SetCompanyIp
"""
input SetCompanyIpInput {
  companyIpId: ID!
  ipKindId: ID!
  ips: [String!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SetCompanyIp
"""
type SetCompanyIpPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  companyIp: CompanyIp
  errors: [AttributeError!]!
}

"""
Autogenerated input type of SetFirstPassword
"""
input SetFirstPasswordInput {
  loginId: String!
  currentPassword: String!
  newPassword: String!
  newPasswordConfirmation: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of SetFirstPassword
"""
type SetFirstPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session
}

"""
店舗（基底クラス）。5レイヤ対応のためのワークアラウンドとして導入したものなので、shop.parent_id 関連の操作だけに使用を限定するよう気をつけてください
"""
type Shop {
  allStaff: [BranchStaff!]
  company: Company
  createdAt: ISO8601DateTime!
  headquarters: Boolean!
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "desc" }
  ): AttachmentConnection
  level: Int!
  levelName: String!
  name: String
  parent: Shop!
  pgShopId: String
  staffs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BranchStaffConnection
  tel: String
  updatedAt: ISO8601DateTime!
}

"""
店舗営業時間のうち、イレギュラーな営業や休業をby dateで表現する
"""
type ShopAdditionalBusinessHour {
  additionalDate: ISO8601Date!
  id: ID!
  open: Boolean
  openFromHhmm: String
  openUntilHhmm: String
}

input ShopAdditionalBusinessHourInput {
  additionalDate: ISO8601Date!
  open: Boolean!
  openFromHhmm: String
  openUntilHhmm: String
}

enum ShopBusinessStatusEnum {
  undefined
  closed
  open
}

enum ShopRolesEnum {
  HEADQUARTERS
  BRANCH
  GMO
}

union ShopUnion = BranchShop | HeadquartersShop

type Slider {
  banners(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    isLimitedDisplay: Boolean = false
    order: Order = { by: "position_at", direction: "asc" }
  ): BannerConnection!
  company: Company
  createdAt: ISO8601DateTime!
  id: ID!
  klass: String!
  timer: Int!
  updatedAt: ISO8601DateTime!
  user: User!
}

input SpecializeCompanyInput {
  ownerAppBundleId: String
  ownerAppPackageName: String
  residentAppBundleId: String
  residentAppPackageName: String
}

type SpecializeDefaultData {
  ownerAppBundleId: String
  ownerAppIconName: String!
  ownerAppPackageName: String
  ownerAppPolicyUrl: String!
  ownerAppTermUrl: String!
  ownerAppThemeColor: String!
  ownerWebOperatingCompanyUrl: String!
  ownerWebPolicyUrl: String!
  ownerWebTermUrl: String!
  ownerWebThemeColor: String!
  residentAppBundleId: String
  residentAppIconName: String!
  residentAppPackageName: String
  residentAppPolicyUrl: String!
  residentAppTermUrl: String!
  residentAppThemeColor: String!
}

input StaffConditions {
  id: ID
  ids: [ID!] = []
  email: String
  klass: String
  klasses: [String!] = []
  name: String
  state: String
  shopId: ID
  shopIds: [ID!] = []
  reportingLines: [ReportingLine!] = []
  legacyId: String
  userFirebaseId: String
  userFirebaseIds: [String!]
}

type State {
  name: String!
  translation: String
}

enum StatefulEntityEnum {
  AGREEMENT
  AGREEMENT_STEP
  COMPANY
  USER
  OWNER
  WORKFLOW
  WORKFLOW_STEP
  TASK_REPORT
  ACCOUNT_MAIL_TEMPLATE
  ACCOUNT_INVOICE
  TASK_REVERT_VERSION
  CONTRACT_CANCELLATION
  COMPANY_PARTNER_SHOP
}

"""
駅
"""
type Station {
  code: String!
  id: ID!
  name: String!
  nameKana: String!
  prefecture: Prefecture!
}

"""
The connection type for Station.
"""
type StationConnection {
  """
  A list of edges.
  """
  edges: [StationEdge]

  """
  A list of nodes.
  """
  nodes: [Station]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type StationEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Station
}

type StatisticData {
  data: [ContributionByDateData!]!
  name: String!
}

"""
Autogenerated input type of StopAccount
"""
input StopAccountInput {
  accountId: ID!
  stop: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of StopAccount
"""
type StopAccountPayload {
  account: Account

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of StopBulkTopic
"""
input StopBulkTopicInput {
  bulkTopicId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of StopBulkTopic
"""
type StopBulkTopicPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  topic: BulkTopic
}

"""
Autogenerated input type of StopPartnerUser
"""
input StopPartnerUserInput {
  partnerUserId: ID!
  stop: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of StopPartnerUser
"""
type StopPartnerUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerUser: PartnerUser
}

"""
Autogenerated input type of StopUser
"""
input StopUserInput {
  userId: ID!
  stop: Boolean!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of StopUser
"""
type StopUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  user: User
}

"""
建物構造
"""
type Structure {
  id: ID!
  name: String!
}

type SummaryReportByMonthlyRoot {
  owner: Owner
  topicCategory: TopicCategory
  yearMonth: Int
}

"""
The connection type for SummaryReportByMonthlyRoot.
"""
type SummaryReportByMonthlyRootConnection {
  """
  A list of edges.
  """
  edges: [SummaryReportByMonthlyRootEdge]

  """
  A list of nodes.
  """
  nodes: [SummaryReportByMonthlyRoot]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type SummaryReportByMonthlyRootEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: SummaryReportByMonthlyRoot
}

type SummaryReportByYearlyRoot {
  owner: Owner
  topicCategory: TopicCategory
  year: Int
}

"""
The connection type for SummaryReportByYearlyRoot.
"""
type SummaryReportByYearlyRootConnection {
  """
  A list of edges.
  """
  edges: [SummaryReportByYearlyRootEdge]

  """
  A list of nodes.
  """
  nodes: [SummaryReportByYearlyRoot]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type SummaryReportByYearlyRootEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: SummaryReportByYearlyRoot
}

type SummaryReportMonthlyAndYearly {
  building: Building
  document: Attachment
}

"""
The connection type for SummaryReportMonthlyAndYearly.
"""
type SummaryReportMonthlyAndYearlyConnection {
  """
  A list of edges.
  """
  edges: [SummaryReportMonthlyAndYearlyEdge]

  """
  A list of nodes.
  """
  nodes: [SummaryReportMonthlyAndYearly]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type SummaryReportMonthlyAndYearlyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: SummaryReportMonthlyAndYearly
}

type TableColumnName {
  description: String
  id: ID!
  name: String!
  setRule: Boolean!
  validate: String
}

"""
テーブル名一覧
"""
type TableName {
  id: ID!
  name: String!
}

type Tag {
  color: String!
  company: Company!
  createdAt: ISO8601DateTime!
  creator: User!
  id: ID!
  name: String!
  updatedAt: ISO8601DateTime!
}

input TagConditions {
  name: String
}

"""
The connection type for Tag.
"""
type TagConnection {
  """
  A list of edges.
  """
  edges: [TagEdge]

  """
  A list of nodes.
  """
  nodes: [Tag]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type TagEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Tag
}

enum TargetClass {
  Resident
  Owner
  PartnerUser
  User
}

type Task {
  companyUsable: Boolean
  createdAt: ISO8601DateTime!
  id: ID!
  nameCompany: String
  namePartner: String
  partnerUsable: Boolean
  updatedAt: ISO8601DateTime!
}

"""
Task Kind
"""
enum TaskKind {
  csvImportRevenueExpense
  csvConverter
}

type TaskReport {
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AttachmentConnection
  createdAt: ISO8601DateTime!
  csvTemplate: CsvTemplate
  deleteRevenueExpenseFrom: Int
  deleteRevenueExpenseTo: Int
  deleteRevenueExpenseType: DeleteRevenueExpenseEnum
  failureMessage: String
  id: ID!
  note: String
  reportable: TaskReportable!
  revenueExpenseVersion: RevenueExpenseVersion
  sendPdf: Boolean
  state: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for TaskReport.
"""
type TaskReportConnection {
  """
  A list of edges.
  """
  edges: [TaskReportEdge]

  """
  A list of nodes.
  """
  nodes: [TaskReport]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type TaskReportEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: TaskReport
}

type TaskReportable {
  id: ID!
  name: String
}

type TaskRevertVersion {
  createdAt: ISO8601DateTime!
  failureMessage: String
  id: ID!
  state: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for TaskRevertVersion.
"""
type TaskRevertVersionConnection {
  """
  A list of edges.
  """
  edges: [TaskRevertVersionEdge]

  """
  A list of nodes.
  """
  nodes: [TaskRevertVersion]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type TaskRevertVersionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: TaskRevertVersion
}

type Topic {
  building: Building
  company: Company!
  freeTalkId: String
  id: ID!
  managerUser: User
  owner: Owner!
  property: Property
  topicCategory: TopicCategory!
}

type TopicCategory {
  id: ID!
  kind: TopicCategoryKind!
  major: TopicCategoryMajor
  minor: TopicCategoryMinor
  name: String!
}

enum TopicCategoryApp {
  OWNER
  RESIDENT
}

type TopicCategoryFrontEndFormat {
  children: [TopicCategoryFrontEndFormat!]
  label: String!
  nextChildren: [TopicCategoryFrontEndFormat!]
  value: ID
}

enum TopicCategoryGroup {
  DOCUMENT_MANAGEMENT
  LEASE_AGREEMENTS
  INCOME_EXPENDITURE_REPORTS
  OTHER_REPORTS
  QUOTATIONS_INVOICES
  OTHERS
}

type TopicCategoryKind {
  id: ID!
  name: String!
}

type TopicCategoryMajor {
  id: ID!
  name: String!
}

enum TopicCategoryMajorId {
  RELATIONSHIP
  VARIOUS_REPORTS
  PROPOSAL
}

type TopicCategoryMinor {
  id: ID!
  name: String!
}

union TopicCategoryUnion = TopicCategory | TopicCategoryFrontEndFormat

enum TopicCategoryUsage {
  """
  TopicCategory for Messages
  """
  MESSAGE

  """
  TopicCategory for Attachments
  """
  ATTACHMENT

  """
  TopicCategory for Agreements
  """
  AGREEMENT
}

enum TopicTypeEnum {
  NORMAL
  WORKFLOW
  AGREEMENT
}

type TotalIncome {
  totalIncome: Int!
  yearMonth: Int!
}

type TotalRevenueOrExpense {
  totalDebit: LongInteger!
  totalExpense: LongInteger!
  totalIncome: LongInteger!
  totalRevenue: LongInteger!
  yearMonth: Int!
}

type TrackingBrowser {
  belongTo: String
  contribution: Int!
  duration: Int!
  eventDate: String!
  eventName: String!
}

input TrackingBrowserConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  orderDirection: BigQueryOrderDirection = DESC
  groupBy: TrackingBrowserEnum
  belongTo: String
}

enum TrackingBrowserEnum {
  BELONGTO
}

type TrackingPage {
  belongTo: String
  contribution: Int!
  duration: Int!
  eventDate: String!
  eventName: String!
  pageName: String
}

input TrackingPageConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  orderDirection: BigQueryOrderDirection = DESC
  groupBy: [TrackingPageEnum!] = []
  belongTo: String
  pageName: [String!]
}

enum TrackingPageEnum {
  PAGENAME
  BELONGTO
}

type Unit {
  id: ID!
  name: String!
}

"""
Unrent Keep Date
"""
enum UnrentKeepDate {
  """
  未契約
  """
  UNCONTRACT

  """
  契約中
  """
  CONTRACTING

  """
  30日未満
  """
  DAY0

  """
  30日以上
  """
  DAY30

  """
  60日以上
  """
  DAY60

  """
  90日以上
  """
  DAY90

  """
  180日以上
  """
  DAY180

  """
  365日以上
  """
  DAY365
}

"""
Autogenerated input type of UpdateAccountHomeTemplate
"""
input UpdateAccountHomeTemplateInput {
  homeTemplateId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateAccountHomeTemplate
"""
type UpdateAccountHomeTemplatePayload {
  accountHomeTemplate: AccountHomeTemplate

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateAdminManager
"""
input UpdateAdminManagerInput {
  adminManagerId: ID!
  name: String
  attachment: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateAdminManager
"""
type UpdateAdminManagerPayload {
  adminManager: AdminManager

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateAdminStaff
"""
input UpdateAdminStaffInput {
  adminStaffId: ID!
  name: String
  attachment: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateAdminStaff
"""
type UpdateAdminStaffPayload {
  adminStaff: AdminStaff

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateAgreement
"""
input UpdateAgreementInput {
  agreementId: ID!
  agreedDate: ISO8601Date
  expirationDate: ISO8601Date
  documentName: String
  agreementSteps: [AgreementStepUpdateInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateAgreement
"""
type UpdateAgreementPayload {
  agreement: Agreement!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateAttachment
"""
input UpdateAttachmentInput {
  attachmentId: ID!
  name: String
  topicCategoryId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateAttachment
"""
type UpdateAttachmentPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateBranchInspector
"""
input UpdateBranchInspectorInput {
  branchInspectorId: ID!
  name: String
  klass: ClientUserKlassEnum
  shopIds: [ID!]
  enableAppLogin: Boolean
  legacyId: String
  attachment: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBranchInspector
"""
type UpdateBranchInspectorPayload {
  branchInspector: BranchInspector

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateBranchManager
"""
input UpdateBranchManagerInput {
  branchManagerId: ID!
  name: String
  klass: ClientUserKlassEnum
  shopIds: [ID!]
  enableOwnerPlan: Boolean
  enableResidentPlan: Boolean
  enablePartnerPlan: Boolean
  legacyId: String
  attachment: AttachmentInput
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBranchManager
"""
type UpdateBranchManagerPayload {
  branchManager: BranchManager

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateBranchShop
"""
input UpdateBranchShopInput {
  branchShopId: ID!
  branchManagerId: ID = null
  staffIdsToAdd: [ID!] = []
  staffIdsToRemove: [ID!] = []
  name: String
  tel: String
  level: Int
  parentId: ID
  zipCode: String
  cityCode: String = null
  address1: String
  address2: String
  pgShopId: String
  pgShopPass: String
  onSunday: ShopBusinessStatusEnum
  onMonday: ShopBusinessStatusEnum
  onTuesday: ShopBusinessStatusEnum
  onWednesday: ShopBusinessStatusEnum
  onThursday: ShopBusinessStatusEnum
  onFriday: ShopBusinessStatusEnum
  onSaturday: ShopBusinessStatusEnum

  """
  if `on_sunday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnSunday: String

  """
  if `on_sunday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnSunday: String

  """
  if `on_monday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnMonday: String

  """
  if `on_monday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnMonday: String

  """
  if `on_tuesday: open`  , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnTuesday: String

  """
  if `on_tuesday: open`  , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnTuesday: String

  """
  if `on_wednesday: open`, required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnWednesday: String

  """
  if `on_wednesday: open`, required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnWednesday: String

  """
  if `on_thursday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnThursday: String

  """
  if `on_thursday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnThursday: String

  """
  if `on_friday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnFriday: String

  """
  if `on_friday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnFriday: String

  """
  if `on_saturday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnSaturday: String

  """
  if `on_saturday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnSaturday: String
  noticeWhenClosed: String
  additionalBusinessHours: [ShopAdditionalBusinessHourInput!] = null
  attachmentIdsToKeep: [ID!]
  legacyId: String
  attachment: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBranchShop
"""
type UpdateBranchShopPayload {
  branchShop: BranchShop

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateBranchStaff
"""
input UpdateBranchStaffInput {
  branchStaffId: ID!
  name: String
  klass: ClientUserKlassEnum
  shopIds: [ID!]
  enableOwnerPlan: Boolean
  enableResidentPlan: Boolean
  enablePartnerPlan: Boolean
  legacyId: String
  attachment: AttachmentInput
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBranchStaff
"""
type UpdateBranchStaffPayload {
  branchStaff: BranchStaff

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateBuilding
"""
input UpdateBuildingInput {
  buildingId: ID!
  chargeBranchShopId: ID
  name: String
  wishSellPrice: LongInteger
  zipCode: String
  cityCode: String
  address: String
  stationName: String
  walkMinute: Int
  landArea: String
  landPrivilegeId: ID
  buildingArea: String
  builtYear: Int
  builtMonth: Int
  structureId: ID
  floor: Int
  buildingRate: Float
  floorAreaRate: Float
  landUseZoneId: ID
  roadDirection1: String
  roadWidth1: String
  roadType1Id: ID
  roadDirection2: String
  roadWidth2: String
  roadType2Id: ID
  handOverId: ID
  purchasePrice: LongInteger
  estimateRent: Int
  note: String
  roomCountManual: Int
  equipmentsAndConditionItems: [EquipmentsAndConditionInput!] = []
  attachmentIdsToKeep: [ID!]
  legacyId: String
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBuilding
"""
type UpdateBuildingPayload {
  building: Building

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateBulkTopic
"""
input UpdateBulkTopicInput {
  bulkTopicId: ID!
  infoTitle: String!
  messageTitle: String!
  messageContent: String!
  topicCategoryId: ID = null
  enabled: Boolean!
  distributionScheduled: Boolean!
  distributionScheduledAt: ISO8601DateTime

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBulkTopic
"""
type UpdateBulkTopicPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  topic: BulkTopic
}

"""
Autogenerated input type of UpdateBulletin
"""
input UpdateBulletinInput {
  bulletinId: ID!
  title: String
  content: String
  visibleFrom: ISO8601DateTime
  attachmentIdsToKeep: [ID!]
  open: Boolean
  pushEnabled: Boolean
  pushSchedulingMethodId: ID
  pushScheduledTo: ISO8601DateTime
  attachments: [AttachmentInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateBulletin
"""
type UpdateBulletinPayload {
  bulletin: Bulletin

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateChatTemplate
"""
input UpdateChatTemplateInput {
  chatTemplateId: ID!
  title: String
  template: String
  accountKlassId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateChatTemplate
"""
type UpdateChatTemplatePayload {
  chatTemplate: ChatTemplate

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateCompany
"""
input UpdateCompanyInput {
  companyId: ID!
  headquartersManagerId: ID = null
  hqShop: HeadquartersShopUpdateInput = null
  name: String
  licenseAdministratorId: ID
  licenseExpression: String
  representativeName: String
  zipCode: String
  cityCode: String = null
  address1: String
  address2: String
  note: String
  yearlyNote: String
  chargeBasic: Int
  chargePerSms: Int
  enableOwnerPlan: Boolean
  chargeOwnerPlan: Int
  enableResidentPlan: Boolean
  chargeResidentPlan: Int
  enableVirtualAccount: Boolean
  chargeVirtualAccount: Int
  enableAgreement: Boolean
  chargeAgreement: Int
  chargePerAgreement: Int
  enablePropertyValuation: Boolean
  chargePropertyValuation: Int
  enableAppCustomize: Boolean
  chargeAppCustomize: Int
  enableHouseMovingConsultation: Boolean
  chargeHouseMovingConsultation: Int
  enableChintaiPay: Boolean
  chargeChintaiPay: Int
  chargeMethodId: ID
  enableFreeDial: Boolean
  chargeFreeDial: Int
  enablePartnerPlan: Boolean
  chargePartnerPlan: Int
  planId: ID
  attachmentIdsToKeep: [ID!]
  removeLogoCompany: Boolean
  isLimitedFunction: Boolean
  attachment: AttachmentInput
  logoCompany: AttachmentInput
  removeLogoOwnerWeb: Boolean
  enableSpecialize: Boolean
  specializeName: String
  ownerAppIconName: String
  ownerAppThemeColor: String
  ownerAppPolicyUrl: String
  ownerAppTermUrl: String
  residentAppIconName: String
  residentAppThemeColor: String
  residentAppPolicyUrl: String
  residentAppTermUrl: String
  ownerWebThemeColor: String
  ownerWebOperatingCompanyUrl: String
  ownerWebPolicyUrl: String
  ownerWebTermUrl: String
  ownerAppTextColor: String
  residentAppTextColor: String
  ownerWebTextColor: String
  logoOwnerWeb: AttachmentInput
  ownerAppBundleId: String
  ownerAppPackageName: String
  residentAppBundleId: String
  residentAppPackageName: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdateCompanyInvoice
"""
input UpdateCompanyInvoiceInput {
  companyInvoiceId: ID!
  yearMonth: Int
  chargeBasic: Int
  chargePerSms: Int
  countSms: Int
  chargeOwnerPlan: Int
  chargeResidentPlan: Int
  chargeVirtualAccount: Int
  chargeAgreement: Int
  chargePerAgreement: Int
  countAgreement: Int
  chargePropertyValuation: Int
  chargeAppCustomize: Int
  chargeHouseMovingConsultation: Int
  chargeInitialAppCustomize: Int
  chargeCsvWork: Int
  chargeInitial: Int
  chargeChintaiPay: Int
  chargeMethodId: ID
  chargeFreeDial: Int
  chargePartnerPlan: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateCompanyInvoice
"""
type UpdateCompanyInvoicePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  companyInvoice: CompanyInvoice
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateCompanyLevelNames
"""
input UpdateCompanyLevelNamesInput {
  companyId: ID
  level0: String!
  level1: String!
  level2: String!
  level3: String!
  level4: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateCompanyLevelNames
"""
type UpdateCompanyLevelNamesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  companyLevelNames: [CompanyLevelName!]
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateCompanyPartnerShop
"""
input UpdateCompanyPartnerShopInput {
  companyPartnerShopId: ID!
  state: CompanyPartnerShopState!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateCompanyPartnerShop
"""
type UpdateCompanyPartnerShopPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  companyPartnerShop: CompanyPartnerShop
  errors: [AttributeError!]!
}

"""
Autogenerated return type of UpdateCompany
"""
type UpdateCompanyPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  company: Company
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateCompanyPaymentInfo
"""
input UpdateCompanyPaymentInfoInput {
  companyId: ID!
  applicationExpirationDate: String!
  notes: String!
  paymentMethod: String!
  pgPaymentApi: String!
  pgShopPass: String
  pgSitePass: String
  productDeliveryMethod: String!
  productDeliveryTime: String!
  requiredAmount: String!
  returnPolicy: String!
  saleQuantity: String!
  url: String!
  pgShopId: String!
  pgSiteId: String!
  keyHash: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateCompanyPaymentInfo
"""
type UpdateCompanyPaymentInfoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  companyPaymentInfo: CompanyPaymentInfo
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateContractCancellation
"""
input UpdateContractCancellationInput {
  contractCancellationId: ID!
  issueTaskId: ID
  partnerShopId: ID
  partnerUserId: ID
  contractCancellationReasonId: ID
  reasonDetail: String
  picId: ID
  cancellationDate: ISO8601Date
  decisionDate: ISO8601DateTime
  reminder: Boolean
  homeStatus: HomeStatusInput
  witnessDate1: ISO8601DateTime
  witnessDate2: ISO8601DateTime
  witnessDate3: ISO8601DateTime
  witnessState: ContractCancellationWitnessState
  keyForRent: String
  keyStoredPlace: String
  state: ContractCancellationState
  partnerState: ContractCancellationPartnerState
  cancellationNotice: Int
  note: String
  requestedDate: ISO8601DateTime
  residentApp: Boolean
  confirmedDate: ISO8601Date
  cancelRegistrationDate: ISO8601Date
  movingDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdateContractCancellationManual
"""
input UpdateContractCancellationManualInput {
  contractCancellationId: ID!
  rawOwner: RawOwnerInput
  rawResident: RawResidentInput
  rawContract: RawContractInput
  picId: ID
  decisionDate: ISO8601DateTime
  cancellationDate: ISO8601Date
  cancellationNotice: Int
  contractCancellationReasonId: ID
  note: String
  witnessDate1: ISO8601DateTime
  witnessDate2: ISO8601DateTime
  witnessDate3: ISO8601DateTime
  partnerUserId: ID
  partnerShopId: ID
  requestedDate: ISO8601DateTime
  witnessState: ContractCancellationWitnessState
  state: ContractCancellationState
  partnerState: ContractCancellationPartnerState
  homeStatus: HomeStatusInput
  keyForRent: String
  keyStoredPlace: String
  reasonDetail: String
  residentApp: Boolean
  confirmedDate: ISO8601Date
  cancelRegistrationDate: ISO8601Date
  movingDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateContractCancellationManual
"""
type UpdateContractCancellationManualPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contractCancellation: ContractCancellation
  errors: [AttributeError!]!
}

"""
Autogenerated return type of UpdateContractCancellation
"""
type UpdateContractCancellationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contractCancellation: ContractCancellation
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateContract
"""
input UpdateContractInput {
  contractId: ID!
  propertyId: ID
  residentId: ID
  ownerId: ID
  individualGuarantorName: String
  corporateGuarantorName: String
  cohabitantNames: String
  startFrom: ISO8601DateTime
  endUntil: ISO8601DateTime
  endDate: ISO8601DateTime
  chargeRent: Int
  chargeManagement: Int
  chargeParking: Int
  chargeAccumulation: Int
  chargeAdditional: Int
  chargeDeposit: Int
  chargeGratuity: Int
  chargeBond: Int
  noticePeriod: Int
  monthsOfRentForRenewal: Int
  note: String
  provisionIdsToAdd: [ID!] = []
  provisionIdsToRemove: [ID!] = []
  legacyId: String
  sublease: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateContract
"""
type UpdateContractPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contract: Contract
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateContractProvision
"""
input UpdateContractProvisionInput {
  contractProvisionId: ID!
  provision: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateContractProvision
"""
type UpdateContractProvisionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contractProvision: ContractProvision
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateCsvMapping
"""
input UpdateCsvMappingInput {
  csvRuleConvertMappingId: ID!
  companyId: ID!
  name: String!
  description: String
  csvRuleConvertMappingItemIdsToKeep: [ID!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdateCsvMappingItem
"""
input UpdateCsvMappingItemInput {
  csvRuleConvertMappingItemId: ID!
  csvRuleConvertMappingId: ID!
  valueInput: String!
  valueOutput: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateCsvMappingItem
"""
type UpdateCsvMappingItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  csvRuleConvertMappingItem: CsvRuleConvertMappingItem
  errors: [AttributeError!]!
}

"""
Autogenerated return type of UpdateCsvMapping
"""
type UpdateCsvMappingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  csvRuleConvertMapping: CsvRuleConvertMapping
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateCsvTemplate
"""
input UpdateCsvTemplateInput {
  csvTemplateId: ID!
  companyId: ID!
  templateName: String!
  csvTemplateOptions: [CsvTemplateOptionInput!]
  csvTemplateMappingIdsToKeep: [ID!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdateCsvTemplateMappings
"""
input UpdateCsvTemplateMappingsInput {
  csvTemplateMappings: [CsvTemplateMappingInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateCsvTemplateMappings
"""
type UpdateCsvTemplateMappingsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [[AttributeError!]!]!
  mappings: [CsvTemplateMapping!]
}

"""
Autogenerated return type of UpdateCsvTemplate
"""
type UpdateCsvTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  csvTemplate: CsvTemplate
  errors: [AttributeError!]!
}

"""
Autogenerated input type of UpdateDebitItem
"""
input UpdateDebitItemInput {
  itemId: ID!
  buildingId: ID
  contractId: ID
  kindId: ID
  baseAmount: Int
  taxAmount: Int
  yearMonthAccrual: Int
  note: String = null
  companyId: ID
  propertyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateDebitItem
"""
type UpdateDebitItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  item: DebitItem
}

"""
Autogenerated input type of UpdateEstimateEvidence
"""
input UpdateEstimateEvidenceInput {
  estimateEvidenceId: ID!
  issueTaskId: ID!
  comment: String
  title: String
  attachment: AttachmentInput

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateEstimateEvidence
"""
type UpdateEstimateEvidencePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateEvidence: EstimateEvidence
}

"""
Autogenerated input type of UpdateEstimate
"""
input UpdateEstimateInput {
  estimateId: ID!
  issueTaskId: ID!
  title: String
  estimatedRequestDate: ISO8601Date
  constructionPeriod: Int
  companyConstructionPeriod: Int
  orderDate: ISO8601Date
  completionDate: ISO8601Date
  paymentDeadline: ISO8601Date
  isSendingEstimate: Boolean = false
  discount: Float
  actualWitnessDate: ISO8601DateTime
  reportContent: String
  reportCompletionDate: ISO8601Date
  estimatedCreationDate: ISO8601Date
  companyInvoiceSendDate: ISO8601Date
  partnerInvoiceSendDate: ISO8601Date
  orderReceiptDate: ISO8601Date
  residentAccepted: Boolean
  invoiceReceiptDate: ISO8601Date
  estimatedReceiptDate: ISO8601Date
  expectedCompletionDate: ISO8601Date
  paymentDate: ISO8601Date
  reportCreationDate: ISO8601Date

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateEstimate
"""
type UpdateEstimatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimate: Estimate
}

"""
Autogenerated input type of UpdateEstimateRepairItem
"""
input UpdateEstimateRepairItemInput {
  estimateRepairItemId: ID!
  issueTaskId: ID!
  repairItemId: ID
  qty: Float
  note: String
  partnerPrice: Float
  companyPrice: Float
  companyBurdenRate: Float
  ownerBurdenRate: Float
  residentBurdenRate: Float

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateEstimateRepairItem
"""
type UpdateEstimateRepairItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateRepairItem: EstimateRepairItem
}

"""
Autogenerated input type of UpdateEstimateSetting
"""
input UpdateEstimateSettingInput {
  estimateId: ID!
  issueTaskId: ID!
  tax: Float
  roundTaxKindId: ID
  roundValueKindId: ID
  roundUnitKindId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateEstimateSetting
"""
type UpdateEstimateSettingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  estimateSetting: EstimateSetting
}

"""
Autogenerated input type of UpdateFacilityManual
"""
input UpdateFacilityManualInput {
  facilityManualId: ID!
  buildingId: ID
  propertyId: ID
  name: String
  attachment: AttachmentInput = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateFacilityManual
"""
type UpdateFacilityManualPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  facilityManual: FacilityManual
}

"""
Autogenerated input type of UpdateFaqCategory
"""
input UpdateFaqCategoryInput {
  faqCategoryId: ID!
  name: String
  shopId: ID
  userId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateFaqCategory
"""
type UpdateFaqCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faqCategory: FaqCategory
}

"""
Autogenerated input type of UpdateFaqCategoryPosition
"""
input UpdateFaqCategoryPositionInput {
  options: [FaqCategoryPositionInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateFaqCategoryPosition
"""
type UpdateFaqCategoryPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faqCategories: [FaqCategory!]
}

"""
Autogenerated input type of UpdateFaq
"""
input UpdateFaqInput {
  faqId: ID!
  faqCategoryId: ID
  question: String
  answer: String
  enableContact: Boolean
  enableFrequently: Boolean
  enableTopic: Boolean
  faqTelId: ID
  url: String
  attachments: [AttachmentInput!]
  attachmentIdsToKeep: [ID!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateFaq
"""
type UpdateFaqPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  faq: Faq
}

"""
Autogenerated input type of UpdateGroup
"""
input UpdateGroupInput {
  groupId: ID!
  name: String
  membersToAdd: [ID!] = []
  membersToRemove: [ID!] = []

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateGroup
"""
type UpdateGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  group: Group
}

"""
Autogenerated input type of UpdateHeadquartersManager
"""
input UpdateHeadquartersManagerInput {
  headquartersManagerId: ID!
  name: String
  klass: ClientUserKlassEnum
  enableOwnerPlan: Boolean
  enableResidentPlan: Boolean
  enablePartnerPlan: Boolean
  legacyId: String
  attachment: AttachmentInput
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateHeadquartersManager
"""
type UpdateHeadquartersManagerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  headquartersManager: HeadquartersManager
}

"""
Autogenerated input type of UpdateHeadquartersShop
"""
input UpdateHeadquartersShopInput {
  headquartersShopId: ID!
  headquartersManagerId: ID = null
  staffIdsToAdd: [ID!] = []
  staffIdsToRemove: [ID!] = []
  name: String
  tel: String
  pgShopId: String
  pgShopPass: String
  onSunday: ShopBusinessStatusEnum
  onMonday: ShopBusinessStatusEnum
  onTuesday: ShopBusinessStatusEnum
  onWednesday: ShopBusinessStatusEnum
  onThursday: ShopBusinessStatusEnum
  onFriday: ShopBusinessStatusEnum
  onSaturday: ShopBusinessStatusEnum

  """
  if `on_sunday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnSunday: String

  """
  if `on_sunday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnSunday: String

  """
  if `on_monday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnMonday: String

  """
  if `on_monday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnMonday: String

  """
  if `on_tuesday: open`  , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnTuesday: String

  """
  if `on_tuesday: open`  , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnTuesday: String

  """
  if `on_wednesday: open`, required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnWednesday: String

  """
  if `on_wednesday: open`, required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnWednesday: String

  """
  if `on_thursday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnThursday: String

  """
  if `on_thursday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnThursday: String

  """
  if `on_friday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnFriday: String

  """
  if `on_friday: open`   , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnFriday: String

  """
  if `on_saturday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openFromHhmmOnSaturday: String

  """
  if `on_saturday: open` , required and should be 4-digits form like `0800` stands for 8:00am
  """
  openUntilHhmmOnSaturday: String
  noticeWhenClosed: String
  additionalBusinessHours: [ShopAdditionalBusinessHourInput!] = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateHeadquartersShop
"""
type UpdateHeadquartersShopPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  headquartersShop: HeadquartersShop
}

"""
Autogenerated input type of UpdateHeadquartersStaff
"""
input UpdateHeadquartersStaffInput {
  headquartersStaffId: ID!
  name: String
  klass: ClientUserKlassEnum
  enableOwnerPlan: Boolean
  enableResidentPlan: Boolean
  enablePartnerPlan: Boolean
  legacyId: String
  attachment: AttachmentInput
  enableAppLogin: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateHeadquartersStaff
"""
type UpdateHeadquartersStaffPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  headquartersStaff: HeadquartersStaff
}

"""
Autogenerated input type of UpdateHomeHeader
"""
input UpdateHomeHeaderInput {
  homeHeaderId: ID!
  title: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateHomeHeader
"""
type UpdateHomeHeaderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  homeHeader: HomeHeader
}

"""
Autogenerated input type of UpdateHomeTemplateContent
"""
input UpdateHomeTemplateContentInput {
  homeTemplateId: ID!
  homeTemplateDetails: [JSON!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateHomeTemplateContent
"""
type UpdateHomeTemplateContentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  homeTemplate: HomeTemplate
}

"""
Autogenerated input type of UpdateHomeTemplate
"""
input UpdateHomeTemplateInput {
  homeTemplateId: ID!
  name: String!
  preferences: JSON!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateHomeTemplate
"""
type UpdateHomeTemplatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  homeTemplate: HomeTemplate
}

"""
Autogenerated input type of UpdateInspectionReportAndSample
"""
input UpdateInspectionReportAndSampleInput {
  inspectionReportId: ID!
  ownerId: ID
  buildingId: ID
  propertyId: ID
  reportDate: ISO8601Date
  items: [InspectionItemInput!] = []
  itemPosition: JSON

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateInspectionReportAndSample
"""
type UpdateInspectionReportAndSamplePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  inspectionReport: InspectionReport
}

"""
Autogenerated input type of UpdateInspectionReport
"""
input UpdateInspectionReportInput {
  inspectionReportId: ID!
  ownerId: ID
  buildingId: ID
  propertyId: ID
  reportDate: ISO8601Date
  reportUserId: ID
  inspectionReportStatusId: ID
  claim: InspectionClaimInput = null
  items: [InspectionItemInput!] = []
  inspectionReportImages: [ID!] = []
  workflowApprovableIds: [ID!] = []

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateInspectionReport
"""
type UpdateInspectionReportPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  inspectionReport: InspectionReport
}

"""
Autogenerated input type of UpdateIssueCategory
"""
input UpdateIssueCategoryInput {
  issueCategoryId: ID!
  isActive: Boolean
  partnerActive: Boolean
  state: IssueCategoryState
  partnerState: IssueCategoryPartnerState

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateIssueCategory
"""
type UpdateIssueCategoryPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  issueCategory: IssueCategory
}

"""
Autogenerated input type of UpdateIssueTask
"""
input UpdateIssueTaskInput {
  issueTaskId: ID!
  taskId: ID
  state: IssueTaskState
  dutyKindId: ID
  picId: ID
  picType: TargetClass
  usingApp: Boolean
  expiredAt: ISO8601DateTime
  comment: String
  witnessRequest: WitnessRequestInput = null
  witnessAdjustment: WitnessAdjustmentInput = null
  residentBurdenEstimate: ResidentBurdenEstimateInput = null
  displayOrderPosition: Int
  witnessReceivedDate: ISO8601Date
  stateEvent: IssueTaskStateEvents

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateIssueTask
"""
type UpdateIssueTaskPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  issueTask: IssueTask
}

"""
Autogenerated input type of UpdateNotice
"""
input UpdateNoticeInput {
  noticeId: ID!
  title: String
  content: String
  receiverTypeId: ID

  """
  公開開始日
  """
  visibleFrom: ISO8601DateTime

  """
  公開終了日
  """
  visibleUntil: ISO8601DateTime
  enabled: Boolean

  """
  自動送信：True、手動送信：False
  """
  reserved: Boolean
  pushSchedulingMethodId: ID
  pushReservedAt: ISO8601DateTime
  initialOwners: [ID!] = null
  initialShopId: ID = null
  initialResidents: [ID!] = null
  attachmentIdsToKeep: [ID!]
  attachments: [AttachmentInput!]
  noticePriorityId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateNotice
"""
type UpdateNoticePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  notice: Notice
}

"""
Autogenerated input type of UpdateOwner
"""
input UpdateOwnerInput {
  ownerId: ID!
  nameFamily: String
  nameFirst: String
  nameFamilyKana: String
  nameFirstKana: String
  email: String
  telMobile: String
  telFixed: String
  zipCode: String
  cityCode: String
  address1: String
  address2: String
  chargeUserId: ID
  kindId: ID
  genderId: ID
  companyName: String
  birthday: ISO8601Date
  companyNameKana: String
  tagIds: [ID!] = null
  closingMonth: Int
  legacyId: String
  closingDay: Int
  contactPriorityId: ID
  attachmentIdsToKeep: [ID!]
  chatChargeUsers: [ChatChargeUserInput!] = null

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateOwner
"""
type UpdateOwnerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  owner: Owner
}

"""
Autogenerated input type of UpdatePartnerBranchShop
"""
input UpdatePartnerBranchShopInput {
  partnerBranchShopId: ID!
  name: String
  telMobile: String
  partnerBranchManagerId: ID
  zipCode: String
  cityCode: String = null
  address1: String
  address2: String
  title: String
  description: String
  tags: [String!]
  isWitness: Boolean
  openFromHhmm: [OpenHhmmInput!]
  openUntilHhmm: [OpenHhmmInput!]
  note: String
  isPublicSetting: Boolean
  workableIds: [ID!]
  availableAreas: [String!]
  attachmentIdsToKeep: [ID!]
  attachments: [AttachmentInput!] = []
  parentId: ID
  shopLevel: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdatePartnerBranchShop
"""
type UpdatePartnerBranchShopPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerBranchShop: PartnerBranchShop
}

"""
Autogenerated input type of UpdatePartnerBranchUser
"""
input UpdatePartnerBranchUserInput {
  partnerBranchUserId: ID!
  name: String
  tel: String
  klass: PartnerBranchUserKlassEnum
  partnerShopIds: [ID!]
  isManager: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdatePartnerBranchUser
"""
type UpdatePartnerBranchUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerBranchUser: PartnerBranchUser
}

"""
Autogenerated input type of UpdatePartnerCompanyLevelNames
"""
input UpdatePartnerCompanyLevelNamesInput {
  partnerCompanyId: ID
  level0: String!
  level1: String!
  level2: String!
  level3: String!
  level4: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdatePartnerCompanyLevelNames
"""
type UpdatePartnerCompanyLevelNamesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerCompanyLevelNames: [PartnerCompanyLevelName!]
}

"""
Autogenerated input type of UpdatePartnerHeadquartersUser
"""
input UpdatePartnerHeadquartersUserInput {
  partnerHeadquartersUserId: ID!
  name: String
  tel: String
  klass: PartnerHeadquartersUserKlassEnum
  isManager: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdatePartnerHeadquartersUser
"""
type UpdatePartnerHeadquartersUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerHeadquartersUser: PartnerHeadquartersUser
}

"""
Autogenerated input type of UpdatePartner
"""
input UpdatePartnerInput {
  partnerCompanyId: ID!
  name: String
  representativeName: String
  partnerHqShop: PartnerHeadquartersShopInput = {}
  partnerHqManagerId: ID = null
  attachmentIdsToKeep: [ID!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdatePartner
"""
type UpdatePartnerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  partnerCompany: PartnerCompany
}

"""
Autogenerated input type of UpdatePassword
"""
input UpdatePasswordInput {
  currentPassword: String!
  password: String!
  passwordConfirmation: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdatePassword
"""
type UpdatePasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  session: Session!
}

"""
Autogenerated input type of UpdateProperty
"""
input UpdatePropertyInput {
  propertyId: ID!
  ownerId: ID
  name: String
  zipCode: String
  cityCode: String
  address1: String
  address2: String
  landPrivilegeId: ID
  roomArea: String
  balconyArea: String
  structureId: ID
  floor: Int
  roomLayoutId: ID
  administrativeTypeId: ID
  handOverId: ID
  note: String
  equipmentsAndConditionItems: [EquipmentsAndConditionInput!] = []
  legacyId: String
  estimateRent: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateProperty
"""
type UpdatePropertyPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  property: Property
}

"""
Autogenerated input type of UpdateQuestionnaire
"""
input UpdateQuestionnaireInput {
  questionnaireId: ID!
  title: String
  openFrom: ISO8601DateTime
  openUntil: ISO8601DateTime
  open: Boolean
  pushEnabled: Boolean
  pushSchedulingMethodId: ID
  pushScheduledTo: ISO8601DateTime
  header: String
  footer: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateQuestionnaire
"""
type UpdateQuestionnairePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  questionnaire: Questionnaire
}

"""
Autogenerated input type of UpdateQuickQuestionnaire
"""
input UpdateQuickQuestionnaireInput {
  quickQuestionnaireId: ID!
  title: String
  quickQuestionnaireKindId: ID
  endContractFrom: ISO8601Date
  endContractTo: ISO8601Date
  visibleFrom: ISO8601DateTime
  visibleTo: ISO8601DateTime
  enabled: Boolean
  question: String
  footer: String
  quickQuestionnaireOptions: [QuickQuestionnaireOptionUpdateInput!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateQuickQuestionnaire
"""
type UpdateQuickQuestionnairePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  quickQuestionnaire: QuickQuestionnaire
}

"""
Autogenerated input type of UpdateRelocation
"""
input UpdateRelocationInput {
  relocationId: ID!
  relocationStatesId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateRelocation
"""
type UpdateRelocationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  relocation: Relocation
}

"""
Autogenerated input type of UpdateRepairItem
"""
input UpdateRepairItemInput {
  repairItemId: ID!
  name: String
  unitId: ID
  taxRate: Float
  partnerPrice: Float
  companyPrice: Float
  note: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateRepairItem
"""
type UpdateRepairItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  repairItem: RepairItem
}

"""
Autogenerated input type of UpdateResident
"""
input UpdateResidentInput {
  residentId: ID!
  nameFamily: String
  nameFirst: String
  nameFamilyKana: String
  nameFirstKana: String
  email: String = null
  telFixed: String
  telMobile: String = null
  zipCode: String
  cityCode: String
  address1: String
  address2: String
  chargeUserId: ID
  kindId: ID
  genderId: ID
  companyName: String
  birthday: ISO8601Date
  companyNameKana: String
  tagIds: [ID!] = null
  legacyId: String
  contactPriorityId: ID
  attachmentIdsToKeep: [ID!]

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateResident
"""
type UpdateResidentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  resident: Resident
}

"""
Autogenerated input type of UpdateRevenueExpenseItem
"""
input UpdateRevenueExpenseItemInput {
  itemId: ID!
  buildingId: ID
  contractId: ID
  kindId: ID
  miscName: String = null
  baseAmount: Int
  taxAmount: Int
  yearMonthAccrual: Int
  sendDate: ISO8601DateTime
  note: String = null
  companyId: ID
  propertyId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateRevenueExpenseItem
"""
type UpdateRevenueExpenseItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  item: RevenueExpenseItem
}

"""
Autogenerated input type of UpdateTag
"""
input UpdateTagInput {
  tagId: ID!
  name: String
  color: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateTag
"""
type UpdateTagPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  tag: Tag
}

"""
Autogenerated input type of UpdateTopic
"""
input UpdateTopicInput {
  topicId: ID!
  managerUserId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateTopic
"""
type UpdateTopicPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [AttributeError!]!
  topic: Topic
}

"""
Autogenerated input type of UpdateTotalProcessingWorkflow
"""
input UpdateTotalProcessingWorkflowInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateTotalProcessingWorkflow
"""
type UpdateTotalProcessingWorkflowPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  totalProcessingWorkflow: Int!
}

"""
不動産の用途
"""
type Usage {
  id: ID!
  name: String!
}

type User {
  avatarUrl: String!
  company: Company!
  confirmed: Boolean!
  createdAt: ISO8601DateTime!
  email: String
  enableAppLogin: Boolean!
  enableOwnerPlan: Boolean!
  enablePartnerPlan: Boolean!
  enableResidentPlan: Boolean!
  id: ID!
  klass: String!
  name: String
  onlineStatus: Boolean!
  stop: Boolean!
  updatedAt: ISO8601DateTime!
  userFirebaseId: String!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]

  """
  A list of nodes.
  """
  nodes: [User]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

type UserEngagement {
  appInfoId: String!
  eventDate: String!
  eventName: String!
  totalEngagementTimeMsec: Int!
}

input UserEngagementConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
  orderDirection: BigQueryOrderDirection = DESC
  orderBy: [UserEngagementEnum!] = [EVENTDATE]
}

type UserEngagementCounting {
  eventName: String!
  usingAppTimes: Int!
}

input UserEngagementCountingConditions {
  fromDate: ISO8601Date!
  toDate: ISO8601Date!
}

enum UserEngagementEnum {
  EVENTDATE
  EVENTNAME
  APPINFOID
  ENGAGEMENTTIME
}

"""
未入金管理
"""
type UserNotice {
  content: String
  createdAt: ISO8601DateTime!
  enabled: Boolean
  id: ID!
  noticeKind: NoticeKind!
  ownerEnabled: Boolean
  partnerEnabled: Boolean
  residentEnabled: Boolean
  title: String
  updatedAt: ISO8601DateTime!
  url: String
}

"""
空室改善提案
"""
type VacantProperty {
  address1: String
  address2: String
  administrativeType: AdministrativeType
  balconyArea: String
  building: Building!
  buildingMergedEquipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  city: City
  company: Company!
  contract: Contract
  createdAt: ISO8601DateTime!
  debited: Boolean

  """
  最後契約日
  """
  endUntil: ISO8601DateTime
  equipmentsAndConditionItems: [EquipmentsAndConditionItem!]
  estimateRent: Int
  floor: Int
  handOver: HandOver
  id: ID!
  images(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "name", direction: "asc" }
  ): AttachmentConnection
  kind: PropertyKind!
  landPrivilege: LandPrivilege
  lastFollowedUpAt: ISO8601DateTime
  legacyId: String
  name: String
  note: String
  owner: Owner
  prefecture: Prefecture
  revenueExpenseItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    yearMonthAccrual: Int = null
  ): RevenueExpenseItemConnection
  roomArea: String
  roomLayout: RoomLayout
  structure: Structure
  unrentDates: UnrentKeepDate!
  updatedAt: ISO8601DateTime!
  virtualBank: VirtualBank
  zipCode: String
}

"""
The connection type for VacantProperty.
"""
type VacantPropertyConnection {
  """
  A list of edges.
  """
  edges: [VacantPropertyEdge]

  """
  A list of nodes.
  """
  nodes: [VacantProperty]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type VacantPropertyEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: VacantProperty
}

input VacantPropertyOrder {
  by: String!
  direction: String!
}

"""
売却査定不動産種類
"""
type ValuationKind {
  id: ID!
  name: String!
}

"""
バーチャル口座
"""
type VirtualBank {
  accountName: String!
  accountNumber: String!
  branchCode: String!
  branchName: String!
  company: Company!
  createdAt: ISO8601DateTime!
  id: ID!
  property: Property!
  updatedAt: ISO8601DateTime!
  vaId: String!
  virtualBankIncomes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VirtualBankIncomeConnection
}

input VirtualBankConditions {
  accountName: String
  branchCode: String
  branchName: String
  accountNumber: String
}

"""
The connection type for VirtualBank.
"""
type VirtualBankConnection {
  """
  A list of edges.
  """
  edges: [VirtualBankEdge]

  """
  A list of nodes.
  """
  nodes: [VirtualBank]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type VirtualBankEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: VirtualBank
}

"""
バーチャル口座入金履歴
"""
type VirtualBankIncome {
  amount: Int!
  createdAt: ISO8601DateTime!
  id: ID!
  itemKey: String!
  paymentBankName: String!
  paymentBranchName: String!
  receivedDate: ISO8601DateTime!
  remarks: String!
  remitterName: String!
  updatedAt: ISO8601DateTime!
  virtualBank: VirtualBank!
}

input VirtualBankIncomeConditions {
  receivedDate: RangeDate
}

"""
The connection type for VirtualBankIncome.
"""
type VirtualBankIncomeConnection {
  """
  A list of edges.
  """
  edges: [VirtualBankIncomeEdge]

  """
  A list of nodes.
  """
  nodes: [VirtualBankIncome]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type VirtualBankIncomeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: VirtualBankIncome
}

input WitnessAdjustmentInput {
  decisionDate: ISO8601DateTime
  decisionType: DecisionEnum
  witnessComment: String
}

input WitnessRequestInput {
  partnerShopId: ID!
  nameEstimate: String
}

type WorkCategory {
  companyUsable: Boolean
  createdAt: ISO8601DateTime!
  id: ID!
  nameCompany: String
  namePartner: String
  parentCategory: WorkCategory
  partnerUsable: Boolean
  subCategories: [WorkCategory!]
  tasks: [Task!]
  updatedAt: ISO8601DateTime!
}

input WorkCategoryInput {
  workCategoryId: ID!
  state: String
  isActive: Boolean
}

"""
WorkCategory group
"""
enum WorkCategoryName {
  FOR_CREATE_ISSUE
}

type Workable {
  id: ID!
  name: String!
}

"""
ワークフロー
"""
type Workflow {
  appliedAt: ISO8601DateTime
  attachments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "created_at", direction: "asc" }
  ): AttachmentConnection
  body: String
  building: Building
  chargeUser: BranchStaff
  company: Company!
  copyableFlag: Boolean
  createdAt: ISO8601DateTime!
  currentApprovable: AccountUser
  firestoreTopicId: String
  id: ID!
  inspectionReport: InspectionReport
  owner: Owner
  property: Property
  sid: String
  state: FlowState
  terminatable: AccountUser
  terminatedAt: ISO8601DateTime
  title: String
  topicCategory: TopicCategory!
  updatedAt: ISO8601DateTime!
  visibleFromAccount: Boolean
  workflowSteps(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    order: Order = { by: "number", direction: "asc" }
  ): WorkflowStepConnection!
  workflowType: WorkflowType
  workflowable: Workflowable
}

"""
The connection type for Workflow.
"""
type WorkflowConnection {
  """
  A list of edges.
  """
  edges: [WorkflowEdge]

  """
  A list of nodes.
  """
  nodes: [Workflow]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type WorkflowEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Workflow
}

"""
ワークフローの前後のID
"""
type WorkflowPrevNext {
  nextId: ID
  prevId: ID
}

"""
ワークフローステップ
"""
type WorkflowStep {
  approvable: Approvable
  approvableId: Int
  approvableType: String
  comment: String
  createdAt: ISO8601DateTime!
  final: Boolean
  id: ID!
  number: Int
  state: String
  updatedAt: ISO8601DateTime!
  workflowId: Int!
}

"""
The connection type for WorkflowStep.
"""
type WorkflowStepConnection {
  """
  A list of edges.
  """
  edges: [WorkflowStepEdge]

  """
  A list of nodes.
  """
  nodes: [WorkflowStep]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
  totalCountWithDiscarded: Int!
}

"""
An edge in a connection.
"""
type WorkflowStepEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: WorkflowStep
}

"""
ワークフロー
"""
type WorkflowType {
  id: ID!
  name: String!
}

union Workflowable = IssueTask

input WorkflowsConditions {
  sid: String
  appliedAt: RangeDate
  chargeUserId: ID
  ownerId: ID
  buildingId: ID
  propertyId: ID
  topicCategories: [ID!] = []
  title: String
  body: String
  currentApprovableId: ID
  states: [FlowState!] = []
  terminatedAt: RangeDate
  terminatableId: ID
  visibleFromAccount: Boolean
  propertyKindId: ID
  buildingOrOwnerName: String
}
